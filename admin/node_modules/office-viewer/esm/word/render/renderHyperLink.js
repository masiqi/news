import { __values } from 'tslib';
import { createElement, appendChild } from '../../util/dom.js';
import { Run } from '../../openxml/word/Run.js';
import renderRun from './renderRun.js';

/**
 * 渲染链接
 */
function renderHyperLink(word, hyperlink, paragraph) {
    var e_1, _a;
    var a = createElement('a');
    if (hyperlink.relation) {
        var rel = hyperlink.relation;
        if (rel && rel.targetMode === 'External') {
            a.href = rel.target;
            a.target = '_blank';
        }
    }
    if (hyperlink.anchor) {
        a.href = '#' + hyperlink.anchor;
    }
    if (hyperlink.tooltip) {
        a.title = hyperlink.tooltip;
    }
    try {
        for (var _b = __values(hyperlink.children), _c = _b.next(); !_c.done; _c = _b.next()) {
            var child = _c.value;
            if (child instanceof Run) {
                var span = renderRun(word, child, paragraph);
                appendChild(a, span);
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return a;
}

export { renderHyperLink };
