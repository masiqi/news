import { __values } from 'tslib';
import { appendChild } from '../../util/dom.js';
import { Run } from '../../openxml/word/Run.js';
import { BookmarkStart } from '../../openxml/word/Bookmark.js';
import { Hyperlink } from '../../openxml/word/Hyperlink.js';
import renderRun from './renderRun.js';
import { renderHyperLink } from './renderHyperLink.js';
import { renderBookmarkStart } from './renderBookmark.js';

/**
 * 渲染 smart tag
 */
function renderInlineText(word, inlineText, parent) {
    var e_1, _a;
    try {
        for (var _b = __values(inlineText.children), _c = _b.next(); !_c.done; _c = _b.next()) {
            var child = _c.value;
            if (child instanceof Run) {
                appendChild(parent, renderRun(word, child));
            }
            else if (child instanceof BookmarkStart) {
                appendChild(parent, renderBookmarkStart(word, child));
            }
            else if (child instanceof Hyperlink) {
                var hyperlink = renderHyperLink(word, child);
                appendChild(parent, hyperlink);
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
}

export { renderInlineText as default };
