import { __values } from 'tslib';
import { Paragraph } from '../../openxml/word/Paragraph.js';
import renderParagraph from './renderParagraph.js';
import { createElement, appendChild } from '../../util/dom.js';
import renderTable from './renderTable.js';
import { Table } from '../../openxml/word/Table.js';

/**
 * 渲染 header 内容
 */
function renderHeader(word, header) {
    var e_1, _a;
    var headerEl = createElement('div');
    try {
        for (var _b = __values(header.children), _c = _b.next(); !_c.done; _c = _b.next()) {
            var child = _c.value;
            if (child instanceof Paragraph) {
                var p = renderParagraph(word, child, true, true);
                appendChild(headerEl, p);
            }
            else if (child instanceof Table) {
                var table = renderTable(word, child);
                appendChild(headerEl, table);
            }
            else {
                console.warn('unknown child', child);
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return headerEl;
}

export { renderHeader };
