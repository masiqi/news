import { __values } from 'tslib';
import { parseSize, LengthUsage, convertAngle } from '../../word/parse/parseSize.js';

/**
 * http://webapp.docx4java.org/OnlineDemo/ecma376/DrawingML/xfrm_2.html
 */
var Transform = /** @class */ (function () {
    function Transform() {
    }
    Transform.fromXML = function (word, element) {
        var e_1, _a;
        var transform = new Transform();
        try {
            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                var tagName = child.tagName;
                switch (tagName) {
                    case 'a:off':
                        transform.off = {
                            x: parseSize(child, 'x', LengthUsage.Emu),
                            y: parseSize(child, 'y', LengthUsage.Emu)
                        };
                        break;
                    case 'a:ext':
                        transform.ext = {
                            cx: parseSize(child, 'cx', LengthUsage.Emu),
                            cy: parseSize(child, 'cy', LengthUsage.Emu)
                        };
                        break;
                    case 'a:chOff':
                        transform.chOff = {
                            x: parseSize(child, 'x', LengthUsage.Emu),
                            y: parseSize(child, 'y', LengthUsage.Emu)
                        };
                        break;
                    case 'a:chExt':
                        transform.chExt = {
                            cx: parseSize(child, 'cx', LengthUsage.Emu),
                            cy: parseSize(child, 'cy', LengthUsage.Emu)
                        };
                        break;
                    default:
                        console.warn('Transform: Unknown tag ', tagName, child);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        var rot = element.getAttribute('rot');
        if (rot) {
            transform.rot = convertAngle(rot);
        }
        return transform;
    };
    return Transform;
}());

export { Transform };
