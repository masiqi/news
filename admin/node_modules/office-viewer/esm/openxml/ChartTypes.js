import { CT_ExtensionList_Attributes } from '../excel/types/CT_ExtensionList.js';

var CT_OfficeArtExtension_Attributes = {
    __any__: {
        type: 'any'
    },
    uri: {
        type: 'string'
    }
};
var CT_OfficeArtExtensionList_Attributes = {
    ext: {
        type: 'child',
        childAttributes: CT_OfficeArtExtension_Attributes,
        childIsArray: true
    }
};
var CT_PositiveFixedPercentage_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_ComplementTransform_Attributes = {};
var CT_InverseTransform_Attributes = {};
var CT_GrayscaleTransform_Attributes = {};
var CT_FixedPercentage_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_PositivePercentage_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_PositiveFixedAngle_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_Angle_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_Percentage_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_GammaTransform_Attributes = {};
var CT_InverseGammaTransform_Attributes = {};
var CT_ScRgbColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'child',
        childAttributes: CT_PositiveFixedAngle_Attributes
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    },
    r: {
        type: 'string'
    },
    g: {
        type: 'string'
    },
    b: {
        type: 'string'
    }
};
var CT_SRgbColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'child',
        childAttributes: CT_PositiveFixedAngle_Attributes
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    },
    val: {
        type: 'string'
    }
};
var CT_HslColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'int'
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'string'
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'string'
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    }
};
var CT_SystemColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'child',
        childAttributes: CT_PositiveFixedAngle_Attributes
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    },
    val: {
        type: 'string'
    },
    lastClr: {
        type: 'string'
    }
};
var CT_SchemeColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'child',
        childAttributes: CT_PositiveFixedAngle_Attributes
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    },
    val: {
        type: 'string'
    }
};
var CT_PresetColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'child',
        childAttributes: CT_PositiveFixedAngle_Attributes
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    },
    val: {
        type: 'string'
    }
};
var CT_Color_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    }
};
var CT_TextFont_Attributes = {
    typeface: {
        type: 'string'
    },
    panose: {
        type: 'string'
    },
    pitchFamily: {
        type: 'int',
        defaultValue: '0'
    },
    charset: {
        type: 'int',
        defaultValue: '1'
    }
};
var CT_EffectList_Attributes = {};
var CT_BlurEffect_Attributes = {
    rad: {
        type: 'int',
        defaultValue: '0'
    },
    grow: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_FillOverlayEffect_Attributes = {};
var CT_NoFillProperties_Attributes = {};
var CT_SolidColorFillProperties_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    }
};
var CT_GradientStop_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    },
    pos: {
        type: 'string'
    }
};
var CT_GradientStopList_Attributes = {
    gs: {
        type: 'child',
        childAttributes: CT_GradientStop_Attributes,
        childIsArray: true
    }
};
var CT_LinearShadeProperties_Attributes = {
    ang: {
        type: 'int'
    },
    scaled: {
        type: 'boolean'
    }
};
var CT_RelativeRect_Attributes = {
    l: {
        type: 'string',
        defaultValue: '0%'
    },
    t: {
        type: 'string',
        defaultValue: '0%'
    },
    r: {
        type: 'string',
        defaultValue: '0%'
    },
    b: {
        type: 'string',
        defaultValue: '0%'
    }
};
var CT_PathShadeProperties_Attributes = {
    fillToRect: {
        type: 'child',
        childAttributes: CT_RelativeRect_Attributes
    },
    path: {
        type: 'string'
    }
};
var CT_GradientFillProperties_Attributes = {
    gsLst: {
        type: 'child',
        childAttributes: CT_GradientStopList_Attributes
    },
    lin: {
        type: 'child',
        childAttributes: CT_LinearShadeProperties_Attributes
    },
    path: {
        type: 'child',
        childAttributes: CT_PathShadeProperties_Attributes
    },
    tileRect: {
        type: 'child',
        childAttributes: CT_RelativeRect_Attributes
    },
    flip: {
        type: 'string',
        defaultValue: 'none'
    },
    rotWithShape: {
        type: 'boolean'
    }
};
var CT_BlipFillProperties_Attributes = {};
var CT_AlphaBiLevelEffect_Attributes = {
    thresh: {
        type: 'string'
    }
};
var CT_AlphaCeilingEffect_Attributes = {};
var CT_AlphaFloorEffect_Attributes = {};
var CT_AlphaInverseEffect_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    }
};
var CT_EffectContainer_Attributes = {
    type: {
        type: 'string',
        defaultValue: 'sib'
    },
    name: {
        type: 'string'
    }
};
var CT_AlphaModulateEffect_Attributes = {
    cont: {
        type: 'child',
        childAttributes: CT_EffectContainer_Attributes
    }
};
var CT_AlphaModulateFixedEffect_Attributes = {
    amt: {
        type: 'string',
        defaultValue: '100%'
    }
};
var CT_AlphaReplaceEffect_Attributes = {
    a: {
        type: 'string'
    }
};
var CT_BiLevelEffect_Attributes = {
    thresh: {
        type: 'string'
    }
};
var CT_ColorChangeEffect_Attributes = {
    clrFrom: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    clrTo: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    useA: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_ColorReplaceEffect_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    }
};
var CT_DuotoneEffect_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    }
};
var CT_GrayscaleEffect_Attributes = {};
var CT_HSLEffect_Attributes = {
    hue: {
        type: 'int',
        defaultValue: '0'
    },
    sat: {
        type: 'string',
        defaultValue: '0%'
    },
    lum: {
        type: 'string',
        defaultValue: '0%'
    }
};
var CT_LuminanceEffect_Attributes = {
    bright: {
        type: 'string',
        defaultValue: '0%'
    },
    contrast: {
        type: 'string',
        defaultValue: '0%'
    }
};
var CT_TintEffect_Attributes = {
    hue: {
        type: 'int',
        defaultValue: '0'
    },
    amt: {
        type: 'string',
        defaultValue: '0%'
    }
};
var CT_Blip_Attributes = {
    alphaBiLevel: {
        type: 'child',
        childAttributes: CT_AlphaBiLevelEffect_Attributes
    },
    alphaCeiling: {
        type: 'child',
        childAttributes: CT_AlphaCeilingEffect_Attributes
    },
    alphaFloor: {
        type: 'child',
        childAttributes: CT_AlphaFloorEffect_Attributes
    },
    alphaInv: {
        type: 'child',
        childAttributes: CT_AlphaInverseEffect_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_AlphaModulateEffect_Attributes
    },
    alphaModFix: {
        type: 'child',
        childAttributes: CT_AlphaModulateFixedEffect_Attributes
    },
    alphaRepl: {
        type: 'child',
        childAttributes: CT_AlphaReplaceEffect_Attributes
    },
    biLevel: {
        type: 'child',
        childAttributes: CT_BiLevelEffect_Attributes
    },
    blur: {
        type: 'child',
        childAttributes: CT_BlurEffect_Attributes
    },
    clrChange: {
        type: 'child',
        childAttributes: CT_ColorChangeEffect_Attributes
    },
    clrRepl: {
        type: 'child',
        childAttributes: CT_ColorReplaceEffect_Attributes
    },
    duotone: {
        type: 'child',
        childAttributes: CT_DuotoneEffect_Attributes
    },
    fillOverlay: {
        type: 'child',
        childAttributes: CT_FillOverlayEffect_Attributes
    },
    grayscl: {
        type: 'child',
        childAttributes: CT_GrayscaleEffect_Attributes
    },
    hsl: {
        type: 'child',
        childAttributes: CT_HSLEffect_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_LuminanceEffect_Attributes
    },
    tint: {
        type: 'child',
        childAttributes: CT_TintEffect_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    cstate: {
        type: 'string',
        defaultValue: 'none'
    }
};
var CT_PatternFillProperties_Attributes = {
    fgClr: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    bgClr: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    prst: {
        type: 'string'
    }
};
var CT_GroupFillProperties_Attributes = {};
var CT_SphereCoords_Attributes = {
    lat: {
        type: 'int'
    },
    lon: {
        type: 'int'
    },
    rev: {
        type: 'int'
    }
};
var CT_Camera_Attributes = {
    rot: {
        type: 'child',
        childAttributes: CT_SphereCoords_Attributes
    },
    prst: {
        type: 'string'
    },
    fov: {
        type: 'int'
    },
    zoom: {
        type: 'string',
        defaultValue: '100%'
    }
};
var CT_LightRig_Attributes = {
    rot: {
        type: 'child',
        childAttributes: CT_SphereCoords_Attributes
    },
    rig: {
        type: 'string'
    },
    dir: {
        type: 'string'
    }
};
var CT_Point3D_Attributes = {
    x: {
        type: 'string'
    },
    y: {
        type: 'string'
    },
    z: {
        type: 'string'
    }
};
var CT_Vector3D_Attributes = {
    dx: {
        type: 'string'
    },
    dy: {
        type: 'string'
    },
    dz: {
        type: 'string'
    }
};
var CT_Backdrop_Attributes = {
    anchor: {
        type: 'child',
        childAttributes: CT_Point3D_Attributes
    },
    norm: {
        type: 'child',
        childAttributes: CT_Vector3D_Attributes
    },
    up: {
        type: 'child',
        childAttributes: CT_Vector3D_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    }
};
var CT_Scene3D_Attributes = {
    camera: {
        type: 'child',
        childAttributes: CT_Camera_Attributes
    },
    lightRig: {
        type: 'child',
        childAttributes: CT_LightRig_Attributes
    },
    backdrop: {
        type: 'child',
        childAttributes: CT_Backdrop_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    }
};
var CT_Bevel_Attributes = {
    w: {
        type: 'int',
        defaultValue: '76200'
    },
    h: {
        type: 'int',
        defaultValue: '76200'
    },
    prst: {
        type: 'string',
        defaultValue: 'circle'
    }
};
var CT_Shape3D_Attributes = {
    bevelT: {
        type: 'child',
        childAttributes: CT_Bevel_Attributes
    },
    bevelB: {
        type: 'child',
        childAttributes: CT_Bevel_Attributes
    },
    extrusionClr: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    contourClr: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    z: {
        type: 'string',
        defaultValue: '0'
    },
    extrusionH: {
        type: 'int',
        defaultValue: '0'
    },
    contourW: {
        type: 'int',
        defaultValue: '0'
    },
    prstMaterial: {
        type: 'string',
        defaultValue: 'warmMatte'
    }
};
var CT_PresetLineDashProperties_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_DashStop_Attributes = {
    d: {
        type: 'string'
    },
    sp: {
        type: 'string'
    }
};
var CT_DashStopList_Attributes = {
    ds: {
        type: 'child',
        childAttributes: CT_DashStop_Attributes,
        childIsArray: true
    }
};
var CT_LineJoinRound_Attributes = {};
var CT_LineJoinBevel_Attributes = {};
var CT_LineJoinMiterProperties_Attributes = {
    lim: {
        type: 'string'
    }
};
var CT_LineEndProperties_Attributes = {
    type: {
        type: 'string',
        defaultValue: 'none'
    },
    w: {
        type: 'string'
    },
    len: {
        type: 'string'
    }
};
var CT_LineProperties_Attributes = {
    noFill: {
        type: 'child',
        childAttributes: CT_NoFillProperties_Attributes
    },
    solidFill: {
        type: 'child',
        childAttributes: CT_SolidColorFillProperties_Attributes
    },
    gradFill: {
        type: 'child',
        childAttributes: CT_GradientFillProperties_Attributes
    },
    pattFill: {
        type: 'child',
        childAttributes: CT_PatternFillProperties_Attributes
    },
    prstDash: {
        type: 'child',
        childAttributes: CT_PresetLineDashProperties_Attributes
    },
    custDash: {
        type: 'child',
        childAttributes: CT_DashStopList_Attributes
    },
    round: {
        type: 'child',
        childAttributes: CT_LineJoinRound_Attributes
    },
    bevel: {
        type: 'child',
        childAttributes: CT_LineJoinBevel_Attributes
    },
    miter: {
        type: 'child',
        childAttributes: CT_LineJoinMiterProperties_Attributes
    },
    headEnd: {
        type: 'child',
        childAttributes: CT_LineEndProperties_Attributes
    },
    tailEnd: {
        type: 'child',
        childAttributes: CT_LineEndProperties_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    w: {
        type: 'int'
    },
    cap: {
        type: 'string'
    },
    cmpd: {
        type: 'string'
    },
    algn: {
        type: 'string'
    }
};
var CT_Point2D_Attributes = {
    x: {
        type: 'string'
    },
    y: {
        type: 'string'
    }
};
var CT_PositiveSize2D_Attributes = {
    cx: {
        type: 'int'
    },
    cy: {
        type: 'int'
    }
};
var CT_Transform2D_Attributes = {
    off: {
        type: 'child',
        childAttributes: CT_Point2D_Attributes
    },
    ext: {
        type: 'child',
        childAttributes: CT_PositiveSize2D_Attributes
    },
    rot: {
        type: 'int',
        defaultValue: '0'
    },
    flipH: {
        type: 'boolean',
        defaultValue: 'false'
    },
    flipV: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_EmbeddedWAVAudioFile_Attributes = {
    name: {
        type: 'string'
    }
};
var CT_Hyperlink_Attributes = {
    'snd': {
        type: 'child',
        childAttributes: CT_EmbeddedWAVAudioFile_Attributes
    },
    'extLst': {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    'r:id': {
        type: 'string'
    },
    'invalidUrl': {
        type: 'string'
    },
    'action': {
        type: 'string'
    },
    'tgtFrame': {
        type: 'string'
    },
    'tooltip': {
        type: 'string'
    },
    'history': {
        type: 'boolean',
        defaultValue: 'true'
    },
    'highlightClick': {
        type: 'boolean',
        defaultValue: 'false'
    },
    'endSnd': {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_GeomGuide_Attributes = {
    name: {
        type: 'string'
    },
    fmla: {
        type: 'string'
    }
};
var CT_GeomGuideList_Attributes = {
    gd: {
        type: 'child',
        childAttributes: CT_GeomGuide_Attributes,
        childIsArray: true
    }
};
var CT_PresetTextShape_Attributes = {
    avLst: {
        type: 'child',
        childAttributes: CT_GeomGuideList_Attributes
    },
    prst: {
        type: 'string'
    }
};
var CT_TextNoAutofit_Attributes = {};
var CT_TextNormalAutofit_Attributes = {
    fontScale: {
        type: 'string',
        defaultValue: '100%'
    },
    lnSpcReduction: {
        type: 'string',
        defaultValue: '0%'
    }
};
var CT_TextShapeAutofit_Attributes = {};
var CT_FlatText_Attributes = {
    z: {
        type: 'string',
        defaultValue: '0'
    }
};
var CT_TextBodyProperties_Attributes = {
    prstTxWarp: {
        type: 'child',
        childAttributes: CT_PresetTextShape_Attributes
    },
    noAutofit: {
        type: 'child',
        childAttributes: CT_TextNoAutofit_Attributes,
        childIsArray: true
    },
    normAutofit: {
        type: 'child',
        childAttributes: CT_TextNormalAutofit_Attributes,
        childIsArray: true
    },
    spAutoFit: {
        type: 'child',
        childAttributes: CT_TextShapeAutofit_Attributes,
        childIsArray: true
    },
    scene3d: {
        type: 'child',
        childAttributes: CT_Scene3D_Attributes
    },
    sp3d: {
        type: 'child',
        childAttributes: CT_Shape3D_Attributes
    },
    flatTx: {
        type: 'child',
        childAttributes: CT_FlatText_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    rot: {
        type: 'int'
    },
    spcFirstLastPara: {
        type: 'boolean'
    },
    vertOverflow: {
        type: 'string'
    },
    horzOverflow: {
        type: 'string'
    },
    vert: {
        type: 'string'
    },
    wrap: {
        type: 'string'
    },
    lIns: {
        type: 'string'
    },
    tIns: {
        type: 'string'
    },
    rIns: {
        type: 'string'
    },
    bIns: {
        type: 'string'
    },
    numCol: {
        type: 'int'
    },
    spcCol: {
        type: 'int'
    },
    rtlCol: {
        type: 'boolean'
    },
    fromWordArt: {
        type: 'boolean'
    },
    anchor: {
        type: 'string'
    },
    anchorCtr: {
        type: 'boolean'
    },
    forceAA: {
        type: 'boolean'
    },
    upright: {
        type: 'boolean',
        defaultValue: 'false'
    },
    compatLnSpc: {
        type: 'boolean'
    }
};
var CT_TextSpacingPercent_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_TextSpacingPoint_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_TextSpacing_Attributes = {
    spcPct: {
        type: 'child',
        childAttributes: CT_TextSpacingPercent_Attributes,
        childIsArray: true
    },
    spcPts: {
        type: 'child',
        childAttributes: CT_TextSpacingPoint_Attributes,
        childIsArray: true
    }
};
var CT_TextBulletColorFollowText_Attributes = {};
var CT_TextBulletSizeFollowText_Attributes = {};
var CT_TextBulletSizePercent_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_TextBulletSizePoint_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_TextBulletTypefaceFollowText_Attributes = {};
var CT_TextNoBullet_Attributes = {};
var CT_TextAutonumberBullet_Attributes = {
    type: {
        type: 'string'
    },
    startAt: {
        type: 'int',
        defaultValue: '1'
    }
};
var CT_TextCharBullet_Attributes = {
    char: {
        type: 'string'
    }
};
var CT_TextBlipBullet_Attributes = {
    blip: {
        type: 'child',
        childAttributes: CT_Blip_Attributes
    }
};
var CT_TextTabStop_Attributes = {
    pos: {
        type: 'string'
    },
    algn: {
        type: 'string'
    }
};
var CT_TextTabStopList_Attributes = {
    tab: {
        type: 'child',
        childAttributes: CT_TextTabStop_Attributes,
        childIsArray: true
    }
};
var CT_TextUnderlineLineFollowText_Attributes = {};
var CT_TextUnderlineFillFollowText_Attributes = {};
var CT_TextUnderlineFillGroupWrapper_Attributes = {};
var CT_Boolean_Attributes = {
    val: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_TextCharacterProperties_Attributes = {
    ln: {
        type: 'child',
        childAttributes: CT_LineProperties_Attributes
    },
    noFill: {
        type: 'child',
        childAttributes: CT_NoFillProperties_Attributes
    },
    solidFill: {
        type: 'child',
        childAttributes: CT_SolidColorFillProperties_Attributes
    },
    gradFill: {
        type: 'child',
        childAttributes: CT_GradientFillProperties_Attributes
    },
    blipFill: {
        type: 'child',
        childAttributes: CT_BlipFillProperties_Attributes
    },
    pattFill: {
        type: 'child',
        childAttributes: CT_PatternFillProperties_Attributes
    },
    grpFill: {
        type: 'child',
        childAttributes: CT_GroupFillProperties_Attributes
    },
    effectLst: {
        type: 'child',
        childAttributes: CT_EffectList_Attributes
    },
    effectDag: {
        type: 'child',
        childAttributes: CT_EffectContainer_Attributes
    },
    highlight: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    uLnTx: {
        type: 'child',
        childAttributes: CT_TextUnderlineLineFollowText_Attributes,
        childIsArray: true
    },
    uLn: {
        type: 'child',
        childAttributes: CT_LineProperties_Attributes
    },
    uFillTx: {
        type: 'child',
        childAttributes: CT_TextUnderlineFillFollowText_Attributes,
        childIsArray: true
    },
    uFill: {
        type: 'child',
        childAttributes: CT_TextUnderlineFillGroupWrapper_Attributes,
        childIsArray: true
    },
    latin: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes
    },
    ea: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes
    },
    cs: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes
    },
    sym: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes
    },
    hlinkClick: {
        type: 'child',
        childAttributes: CT_Hyperlink_Attributes
    },
    hlinkMouseOver: {
        type: 'child',
        childAttributes: CT_Hyperlink_Attributes
    },
    rtl: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    kumimoji: {
        type: 'boolean'
    },
    lang: {
        type: 'string'
    },
    altLang: {
        type: 'string'
    },
    sz: {
        type: 'int'
    },
    b: {
        type: 'boolean'
    },
    i: {
        type: 'boolean'
    },
    u: {
        type: 'string'
    },
    strike: {
        type: 'string'
    },
    kern: {
        type: 'int'
    },
    cap: {
        type: 'string',
        defaultValue: 'none'
    },
    spc: {
        type: 'string'
    },
    normalizeH: {
        type: 'boolean'
    },
    baseline: {
        type: 'string'
    },
    noProof: {
        type: 'boolean'
    },
    dirty: {
        type: 'boolean',
        defaultValue: 'true'
    },
    err: {
        type: 'boolean',
        defaultValue: 'false'
    },
    smtClean: {
        type: 'boolean',
        defaultValue: 'true'
    },
    smtId: {
        type: 'int',
        defaultValue: '0'
    },
    bmk: {
        type: 'string'
    }
};
var CT_TextParagraphProperties_Attributes = {
    lnSpc: {
        type: 'child',
        childAttributes: CT_TextSpacing_Attributes
    },
    spcBef: {
        type: 'child',
        childAttributes: CT_TextSpacing_Attributes
    },
    spcAft: {
        type: 'child',
        childAttributes: CT_TextSpacing_Attributes
    },
    buClrTx: {
        type: 'child',
        childAttributes: CT_TextBulletColorFollowText_Attributes
    },
    buClr: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    buSzTx: {
        type: 'child',
        childAttributes: CT_TextBulletSizeFollowText_Attributes,
        childIsArray: true
    },
    buSzPct: {
        type: 'child',
        childAttributes: CT_TextBulletSizePercent_Attributes,
        childIsArray: true
    },
    buSzPts: {
        type: 'child',
        childAttributes: CT_TextBulletSizePoint_Attributes,
        childIsArray: true
    },
    buFontTx: {
        type: 'child',
        childAttributes: CT_TextBulletTypefaceFollowText_Attributes,
        childIsArray: true
    },
    buFont: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes,
        childIsArray: true
    },
    buNone: {
        type: 'child',
        childAttributes: CT_TextNoBullet_Attributes,
        childIsArray: true
    },
    buAutoNum: {
        type: 'child',
        childAttributes: CT_TextAutonumberBullet_Attributes,
        childIsArray: true
    },
    buChar: {
        type: 'child',
        childAttributes: CT_TextCharBullet_Attributes,
        childIsArray: true
    },
    buBlip: {
        type: 'child',
        childAttributes: CT_TextBlipBullet_Attributes,
        childIsArray: true
    },
    tabLst: {
        type: 'child',
        childAttributes: CT_TextTabStopList_Attributes
    },
    defRPr: {
        type: 'child',
        childAttributes: CT_TextCharacterProperties_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    marL: {
        type: 'int'
    },
    marR: {
        type: 'int'
    },
    lvl: {
        type: 'int'
    },
    indent: {
        type: 'int'
    },
    algn: {
        type: 'string'
    },
    defTabSz: {
        type: 'string'
    },
    rtl: {
        type: 'boolean'
    },
    eaLnBrk: {
        type: 'boolean'
    },
    fontAlgn: {
        type: 'string'
    },
    latinLnBrk: {
        type: 'boolean'
    },
    hangingPunct: {
        type: 'boolean'
    }
};
var CT_TextListStyle_Attributes = {
    defPPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl1pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl2pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl3pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl4pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl5pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl6pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl7pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl8pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl9pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    }
};
var CT_RegularTextRun_Attributes = {
    rPr: {
        type: 'child',
        childAttributes: CT_TextCharacterProperties_Attributes
    },
    t: {
        type: 'child-string'
    }
};
var CT_TextLineBreak_Attributes = {
    rPr: {
        type: 'child',
        childAttributes: CT_TextCharacterProperties_Attributes
    }
};
var CT_TextField_Attributes = {
    rPr: {
        type: 'child',
        childAttributes: CT_TextCharacterProperties_Attributes
    },
    pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    t: {
        type: 'child-string'
    },
    id: {
        type: 'string'
    },
    type: {
        type: 'string'
    }
};
var CT_TextParagraph_Attributes = {
    pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    r: {
        type: 'child',
        childAttributes: CT_RegularTextRun_Attributes,
        childIsArray: true
    },
    br: {
        type: 'child',
        childAttributes: CT_TextLineBreak_Attributes,
        childIsArray: true
    },
    fld: {
        type: 'child',
        childAttributes: CT_TextField_Attributes,
        childIsArray: true
    },
    endParaRPr: {
        type: 'child',
        childAttributes: CT_TextCharacterProperties_Attributes
    }
};
var CT_TextBody_Attributes = {
    bodyPr: {
        type: 'child',
        childAttributes: CT_TextBodyProperties_Attributes
    },
    lstStyle: {
        type: 'child',
        childAttributes: CT_TextListStyle_Attributes
    },
    p: {
        type: 'child',
        childAttributes: CT_TextParagraph_Attributes,
        childIsArray: true
    }
};
var CT_AdjPoint2D_Attributes = {
    x: {
        type: 'string'
    },
    y: {
        type: 'string'
    }
};
var CT_XYAdjustHandle_Attributes = {
    pos: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes
    },
    gdRefX: {
        type: 'string'
    },
    minX: {
        type: 'string'
    },
    maxX: {
        type: 'string'
    },
    gdRefY: {
        type: 'string'
    },
    minY: {
        type: 'string'
    },
    maxY: {
        type: 'string'
    }
};
var CT_PolarAdjustHandle_Attributes = {
    pos: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes
    },
    gdRefR: {
        type: 'string'
    },
    minR: {
        type: 'string'
    },
    maxR: {
        type: 'string'
    },
    gdRefAng: {
        type: 'string'
    },
    minAng: {
        type: 'string'
    },
    maxAng: {
        type: 'string'
    }
};
var CT_AdjustHandleList_Attributes = {
    ahXY: {
        type: 'child',
        childAttributes: CT_XYAdjustHandle_Attributes
    },
    ahPolar: {
        type: 'child',
        childAttributes: CT_PolarAdjustHandle_Attributes
    }
};
var CT_ConnectionSite_Attributes = {
    pos: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes
    },
    ang: {
        type: 'string'
    }
};
var CT_ConnectionSiteList_Attributes = {
    cxn: {
        type: 'child',
        childAttributes: CT_ConnectionSite_Attributes,
        childIsArray: true
    }
};
var CT_GeomRect_Attributes = {
    l: {
        type: 'string'
    },
    t: {
        type: 'string'
    },
    r: {
        type: 'string'
    },
    b: {
        type: 'string'
    }
};
var CT_Path2DClose_Attributes = {};
var CT_Path2DMoveTo_Attributes = {
    pt: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes
    }
};
var CT_Path2DLineTo_Attributes = {
    pt: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes
    }
};
var CT_Path2DArcTo_Attributes = {
    wR: {
        type: 'string'
    },
    hR: {
        type: 'string'
    },
    stAng: {
        type: 'string'
    },
    swAng: {
        type: 'string'
    }
};
var CT_Path2DQuadBezierTo_Attributes = {
    pt: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes,
        childIsArray: true
    }
};
var CT_Path2DCubicBezierTo_Attributes = {
    pt: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes,
        childIsArray: true
    }
};
var CT_Path2D_Attributes = {
    close: {
        type: 'child',
        childAttributes: CT_Path2DClose_Attributes
    },
    moveTo: {
        type: 'child',
        childAttributes: CT_Path2DMoveTo_Attributes
    },
    lnTo: {
        type: 'child',
        childAttributes: CT_Path2DLineTo_Attributes
    },
    arcTo: {
        type: 'child',
        childAttributes: CT_Path2DArcTo_Attributes
    },
    quadBezTo: {
        type: 'child',
        childAttributes: CT_Path2DQuadBezierTo_Attributes
    },
    cubicBezTo: {
        type: 'child',
        childAttributes: CT_Path2DCubicBezierTo_Attributes
    },
    w: {
        type: 'int',
        defaultValue: '0'
    },
    h: {
        type: 'int',
        defaultValue: '0'
    },
    fill: {
        type: 'string',
        defaultValue: 'norm'
    },
    stroke: {
        type: 'boolean',
        defaultValue: 'true'
    },
    extrusionOk: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_Path2DList_Attributes = {
    path: {
        type: 'child',
        childAttributes: CT_Path2D_Attributes,
        childIsArray: true
    }
};
var CT_CustomGeometry2D_Attributes = {
    avLst: {
        type: 'child',
        childAttributes: CT_GeomGuideList_Attributes
    },
    gdLst: {
        type: 'child',
        childAttributes: CT_GeomGuideList_Attributes
    },
    ahLst: {
        type: 'child',
        childAttributes: CT_AdjustHandleList_Attributes
    },
    cxnLst: {
        type: 'child',
        childAttributes: CT_ConnectionSiteList_Attributes
    },
    rect: {
        type: 'child',
        childAttributes: CT_GeomRect_Attributes
    },
    pathLst: {
        type: 'child',
        childAttributes: CT_Path2DList_Attributes
    }
};
var CT_PresetGeometry2D_Attributes = {
    avLst: {
        type: 'child',
        childAttributes: CT_GeomGuideList_Attributes
    },
    prst: {
        type: 'string'
    }
};
var CT_ShapeProperties_Attributes = {
    xfrm: {
        type: 'child',
        childAttributes: CT_Transform2D_Attributes
    },
    custGeom: {
        type: 'child',
        childAttributes: CT_CustomGeometry2D_Attributes
    },
    prstGeom: {
        type: 'child',
        childAttributes: CT_PresetGeometry2D_Attributes
    },
    noFill: {
        type: 'child',
        childAttributes: CT_NoFillProperties_Attributes
    },
    solidFill: {
        type: 'child',
        childAttributes: CT_SolidColorFillProperties_Attributes
    },
    gradFill: {
        type: 'child',
        childAttributes: CT_GradientFillProperties_Attributes
    },
    blipFill: {
        type: 'child',
        childAttributes: CT_BlipFillProperties_Attributes
    },
    pattFill: {
        type: 'child',
        childAttributes: CT_PatternFillProperties_Attributes
    },
    grpFill: {
        type: 'child',
        childAttributes: CT_GroupFillProperties_Attributes
    },
    ln: {
        type: 'child',
        childAttributes: CT_LineProperties_Attributes
    },
    effectLst: {
        type: 'child',
        childAttributes: CT_EffectList_Attributes
    },
    effectDag: {
        type: 'child',
        childAttributes: CT_EffectContainer_Attributes
    },
    scene3d: {
        type: 'child',
        childAttributes: CT_Scene3D_Attributes
    },
    sp3d: {
        type: 'child',
        childAttributes: CT_Shape3D_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    bwMode: {
        type: 'string'
    }
};
var CT_ColorMapping_Attributes = {
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    bg1: {
        type: 'string'
    },
    tx1: {
        type: 'string'
    },
    bg2: {
        type: 'string'
    },
    tx2: {
        type: 'string'
    },
    accent1: {
        type: 'string'
    },
    accent2: {
        type: 'string'
    },
    accent3: {
        type: 'string'
    },
    accent4: {
        type: 'string'
    },
    accent5: {
        type: 'string'
    },
    accent6: {
        type: 'string'
    },
    hlink: {
        type: 'string'
    },
    folHlink: {
        type: 'string'
    }
};
var CT_Shape_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'box'
    }
};
var CT_MarkerStyle_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_MarkerSize_Attributes = {
    val: {
        type: 'int',
        defaultValue: '5'
    }
};
var CT_Marker_Attributes = {
    symbol: {
        type: 'child',
        childAttributes: CT_MarkerStyle_Attributes
    },
    size: {
        type: 'child',
        childAttributes: CT_MarkerSize_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_Double_Attributes = {
    val: {
        type: 'double'
    }
};
var CT_UnsignedInt_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_RelId_Attributes = {
    'r:id': {
        type: 'string'
    }
};
var CT_NumVal_Attributes = {
    v: {
        type: 'child-string'
    },
    idx: {
        type: 'int'
    },
    formatCode: {
        type: 'string'
    }
};
var CT_NumData_Attributes = {
    formatCode: {
        type: 'child-string'
    },
    ptCount: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    pt: {
        type: 'child',
        childAttributes: CT_NumVal_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_NumRef_Attributes = {
    f: {
        type: 'child-string'
    },
    numCache: {
        type: 'child',
        childAttributes: CT_NumData_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_NumDataSource_Attributes = {
    numRef: {
        type: 'child',
        childAttributes: CT_NumRef_Attributes
    },
    numLit: {
        type: 'child',
        childAttributes: CT_NumData_Attributes
    }
};
var CT_StrVal_Attributes = {
    v: {
        type: 'child-string'
    },
    idx: {
        type: 'int'
    }
};
var CT_StrData_Attributes = {
    ptCount: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    pt: {
        type: 'child',
        childAttributes: CT_StrVal_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_StrRef_Attributes = {
    f: {
        type: 'child-string'
    },
    strCache: {
        type: 'child',
        childAttributes: CT_StrData_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_Tx_Attributes = {
    strRef: {
        type: 'child',
        childAttributes: CT_StrRef_Attributes
    },
    rich: {
        type: 'child',
        childAttributes: CT_TextBody_Attributes
    }
};
var CT_TextLanguageID_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_Lvl_Attributes = {
    pt: {
        type: 'child',
        childAttributes: CT_StrVal_Attributes,
        childIsArray: true
    }
};
var CT_MultiLvlStrData_Attributes = {
    ptCount: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    lvl: {
        type: 'child',
        childAttributes: CT_Lvl_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_MultiLvlStrRef_Attributes = {
    f: {
        type: 'child-string'
    },
    multiLvlStrCache: {
        type: 'child',
        childAttributes: CT_MultiLvlStrData_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_AxDataSource_Attributes = {
    multiLvlStrRef: {
        type: 'child',
        childAttributes: CT_MultiLvlStrRef_Attributes
    },
    numRef: {
        type: 'child',
        childAttributes: CT_NumRef_Attributes
    },
    numLit: {
        type: 'child',
        childAttributes: CT_NumData_Attributes
    },
    strRef: {
        type: 'child',
        childAttributes: CT_StrRef_Attributes
    },
    strLit: {
        type: 'child',
        childAttributes: CT_StrData_Attributes
    }
};
var CT_SerTx_Attributes = {
    strRef: {
        type: 'child',
        childAttributes: CT_StrRef_Attributes
    },
    v: {
        type: 'child-string'
    }
};
var CT_LayoutTarget_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'outer'
    }
};
var CT_LayoutMode_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'factor'
    }
};
var CT_ManualLayout_Attributes = {
    layoutTarget: {
        type: 'child',
        childAttributes: CT_LayoutTarget_Attributes
    },
    xMode: {
        type: 'child',
        childAttributes: CT_LayoutMode_Attributes
    },
    yMode: {
        type: 'child',
        childAttributes: CT_LayoutMode_Attributes
    },
    wMode: {
        type: 'child',
        childAttributes: CT_LayoutMode_Attributes
    },
    hMode: {
        type: 'child',
        childAttributes: CT_LayoutMode_Attributes
    },
    x: {
        type: 'child',
        childAttributes: CT_Double_Attributes
    },
    y: {
        type: 'child',
        childAttributes: CT_Double_Attributes
    },
    w: {
        type: 'child',
        childAttributes: CT_Double_Attributes
    },
    h: {
        type: 'child',
        childAttributes: CT_Double_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_Layout_Attributes = {
    manualLayout: {
        type: 'child',
        childAttributes: CT_ManualLayout_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_Title_Attributes = {
    tx: {
        type: 'child',
        childAttributes: CT_Tx_Attributes
    },
    layout: {
        type: 'child',
        childAttributes: CT_Layout_Attributes
    },
    overlay: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    txPr: {
        type: 'child',
        childAttributes: CT_TextBody_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_RotX_Attributes = {
    val: {
        type: 'int',
        defaultValue: '0'
    }
};
var CT_HPercent_Attributes = {
    val: {
        type: 'string',
        defaultValue: '100%'
    }
};
var CT_RotY_Attributes = {
    val: {
        type: 'int',
        defaultValue: '0'
    }
};
var CT_DepthPercent_Attributes = {
    val: {
        type: 'string',
        defaultValue: '100%'
    }
};
var CT_Perspective_Attributes = {
    val: {
        type: 'int',
        defaultValue: '30'
    }
};
var CT_View3D_Attributes = {
    rotX: {
        type: 'child',
        childAttributes: CT_RotX_Attributes
    },
    hPercent: {
        type: 'child',
        childAttributes: CT_HPercent_Attributes
    },
    rotY: {
        type: 'child',
        childAttributes: CT_RotY_Attributes
    },
    depthPercent: {
        type: 'child',
        childAttributes: CT_DepthPercent_Attributes
    },
    rAngAx: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    perspective: {
        type: 'child',
        childAttributes: CT_Perspective_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_Thickness_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_PictureFormat_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_PictureStackUnit_Attributes = {
    val: {
        type: 'double'
    }
};
var CT_PictureOptions_Attributes = {
    applyToFront: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    applyToSides: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    applyToEnd: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    pictureFormat: {
        type: 'child',
        childAttributes: CT_PictureFormat_Attributes
    },
    pictureStackUnit: {
        type: 'child',
        childAttributes: CT_PictureStackUnit_Attributes
    }
};
var CT_Surface_Attributes = {
    thickness: {
        type: 'child',
        childAttributes: CT_Thickness_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    pictureOptions: {
        type: 'child',
        childAttributes: CT_PictureOptions_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_DTable_Attributes = {
    showHorzBorder: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    showVertBorder: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    showOutline: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    showKeys: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    txPr: {
        type: 'child',
        childAttributes: CT_TextBody_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_GapAmount_Attributes = {
    val: {
        type: 'string',
        defaultValue: '150%'
    }
};
var CT_Overlap_Attributes = {
    val: {
        type: 'string',
        defaultValue: '0%'
    }
};
var CT_BubbleScale_Attributes = {
    val: {
        type: 'string',
        defaultValue: '100%'
    }
};
var CT_SizeRepresents_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'area'
    }
};
var CT_FirstSliceAng_Attributes = {
    val: {
        type: 'int',
        defaultValue: '0'
    }
};
var CT_HoleSize_Attributes = {
    val: {
        type: 'string',
        defaultValue: '10%'
    }
};
var CT_SplitType_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'auto'
    }
};
var CT_CustSplit_Attributes = {
    secondPiePt: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes,
        childIsArray: true
    }
};
var CT_SecondPieSize_Attributes = {
    val: {
        type: 'string',
        defaultValue: '75%'
    }
};
var CT_NumFmt_Attributes = {
    formatCode: {
        type: 'string'
    },
    sourceLinked: {
        type: 'boolean'
    }
};
var CT_LblAlgn_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_DLbl_Attributes = {
    idx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    delete: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_DLbls_Attributes = {
    dLbl: {
        type: 'child',
        childAttributes: CT_DLbl_Attributes,
        childIsArray: true
    },
    delete: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_DPt_Attributes = {
    idx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    invertIfNegative: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    marker: {
        type: 'child',
        childAttributes: CT_Marker_Attributes
    },
    bubble3D: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    explosion: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    pictureOptions: {
        type: 'child',
        childAttributes: CT_PictureOptions_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_TrendlineType_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'linear'
    }
};
var CT_Order_Attributes = {
    val: {
        type: 'int',
        defaultValue: '2'
    }
};
var CT_Period_Attributes = {
    val: {
        type: 'int',
        defaultValue: '2'
    }
};
var CT_TrendlineLbl_Attributes = {
    layout: {
        type: 'child',
        childAttributes: CT_Layout_Attributes
    },
    tx: {
        type: 'child',
        childAttributes: CT_Tx_Attributes
    },
    numFmt: {
        type: 'child',
        childAttributes: CT_NumFmt_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    txPr: {
        type: 'child',
        childAttributes: CT_TextBody_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_Trendline_Attributes = {
    name: {
        type: 'child-string'
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    trendlineType: {
        type: 'child',
        childAttributes: CT_TrendlineType_Attributes
    },
    order: {
        type: 'child',
        childAttributes: CT_Order_Attributes
    },
    period: {
        type: 'child',
        childAttributes: CT_Period_Attributes
    },
    forward: {
        type: 'child',
        childAttributes: CT_Double_Attributes
    },
    backward: {
        type: 'child',
        childAttributes: CT_Double_Attributes
    },
    intercept: {
        type: 'child',
        childAttributes: CT_Double_Attributes
    },
    dispRSqr: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    dispEq: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    trendlineLbl: {
        type: 'child',
        childAttributes: CT_TrendlineLbl_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_ErrDir_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_ErrBarType_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'both'
    }
};
var CT_ErrValType_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'fixedVal'
    }
};
var CT_ErrBars_Attributes = {
    errDir: {
        type: 'child',
        childAttributes: CT_ErrDir_Attributes
    },
    errBarType: {
        type: 'child',
        childAttributes: CT_ErrBarType_Attributes
    },
    errValType: {
        type: 'child',
        childAttributes: CT_ErrValType_Attributes
    },
    noEndCap: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    plus: {
        type: 'child',
        childAttributes: CT_NumDataSource_Attributes
    },
    minus: {
        type: 'child',
        childAttributes: CT_NumDataSource_Attributes
    },
    val: {
        type: 'child',
        childAttributes: CT_Double_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_UpDownBar_Attributes = {
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    }
};
var CT_UpDownBars_Attributes = {
    gapWidth: {
        type: 'child',
        childAttributes: CT_GapAmount_Attributes
    },
    upBars: {
        type: 'child',
        childAttributes: CT_UpDownBar_Attributes
    },
    downBars: {
        type: 'child',
        childAttributes: CT_UpDownBar_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_LineSer_Attributes = {
    idx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    order: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    tx: {
        type: 'child',
        childAttributes: CT_SerTx_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    marker: {
        type: 'child',
        childAttributes: CT_Marker_Attributes
    },
    dPt: {
        type: 'child',
        childAttributes: CT_DPt_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    trendline: {
        type: 'child',
        childAttributes: CT_Trendline_Attributes,
        childIsArray: true
    },
    errBars: {
        type: 'child',
        childAttributes: CT_ErrBars_Attributes
    },
    cat: {
        type: 'child',
        childAttributes: CT_AxDataSource_Attributes
    },
    val: {
        type: 'child',
        childAttributes: CT_NumDataSource_Attributes
    },
    smooth: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_ScatterSer_Attributes = {
    idx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    order: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    tx: {
        type: 'child',
        childAttributes: CT_SerTx_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    marker: {
        type: 'child',
        childAttributes: CT_Marker_Attributes
    },
    dPt: {
        type: 'child',
        childAttributes: CT_DPt_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    trendline: {
        type: 'child',
        childAttributes: CT_Trendline_Attributes,
        childIsArray: true
    },
    errBars: {
        type: 'child',
        childAttributes: CT_ErrBars_Attributes,
        childIsArray: true
    },
    xVal: {
        type: 'child',
        childAttributes: CT_AxDataSource_Attributes
    },
    yVal: {
        type: 'child',
        childAttributes: CT_NumDataSource_Attributes
    },
    smooth: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_RadarSer_Attributes = {
    idx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    order: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    tx: {
        type: 'child',
        childAttributes: CT_SerTx_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    marker: {
        type: 'child',
        childAttributes: CT_Marker_Attributes
    },
    dPt: {
        type: 'child',
        childAttributes: CT_DPt_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    cat: {
        type: 'child',
        childAttributes: CT_AxDataSource_Attributes
    },
    val: {
        type: 'child',
        childAttributes: CT_NumDataSource_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_BarSer_Attributes = {
    idx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    order: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    tx: {
        type: 'child',
        childAttributes: CT_SerTx_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    invertIfNegative: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    pictureOptions: {
        type: 'child',
        childAttributes: CT_PictureOptions_Attributes
    },
    dPt: {
        type: 'child',
        childAttributes: CT_DPt_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    trendline: {
        type: 'child',
        childAttributes: CT_Trendline_Attributes,
        childIsArray: true
    },
    errBars: {
        type: 'child',
        childAttributes: CT_ErrBars_Attributes
    },
    cat: {
        type: 'child',
        childAttributes: CT_AxDataSource_Attributes
    },
    val: {
        type: 'child',
        childAttributes: CT_NumDataSource_Attributes
    },
    shape: {
        type: 'child',
        childAttributes: CT_Shape_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_AreaSer_Attributes = {
    idx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    order: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    tx: {
        type: 'child',
        childAttributes: CT_SerTx_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    pictureOptions: {
        type: 'child',
        childAttributes: CT_PictureOptions_Attributes
    },
    dPt: {
        type: 'child',
        childAttributes: CT_DPt_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    trendline: {
        type: 'child',
        childAttributes: CT_Trendline_Attributes,
        childIsArray: true
    },
    errBars: {
        type: 'child',
        childAttributes: CT_ErrBars_Attributes,
        childIsArray: true
    },
    cat: {
        type: 'child',
        childAttributes: CT_AxDataSource_Attributes
    },
    val: {
        type: 'child',
        childAttributes: CT_NumDataSource_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_PieSer_Attributes = {
    idx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    order: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    tx: {
        type: 'child',
        childAttributes: CT_SerTx_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    explosion: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    dPt: {
        type: 'child',
        childAttributes: CT_DPt_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    cat: {
        type: 'child',
        childAttributes: CT_AxDataSource_Attributes
    },
    val: {
        type: 'child',
        childAttributes: CT_NumDataSource_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_BubbleSer_Attributes = {
    idx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    order: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    tx: {
        type: 'child',
        childAttributes: CT_SerTx_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    invertIfNegative: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    dPt: {
        type: 'child',
        childAttributes: CT_DPt_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    trendline: {
        type: 'child',
        childAttributes: CT_Trendline_Attributes,
        childIsArray: true
    },
    errBars: {
        type: 'child',
        childAttributes: CT_ErrBars_Attributes,
        childIsArray: true
    },
    xVal: {
        type: 'child',
        childAttributes: CT_AxDataSource_Attributes
    },
    yVal: {
        type: 'child',
        childAttributes: CT_NumDataSource_Attributes
    },
    bubbleSize: {
        type: 'child',
        childAttributes: CT_NumDataSource_Attributes
    },
    bubble3D: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_SurfaceSer_Attributes = {
    idx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    order: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    tx: {
        type: 'child',
        childAttributes: CT_SerTx_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    cat: {
        type: 'child',
        childAttributes: CT_AxDataSource_Attributes
    },
    val: {
        type: 'child',
        childAttributes: CT_NumDataSource_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_Grouping_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'standard'
    }
};
var CT_ChartLines_Attributes = {
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    }
};
var CT_LineChart_Attributes = {
    grouping: {
        type: 'child',
        childAttributes: CT_Grouping_Attributes
    },
    varyColors: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    ser: {
        type: 'child',
        childAttributes: CT_LineSer_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    dropLines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes
    },
    hiLowLines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes
    },
    upDownBars: {
        type: 'child',
        childAttributes: CT_UpDownBars_Attributes
    },
    marker: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    smooth: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    axId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_Line3DChart_Attributes = {
    grouping: {
        type: 'child',
        childAttributes: CT_Grouping_Attributes
    },
    varyColors: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    ser: {
        type: 'child',
        childAttributes: CT_LineSer_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    dropLines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes
    },
    gapDepth: {
        type: 'child',
        childAttributes: CT_GapAmount_Attributes
    },
    axId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_StockChart_Attributes = {
    ser: {
        type: 'child',
        childAttributes: CT_LineSer_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    dropLines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes
    },
    hiLowLines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes
    },
    upDownBars: {
        type: 'child',
        childAttributes: CT_UpDownBars_Attributes
    },
    axId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_ScatterStyle_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'marker'
    }
};
var CT_ScatterChart_Attributes = {
    scatterStyle: {
        type: 'child',
        childAttributes: CT_ScatterStyle_Attributes
    },
    varyColors: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    ser: {
        type: 'child',
        childAttributes: CT_ScatterSer_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    axId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_RadarStyle_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'standard'
    }
};
var CT_RadarChart_Attributes = {
    radarStyle: {
        type: 'child',
        childAttributes: CT_RadarStyle_Attributes
    },
    varyColors: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    ser: {
        type: 'child',
        childAttributes: CT_RadarSer_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    axId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_BarGrouping_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'clustered'
    }
};
var CT_BarDir_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'col'
    }
};
var CT_BarChart_Attributes = {
    barDir: {
        type: 'child',
        childAttributes: CT_BarDir_Attributes
    },
    grouping: {
        type: 'child',
        childAttributes: CT_BarGrouping_Attributes
    },
    varyColors: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    ser: {
        type: 'child',
        childAttributes: CT_BarSer_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    gapWidth: {
        type: 'child',
        childAttributes: CT_GapAmount_Attributes
    },
    overlap: {
        type: 'child',
        childAttributes: CT_Overlap_Attributes
    },
    serLines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes,
        childIsArray: true
    },
    axId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_Bar3DChart_Attributes = {
    barDir: {
        type: 'child',
        childAttributes: CT_BarDir_Attributes
    },
    grouping: {
        type: 'child',
        childAttributes: CT_BarGrouping_Attributes
    },
    varyColors: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    ser: {
        type: 'child',
        childAttributes: CT_BarSer_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    gapWidth: {
        type: 'child',
        childAttributes: CT_GapAmount_Attributes
    },
    gapDepth: {
        type: 'child',
        childAttributes: CT_GapAmount_Attributes
    },
    shape: {
        type: 'child',
        childAttributes: CT_Shape_Attributes
    },
    axId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_AreaChart_Attributes = {
    grouping: {
        type: 'child',
        childAttributes: CT_Grouping_Attributes
    },
    varyColors: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    ser: {
        type: 'child',
        childAttributes: CT_AreaSer_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    dropLines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes
    },
    axId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_Area3DChart_Attributes = {
    grouping: {
        type: 'child',
        childAttributes: CT_Grouping_Attributes
    },
    varyColors: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    ser: {
        type: 'child',
        childAttributes: CT_AreaSer_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    dropLines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes
    },
    gapDepth: {
        type: 'child',
        childAttributes: CT_GapAmount_Attributes
    },
    axId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_PieChart_Attributes = {
    varyColors: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    ser: {
        type: 'child',
        childAttributes: CT_PieSer_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    firstSliceAng: {
        type: 'child',
        childAttributes: CT_FirstSliceAng_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_Pie3DChart_Attributes = {
    varyColors: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    ser: {
        type: 'child',
        childAttributes: CT_PieSer_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_DoughnutChart_Attributes = {
    varyColors: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    ser: {
        type: 'child',
        childAttributes: CT_PieSer_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    firstSliceAng: {
        type: 'child',
        childAttributes: CT_FirstSliceAng_Attributes
    },
    holeSize: {
        type: 'child',
        childAttributes: CT_HoleSize_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_OfPieType_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'pie'
    }
};
var CT_OfPieChart_Attributes = {
    ofPieType: {
        type: 'child',
        childAttributes: CT_OfPieType_Attributes
    },
    varyColors: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    ser: {
        type: 'child',
        childAttributes: CT_PieSer_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    gapWidth: {
        type: 'child',
        childAttributes: CT_GapAmount_Attributes
    },
    splitType: {
        type: 'child',
        childAttributes: CT_SplitType_Attributes
    },
    splitPos: {
        type: 'child',
        childAttributes: CT_Double_Attributes
    },
    custSplit: {
        type: 'child',
        childAttributes: CT_CustSplit_Attributes
    },
    secondPieSize: {
        type: 'child',
        childAttributes: CT_SecondPieSize_Attributes
    },
    serLines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_BubbleChart_Attributes = {
    varyColors: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    ser: {
        type: 'child',
        childAttributes: CT_BubbleSer_Attributes,
        childIsArray: true
    },
    dLbls: {
        type: 'child',
        childAttributes: CT_DLbls_Attributes
    },
    bubble3D: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    bubbleScale: {
        type: 'child',
        childAttributes: CT_BubbleScale_Attributes
    },
    showNegBubbles: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    sizeRepresents: {
        type: 'child',
        childAttributes: CT_SizeRepresents_Attributes
    },
    axId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_BandFmt_Attributes = {
    idx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    }
};
var CT_BandFmts_Attributes = {
    bandFmt: {
        type: 'child',
        childAttributes: CT_BandFmt_Attributes,
        childIsArray: true
    }
};
var CT_SurfaceChart_Attributes = {
    wireframe: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    ser: {
        type: 'child',
        childAttributes: CT_SurfaceSer_Attributes,
        childIsArray: true
    },
    bandFmts: {
        type: 'child',
        childAttributes: CT_BandFmts_Attributes
    },
    axId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_Surface3DChart_Attributes = {
    wireframe: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    ser: {
        type: 'child',
        childAttributes: CT_SurfaceSer_Attributes,
        childIsArray: true
    },
    bandFmts: {
        type: 'child',
        childAttributes: CT_BandFmts_Attributes
    },
    axId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_AxPos_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_Crosses_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_CrossBetween_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_TickMark_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'cross'
    }
};
var CT_TickLblPos_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'nextTo'
    }
};
var CT_Skip_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_TimeUnit_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'days'
    }
};
var CT_AxisUnit_Attributes = {
    val: {
        type: 'double'
    }
};
var CT_BuiltInUnit_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'thousands'
    }
};
var CT_DispUnitsLbl_Attributes = {
    layout: {
        type: 'child',
        childAttributes: CT_Layout_Attributes
    },
    tx: {
        type: 'child',
        childAttributes: CT_Tx_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    txPr: {
        type: 'child',
        childAttributes: CT_TextBody_Attributes
    }
};
var CT_DispUnits_Attributes = {
    custUnit: {
        type: 'child',
        childAttributes: CT_Double_Attributes
    },
    builtInUnit: {
        type: 'child',
        childAttributes: CT_BuiltInUnit_Attributes
    },
    dispUnitsLbl: {
        type: 'child',
        childAttributes: CT_DispUnitsLbl_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_Orientation_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'minMax'
    }
};
var CT_LogBase_Attributes = {
    val: {
        type: 'double'
    }
};
var CT_Scaling_Attributes = {
    logBase: {
        type: 'child',
        childAttributes: CT_LogBase_Attributes
    },
    orientation: {
        type: 'child',
        childAttributes: CT_Orientation_Attributes
    },
    max: {
        type: 'child',
        childAttributes: CT_Double_Attributes
    },
    min: {
        type: 'child',
        childAttributes: CT_Double_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_LblOffset_Attributes = {
    val: {
        type: 'string',
        defaultValue: '100%'
    }
};
var CT_CatAx_Attributes = {
    axId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    scaling: {
        type: 'child',
        childAttributes: CT_Scaling_Attributes
    },
    delete: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    axPos: {
        type: 'child',
        childAttributes: CT_AxPos_Attributes
    },
    majorGridlines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes
    },
    minorGridlines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes
    },
    title: {
        type: 'child',
        childAttributes: CT_Title_Attributes
    },
    numFmt: {
        type: 'child',
        childAttributes: CT_NumFmt_Attributes
    },
    majorTickMark: {
        type: 'child',
        childAttributes: CT_TickMark_Attributes
    },
    minorTickMark: {
        type: 'child',
        childAttributes: CT_TickMark_Attributes
    },
    tickLblPos: {
        type: 'child',
        childAttributes: CT_TickLblPos_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    txPr: {
        type: 'child',
        childAttributes: CT_TextBody_Attributes
    },
    crossAx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    crosses: {
        type: 'child',
        childAttributes: CT_Crosses_Attributes
    },
    crossesAt: {
        type: 'child',
        childAttributes: CT_Double_Attributes
    },
    auto: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    lblAlgn: {
        type: 'child',
        childAttributes: CT_LblAlgn_Attributes
    },
    lblOffset: {
        type: 'child',
        childAttributes: CT_LblOffset_Attributes
    },
    tickLblSkip: {
        type: 'child',
        childAttributes: CT_Skip_Attributes
    },
    tickMarkSkip: {
        type: 'child',
        childAttributes: CT_Skip_Attributes
    },
    noMultiLvlLbl: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_DateAx_Attributes = {
    axId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    scaling: {
        type: 'child',
        childAttributes: CT_Scaling_Attributes
    },
    delete: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    axPos: {
        type: 'child',
        childAttributes: CT_AxPos_Attributes
    },
    majorGridlines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes
    },
    minorGridlines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes
    },
    title: {
        type: 'child',
        childAttributes: CT_Title_Attributes
    },
    numFmt: {
        type: 'child',
        childAttributes: CT_NumFmt_Attributes
    },
    majorTickMark: {
        type: 'child',
        childAttributes: CT_TickMark_Attributes
    },
    minorTickMark: {
        type: 'child',
        childAttributes: CT_TickMark_Attributes
    },
    tickLblPos: {
        type: 'child',
        childAttributes: CT_TickLblPos_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    txPr: {
        type: 'child',
        childAttributes: CT_TextBody_Attributes
    },
    crossAx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    crosses: {
        type: 'child',
        childAttributes: CT_Crosses_Attributes
    },
    crossesAt: {
        type: 'child',
        childAttributes: CT_Double_Attributes
    },
    auto: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    lblOffset: {
        type: 'child',
        childAttributes: CT_LblOffset_Attributes
    },
    baseTimeUnit: {
        type: 'child',
        childAttributes: CT_TimeUnit_Attributes
    },
    majorUnit: {
        type: 'child',
        childAttributes: CT_AxisUnit_Attributes
    },
    majorTimeUnit: {
        type: 'child',
        childAttributes: CT_TimeUnit_Attributes
    },
    minorUnit: {
        type: 'child',
        childAttributes: CT_AxisUnit_Attributes
    },
    minorTimeUnit: {
        type: 'child',
        childAttributes: CT_TimeUnit_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_SerAx_Attributes = {
    axId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    scaling: {
        type: 'child',
        childAttributes: CT_Scaling_Attributes
    },
    delete: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    axPos: {
        type: 'child',
        childAttributes: CT_AxPos_Attributes
    },
    majorGridlines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes
    },
    minorGridlines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes
    },
    title: {
        type: 'child',
        childAttributes: CT_Title_Attributes
    },
    numFmt: {
        type: 'child',
        childAttributes: CT_NumFmt_Attributes
    },
    majorTickMark: {
        type: 'child',
        childAttributes: CT_TickMark_Attributes
    },
    minorTickMark: {
        type: 'child',
        childAttributes: CT_TickMark_Attributes
    },
    tickLblPos: {
        type: 'child',
        childAttributes: CT_TickLblPos_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    txPr: {
        type: 'child',
        childAttributes: CT_TextBody_Attributes
    },
    crossAx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    crosses: {
        type: 'child',
        childAttributes: CT_Crosses_Attributes
    },
    crossesAt: {
        type: 'child',
        childAttributes: CT_Double_Attributes
    },
    tickLblSkip: {
        type: 'child',
        childAttributes: CT_Skip_Attributes
    },
    tickMarkSkip: {
        type: 'child',
        childAttributes: CT_Skip_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_ValAx_Attributes = {
    axId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    scaling: {
        type: 'child',
        childAttributes: CT_Scaling_Attributes
    },
    delete: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    axPos: {
        type: 'child',
        childAttributes: CT_AxPos_Attributes
    },
    majorGridlines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes
    },
    minorGridlines: {
        type: 'child',
        childAttributes: CT_ChartLines_Attributes
    },
    title: {
        type: 'child',
        childAttributes: CT_Title_Attributes
    },
    numFmt: {
        type: 'child',
        childAttributes: CT_NumFmt_Attributes
    },
    majorTickMark: {
        type: 'child',
        childAttributes: CT_TickMark_Attributes
    },
    minorTickMark: {
        type: 'child',
        childAttributes: CT_TickMark_Attributes
    },
    tickLblPos: {
        type: 'child',
        childAttributes: CT_TickLblPos_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    txPr: {
        type: 'child',
        childAttributes: CT_TextBody_Attributes
    },
    crossAx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    crosses: {
        type: 'child',
        childAttributes: CT_Crosses_Attributes
    },
    crossesAt: {
        type: 'child',
        childAttributes: CT_Double_Attributes
    },
    crossBetween: {
        type: 'child',
        childAttributes: CT_CrossBetween_Attributes
    },
    majorUnit: {
        type: 'child',
        childAttributes: CT_AxisUnit_Attributes
    },
    minorUnit: {
        type: 'child',
        childAttributes: CT_AxisUnit_Attributes
    },
    dispUnits: {
        type: 'child',
        childAttributes: CT_DispUnits_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_PlotArea_Attributes = {
    layout: {
        type: 'child',
        childAttributes: CT_Layout_Attributes
    },
    areaChart: {
        type: 'child',
        childAttributes: CT_AreaChart_Attributes
    },
    area3DChart: {
        type: 'child',
        childAttributes: CT_Area3DChart_Attributes
    },
    lineChart: {
        type: 'child',
        childAttributes: CT_LineChart_Attributes
    },
    line3DChart: {
        type: 'child',
        childAttributes: CT_Line3DChart_Attributes
    },
    stockChart: {
        type: 'child',
        childAttributes: CT_StockChart_Attributes
    },
    radarChart: {
        type: 'child',
        childAttributes: CT_RadarChart_Attributes
    },
    scatterChart: {
        type: 'child',
        childAttributes: CT_ScatterChart_Attributes
    },
    pieChart: {
        type: 'child',
        childAttributes: CT_PieChart_Attributes
    },
    pie3DChart: {
        type: 'child',
        childAttributes: CT_Pie3DChart_Attributes
    },
    doughnutChart: {
        type: 'child',
        childAttributes: CT_DoughnutChart_Attributes
    },
    barChart: {
        type: 'child',
        childAttributes: CT_BarChart_Attributes
    },
    bar3DChart: {
        type: 'child',
        childAttributes: CT_Bar3DChart_Attributes
    },
    ofPieChart: {
        type: 'child',
        childAttributes: CT_OfPieChart_Attributes
    },
    surfaceChart: {
        type: 'child',
        childAttributes: CT_SurfaceChart_Attributes
    },
    surface3DChart: {
        type: 'child',
        childAttributes: CT_Surface3DChart_Attributes
    },
    bubbleChart: {
        type: 'child',
        childAttributes: CT_BubbleChart_Attributes
    },
    valAx: {
        type: 'child',
        childAttributes: CT_ValAx_Attributes
    },
    catAx: {
        type: 'child',
        childAttributes: CT_CatAx_Attributes
    },
    dateAx: {
        type: 'child',
        childAttributes: CT_DateAx_Attributes
    },
    serAx: {
        type: 'child',
        childAttributes: CT_SerAx_Attributes
    },
    dTable: {
        type: 'child',
        childAttributes: CT_DTable_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_PivotFmt_Attributes = {
    idx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    txPr: {
        type: 'child',
        childAttributes: CT_TextBody_Attributes
    },
    marker: {
        type: 'child',
        childAttributes: CT_Marker_Attributes
    },
    dLbl: {
        type: 'child',
        childAttributes: CT_DLbl_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_PivotFmts_Attributes = {
    pivotFmt: {
        type: 'child',
        childAttributes: CT_PivotFmt_Attributes,
        childIsArray: true
    }
};
var CT_LegendPos_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'r'
    }
};
var CT_LegendEntry_Attributes = {
    idx: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    delete: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_Legend_Attributes = {
    legendPos: {
        type: 'child',
        childAttributes: CT_LegendPos_Attributes
    },
    legendEntry: {
        type: 'child',
        childAttributes: CT_LegendEntry_Attributes,
        childIsArray: true
    },
    layout: {
        type: 'child',
        childAttributes: CT_Layout_Attributes
    },
    overlay: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    txPr: {
        type: 'child',
        childAttributes: CT_TextBody_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_DispBlanksAs_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'zero'
    }
};
var CT_Chart_Attributes = {
    title: {
        type: 'child',
        childAttributes: CT_Title_Attributes
    },
    autoTitleDeleted: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    pivotFmts: {
        type: 'child',
        childAttributes: CT_PivotFmts_Attributes
    },
    view3D: {
        type: 'child',
        childAttributes: CT_View3D_Attributes
    },
    floor: {
        type: 'child',
        childAttributes: CT_Surface_Attributes
    },
    sideWall: {
        type: 'child',
        childAttributes: CT_Surface_Attributes
    },
    backWall: {
        type: 'child',
        childAttributes: CT_Surface_Attributes
    },
    plotArea: {
        type: 'child',
        childAttributes: CT_PlotArea_Attributes
    },
    legend: {
        type: 'child',
        childAttributes: CT_Legend_Attributes
    },
    plotVisOnly: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    dispBlanksAs: {
        type: 'child',
        childAttributes: CT_DispBlanksAs_Attributes
    },
    showDLblsOverMax: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};
var CT_Style_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_PivotSource_Attributes = {
    name: {
        type: 'child-string'
    },
    fmtId: {
        type: 'child',
        childAttributes: CT_UnsignedInt_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes,
        childIsArray: true
    }
};
var CT_Protection_Attributes = {
    chartObject: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    data: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    formatting: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    selection: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    userInterface: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    }
};
var CT_HeaderFooter_Attributes = {
    oddHeader: {
        type: 'child-string'
    },
    oddFooter: {
        type: 'child-string'
    },
    evenHeader: {
        type: 'child-string'
    },
    evenFooter: {
        type: 'child-string'
    },
    firstHeader: {
        type: 'child-string'
    },
    firstFooter: {
        type: 'child-string'
    },
    alignWithMargins: {
        type: 'boolean',
        defaultValue: 'true'
    },
    differentOddEven: {
        type: 'boolean',
        defaultValue: 'false'
    },
    differentFirst: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_PageMargins_Attributes = {
    l: {
        type: 'double'
    },
    r: {
        type: 'double'
    },
    t: {
        type: 'double'
    },
    b: {
        type: 'double'
    },
    header: {
        type: 'double'
    },
    footer: {
        type: 'double'
    }
};
var CT_ExternalData_Attributes = {
    'autoUpdate': {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    'r:id': {
        type: 'string'
    }
};
var CT_PageSetup_Attributes = {
    paperSize: {
        type: 'int',
        defaultValue: '1'
    },
    paperHeight: {
        type: 'string'
    },
    paperWidth: {
        type: 'string'
    },
    firstPageNumber: {
        type: 'int',
        defaultValue: '1'
    },
    orientation: {
        type: 'string',
        defaultValue: 'default'
    },
    blackAndWhite: {
        type: 'boolean',
        defaultValue: 'false'
    },
    draft: {
        type: 'boolean',
        defaultValue: 'false'
    },
    useFirstPageNumber: {
        type: 'boolean',
        defaultValue: 'false'
    },
    horizontalDpi: {
        type: 'int',
        defaultValue: '600'
    },
    verticalDpi: {
        type: 'int',
        defaultValue: '600'
    },
    copies: {
        type: 'int',
        defaultValue: '1'
    }
};
var CT_PrintSettings_Attributes = {
    headerFooter: {
        type: 'child',
        childAttributes: CT_HeaderFooter_Attributes
    },
    pageMargins: {
        type: 'child',
        childAttributes: CT_PageMargins_Attributes
    },
    pageSetup: {
        type: 'child',
        childAttributes: CT_PageSetup_Attributes
    }
};
var CT_ChartSpace_Attributes = {
    date1904: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    lang: {
        type: 'child',
        childAttributes: CT_TextLanguageID_Attributes
    },
    roundedCorners: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes
    },
    style: {
        type: 'child',
        childAttributes: CT_Style_Attributes
    },
    clrMapOvr: {
        type: 'child',
        childAttributes: CT_ColorMapping_Attributes
    },
    pivotSource: {
        type: 'child',
        childAttributes: CT_PivotSource_Attributes
    },
    protection: {
        type: 'child',
        childAttributes: CT_Protection_Attributes
    },
    chart: {
        type: 'child',
        childAttributes: CT_Chart_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    txPr: {
        type: 'child',
        childAttributes: CT_TextBody_Attributes
    },
    externalData: {
        type: 'child',
        childAttributes: CT_ExternalData_Attributes
    },
    printSettings: {
        type: 'child',
        childAttributes: CT_PrintSettings_Attributes
    },
    userShapes: {
        type: 'child',
        childAttributes: CT_RelId_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList_Attributes
    }
};

export { CT_AdjPoint2D_Attributes, CT_AdjustHandleList_Attributes, CT_AlphaBiLevelEffect_Attributes, CT_AlphaCeilingEffect_Attributes, CT_AlphaFloorEffect_Attributes, CT_AlphaInverseEffect_Attributes, CT_AlphaModulateEffect_Attributes, CT_AlphaModulateFixedEffect_Attributes, CT_AlphaReplaceEffect_Attributes, CT_Angle_Attributes, CT_Area3DChart_Attributes, CT_AreaChart_Attributes, CT_AreaSer_Attributes, CT_AxDataSource_Attributes, CT_AxPos_Attributes, CT_AxisUnit_Attributes, CT_Backdrop_Attributes, CT_BandFmt_Attributes, CT_BandFmts_Attributes, CT_Bar3DChart_Attributes, CT_BarChart_Attributes, CT_BarDir_Attributes, CT_BarGrouping_Attributes, CT_BarSer_Attributes, CT_Bevel_Attributes, CT_BiLevelEffect_Attributes, CT_BlipFillProperties_Attributes, CT_Blip_Attributes, CT_BlurEffect_Attributes, CT_Boolean_Attributes, CT_BubbleChart_Attributes, CT_BubbleScale_Attributes, CT_BubbleSer_Attributes, CT_BuiltInUnit_Attributes, CT_Camera_Attributes, CT_CatAx_Attributes, CT_ChartLines_Attributes, CT_ChartSpace_Attributes, CT_Chart_Attributes, CT_ColorChangeEffect_Attributes, CT_ColorMapping_Attributes, CT_ColorReplaceEffect_Attributes, CT_Color_Attributes, CT_ComplementTransform_Attributes, CT_ConnectionSiteList_Attributes, CT_ConnectionSite_Attributes, CT_CrossBetween_Attributes, CT_Crosses_Attributes, CT_CustSplit_Attributes, CT_CustomGeometry2D_Attributes, CT_DLbl_Attributes, CT_DLbls_Attributes, CT_DPt_Attributes, CT_DTable_Attributes, CT_DashStopList_Attributes, CT_DashStop_Attributes, CT_DateAx_Attributes, CT_DepthPercent_Attributes, CT_DispBlanksAs_Attributes, CT_DispUnitsLbl_Attributes, CT_DispUnits_Attributes, CT_Double_Attributes, CT_DoughnutChart_Attributes, CT_DuotoneEffect_Attributes, CT_EffectContainer_Attributes, CT_EffectList_Attributes, CT_EmbeddedWAVAudioFile_Attributes, CT_ErrBarType_Attributes, CT_ErrBars_Attributes, CT_ErrDir_Attributes, CT_ErrValType_Attributes, CT_ExternalData_Attributes, CT_FillOverlayEffect_Attributes, CT_FirstSliceAng_Attributes, CT_FixedPercentage_Attributes, CT_FlatText_Attributes, CT_GammaTransform_Attributes, CT_GapAmount_Attributes, CT_GeomGuideList_Attributes, CT_GeomGuide_Attributes, CT_GeomRect_Attributes, CT_GradientFillProperties_Attributes, CT_GradientStopList_Attributes, CT_GradientStop_Attributes, CT_GrayscaleEffect_Attributes, CT_GrayscaleTransform_Attributes, CT_GroupFillProperties_Attributes, CT_Grouping_Attributes, CT_HPercent_Attributes, CT_HSLEffect_Attributes, CT_HeaderFooter_Attributes, CT_HoleSize_Attributes, CT_HslColor_Attributes, CT_Hyperlink_Attributes, CT_InverseGammaTransform_Attributes, CT_InverseTransform_Attributes, CT_LayoutMode_Attributes, CT_LayoutTarget_Attributes, CT_Layout_Attributes, CT_LblAlgn_Attributes, CT_LblOffset_Attributes, CT_LegendEntry_Attributes, CT_LegendPos_Attributes, CT_Legend_Attributes, CT_LightRig_Attributes, CT_Line3DChart_Attributes, CT_LineChart_Attributes, CT_LineEndProperties_Attributes, CT_LineJoinBevel_Attributes, CT_LineJoinMiterProperties_Attributes, CT_LineJoinRound_Attributes, CT_LineProperties_Attributes, CT_LineSer_Attributes, CT_LinearShadeProperties_Attributes, CT_LogBase_Attributes, CT_LuminanceEffect_Attributes, CT_Lvl_Attributes, CT_ManualLayout_Attributes, CT_MarkerSize_Attributes, CT_MarkerStyle_Attributes, CT_Marker_Attributes, CT_MultiLvlStrData_Attributes, CT_MultiLvlStrRef_Attributes, CT_NoFillProperties_Attributes, CT_NumDataSource_Attributes, CT_NumData_Attributes, CT_NumFmt_Attributes, CT_NumRef_Attributes, CT_NumVal_Attributes, CT_OfPieChart_Attributes, CT_OfPieType_Attributes, CT_OfficeArtExtensionList_Attributes, CT_OfficeArtExtension_Attributes, CT_Order_Attributes, CT_Orientation_Attributes, CT_Overlap_Attributes, CT_PageMargins_Attributes, CT_PageSetup_Attributes, CT_Path2DArcTo_Attributes, CT_Path2DClose_Attributes, CT_Path2DCubicBezierTo_Attributes, CT_Path2DLineTo_Attributes, CT_Path2DList_Attributes, CT_Path2DMoveTo_Attributes, CT_Path2DQuadBezierTo_Attributes, CT_Path2D_Attributes, CT_PathShadeProperties_Attributes, CT_PatternFillProperties_Attributes, CT_Percentage_Attributes, CT_Period_Attributes, CT_Perspective_Attributes, CT_PictureFormat_Attributes, CT_PictureOptions_Attributes, CT_PictureStackUnit_Attributes, CT_Pie3DChart_Attributes, CT_PieChart_Attributes, CT_PieSer_Attributes, CT_PivotFmt_Attributes, CT_PivotFmts_Attributes, CT_PivotSource_Attributes, CT_PlotArea_Attributes, CT_Point2D_Attributes, CT_Point3D_Attributes, CT_PolarAdjustHandle_Attributes, CT_PositiveFixedAngle_Attributes, CT_PositiveFixedPercentage_Attributes, CT_PositivePercentage_Attributes, CT_PositiveSize2D_Attributes, CT_PresetColor_Attributes, CT_PresetGeometry2D_Attributes, CT_PresetLineDashProperties_Attributes, CT_PresetTextShape_Attributes, CT_PrintSettings_Attributes, CT_Protection_Attributes, CT_RadarChart_Attributes, CT_RadarSer_Attributes, CT_RadarStyle_Attributes, CT_RegularTextRun_Attributes, CT_RelId_Attributes, CT_RelativeRect_Attributes, CT_RotX_Attributes, CT_RotY_Attributes, CT_SRgbColor_Attributes, CT_ScRgbColor_Attributes, CT_Scaling_Attributes, CT_ScatterChart_Attributes, CT_ScatterSer_Attributes, CT_ScatterStyle_Attributes, CT_Scene3D_Attributes, CT_SchemeColor_Attributes, CT_SecondPieSize_Attributes, CT_SerAx_Attributes, CT_SerTx_Attributes, CT_Shape3D_Attributes, CT_ShapeProperties_Attributes, CT_Shape_Attributes, CT_SizeRepresents_Attributes, CT_Skip_Attributes, CT_SolidColorFillProperties_Attributes, CT_SphereCoords_Attributes, CT_SplitType_Attributes, CT_StockChart_Attributes, CT_StrData_Attributes, CT_StrRef_Attributes, CT_StrVal_Attributes, CT_Style_Attributes, CT_Surface3DChart_Attributes, CT_SurfaceChart_Attributes, CT_SurfaceSer_Attributes, CT_Surface_Attributes, CT_SystemColor_Attributes, CT_TextAutonumberBullet_Attributes, CT_TextBlipBullet_Attributes, CT_TextBodyProperties_Attributes, CT_TextBody_Attributes, CT_TextBulletColorFollowText_Attributes, CT_TextBulletSizeFollowText_Attributes, CT_TextBulletSizePercent_Attributes, CT_TextBulletSizePoint_Attributes, CT_TextBulletTypefaceFollowText_Attributes, CT_TextCharBullet_Attributes, CT_TextCharacterProperties_Attributes, CT_TextField_Attributes, CT_TextFont_Attributes, CT_TextLanguageID_Attributes, CT_TextLineBreak_Attributes, CT_TextListStyle_Attributes, CT_TextNoAutofit_Attributes, CT_TextNoBullet_Attributes, CT_TextNormalAutofit_Attributes, CT_TextParagraphProperties_Attributes, CT_TextParagraph_Attributes, CT_TextShapeAutofit_Attributes, CT_TextSpacingPercent_Attributes, CT_TextSpacingPoint_Attributes, CT_TextSpacing_Attributes, CT_TextTabStopList_Attributes, CT_TextTabStop_Attributes, CT_TextUnderlineFillFollowText_Attributes, CT_TextUnderlineFillGroupWrapper_Attributes, CT_TextUnderlineLineFollowText_Attributes, CT_Thickness_Attributes, CT_TickLblPos_Attributes, CT_TickMark_Attributes, CT_TimeUnit_Attributes, CT_TintEffect_Attributes, CT_Title_Attributes, CT_Transform2D_Attributes, CT_TrendlineLbl_Attributes, CT_TrendlineType_Attributes, CT_Trendline_Attributes, CT_Tx_Attributes, CT_UnsignedInt_Attributes, CT_UpDownBar_Attributes, CT_UpDownBars_Attributes, CT_ValAx_Attributes, CT_Vector3D_Attributes, CT_View3D_Attributes, CT_XYAdjustHandle_Attributes };
