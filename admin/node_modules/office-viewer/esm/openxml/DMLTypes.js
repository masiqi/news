var CT_OfficeArtExtension_Attributes = {
    uri: {
        type: 'string'
    }
};
var CT_OfficeArtExtensionList_Attributes = {
    ext: {
        type: 'child',
        childAttributes: CT_OfficeArtExtension_Attributes,
        childIsArray: true
    }
};
var CT_PositiveFixedPercentage_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_ComplementTransform_Attributes = {};
var CT_InverseTransform_Attributes = {};
var CT_GrayscaleTransform_Attributes = {};
var CT_FixedPercentage_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_PositivePercentage_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_PositiveFixedAngle_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_Angle_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_Percentage_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_GammaTransform_Attributes = {};
var CT_InverseGammaTransform_Attributes = {};
var CT_ScRgbColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'child',
        childAttributes: CT_PositiveFixedAngle_Attributes
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    },
    r: {
        type: 'string'
    },
    g: {
        type: 'string'
    },
    b: {
        type: 'string'
    }
};
var CT_SRgbColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'child',
        childAttributes: CT_PositiveFixedAngle_Attributes
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    },
    val: {
        type: 'string'
    }
};
var CT_HslColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'int'
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'string'
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'string'
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    }
};
var CT_SystemColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'child',
        childAttributes: CT_PositiveFixedAngle_Attributes
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    },
    val: {
        type: 'string'
    },
    lastClr: {
        type: 'string'
    }
};
var CT_SchemeColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'child',
        childAttributes: CT_PositiveFixedAngle_Attributes
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    },
    val: {
        type: 'string'
    }
};
var CT_PresetColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'child',
        childAttributes: CT_PositiveFixedAngle_Attributes
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    },
    val: {
        type: 'string'
    }
};
var CT_Color_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    }
};
var CT_ColorScheme_Attributes = {
    dk1: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    lt1: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    dk2: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    lt2: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    accent1: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    accent2: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    accent3: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    accent4: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    accent5: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    accent6: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    hlink: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    folHlink: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    name: {
        type: 'string'
    }
};
var CT_CustomColor_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    },
    name: {
        type: 'string'
    }
};
var CT_SupplementalFont_Attributes = {
    script: {
        type: 'string'
    },
    typeface: {
        type: 'string'
    }
};
var CT_CustomColorList_Attributes = {
    custClr: {
        type: 'child',
        childAttributes: CT_CustomColor_Attributes,
        childIsArray: true
    }
};
var CT_TextFont_Attributes = {
    typeface: {
        type: 'string'
    },
    panose: {
        type: 'string'
    },
    pitchFamily: {
        type: 'int'
    },
    charset: {
        type: 'int'
    }
};
var CT_FontCollection_Attributes = {
    latin: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes
    },
    ea: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes
    },
    cs: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes
    },
    font: {
        type: 'child',
        childAttributes: CT_SupplementalFont_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    }
};
var CT_BlurEffect_Attributes = {
    rad: {
        type: 'int'
    },
    grow: {
        type: 'boolean'
    }
};
var CT_NoFillProperties_Attributes = {};
var CT_SolidColorFillProperties_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    }
};
var CT_GradientStop_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    },
    pos: {
        type: 'string'
    }
};
var CT_GradientStopList_Attributes = {
    gs: {
        type: 'child',
        childAttributes: CT_GradientStop_Attributes,
        childIsArray: true
    }
};
var CT_LinearShadeProperties_Attributes = {
    ang: {
        type: 'int'
    },
    scaled: {
        type: 'boolean'
    }
};
var CT_RelativeRect_Attributes = {
    l: {
        type: 'string'
    },
    t: {
        type: 'string'
    },
    r: {
        type: 'string'
    },
    b: {
        type: 'string'
    }
};
var CT_PathShadeProperties_Attributes = {
    fillToRect: {
        type: 'child',
        childAttributes: CT_RelativeRect_Attributes
    },
    path: {
        type: 'string'
    }
};
var CT_GradientFillProperties_Attributes = {
    gsLst: {
        type: 'child',
        childAttributes: CT_GradientStopList_Attributes
    },
    lin: {
        type: 'child',
        childAttributes: CT_LinearShadeProperties_Attributes
    },
    path: {
        type: 'child',
        childAttributes: CT_PathShadeProperties_Attributes
    },
    tileRect: {
        type: 'child',
        childAttributes: CT_RelativeRect_Attributes
    },
    flip: {
        type: 'string'
    },
    rotWithShape: {
        type: 'boolean'
    }
};
var CT_Blip_Attributes = {
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    cstate: {
        type: 'string'
    }
};
var CT_TileInfoProperties_Attributes = {
    tx: {
        type: 'string'
    },
    ty: {
        type: 'string'
    },
    sx: {
        type: 'string'
    },
    sy: {
        type: 'string'
    },
    flip: {
        type: 'string'
    },
    algn: {
        type: 'string'
    }
};
var CT_StretchInfoProperties_Attributes = {
    fillRect: {
        type: 'child',
        childAttributes: CT_RelativeRect_Attributes
    }
};
var CT_BlipFillProperties_Attributes = {
    blip: {
        type: 'child',
        childAttributes: CT_Blip_Attributes
    },
    srcRect: {
        type: 'child',
        childAttributes: CT_RelativeRect_Attributes
    },
    tile: {
        type: 'child',
        childAttributes: CT_TileInfoProperties_Attributes
    },
    stretch: {
        type: 'child',
        childAttributes: CT_StretchInfoProperties_Attributes
    },
    dpi: {
        type: 'int'
    },
    rotWithShape: {
        type: 'boolean'
    }
};
var CT_PatternFillProperties_Attributes = {
    fgClr: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    bgClr: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    prst: {
        type: 'string'
    }
};
var CT_GroupFillProperties_Attributes = {};
var CT_FillOverlayEffect_Attributes = {
    noFill: {
        type: 'child',
        childAttributes: CT_NoFillProperties_Attributes
    },
    solidFill: {
        type: 'child',
        childAttributes: CT_SolidColorFillProperties_Attributes
    },
    gradFill: {
        type: 'child',
        childAttributes: CT_GradientFillProperties_Attributes
    },
    blipFill: {
        type: 'child',
        childAttributes: CT_BlipFillProperties_Attributes
    },
    pattFill: {
        type: 'child',
        childAttributes: CT_PatternFillProperties_Attributes
    },
    grpFill: {
        type: 'child',
        childAttributes: CT_GroupFillProperties_Attributes
    },
    blend: {
        type: 'string'
    }
};
var CT_GlowEffect_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    },
    rad: {
        type: 'int'
    }
};
var CT_InnerShadowEffect_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    },
    blurRad: {
        type: 'int'
    },
    dist: {
        type: 'int'
    },
    dir: {
        type: 'int'
    }
};
var CT_OuterShadowEffect_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    },
    blurRad: {
        type: 'int'
    },
    dist: {
        type: 'int'
    },
    dir: {
        type: 'int'
    },
    sx: {
        type: 'string'
    },
    sy: {
        type: 'string'
    },
    kx: {
        type: 'int'
    },
    ky: {
        type: 'int'
    },
    algn: {
        type: 'string'
    },
    rotWithShape: {
        type: 'boolean'
    }
};
var CT_PresetShadowEffect_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    },
    prst: {
        type: 'string'
    },
    dist: {
        type: 'int'
    },
    dir: {
        type: 'int'
    }
};
var CT_ReflectionEffect_Attributes = {
    blurRad: {
        type: 'int'
    },
    stA: {
        type: 'string'
    },
    stPos: {
        type: 'string'
    },
    endA: {
        type: 'string'
    },
    endPos: {
        type: 'string'
    },
    dist: {
        type: 'int'
    },
    dir: {
        type: 'int'
    },
    fadeDir: {
        type: 'int'
    },
    sx: {
        type: 'string'
    },
    sy: {
        type: 'string'
    },
    kx: {
        type: 'int'
    },
    ky: {
        type: 'int'
    },
    algn: {
        type: 'string'
    },
    rotWithShape: {
        type: 'boolean'
    }
};
var CT_SoftEdgesEffect_Attributes = {
    rad: {
        type: 'int'
    }
};
var CT_EffectList_Attributes = {
    blur: {
        type: 'child',
        childAttributes: CT_BlurEffect_Attributes
    },
    fillOverlay: {
        type: 'child',
        childAttributes: CT_FillOverlayEffect_Attributes
    },
    glow: {
        type: 'child',
        childAttributes: CT_GlowEffect_Attributes
    },
    innerShdw: {
        type: 'child',
        childAttributes: CT_InnerShadowEffect_Attributes
    },
    outerShdw: {
        type: 'child',
        childAttributes: CT_OuterShadowEffect_Attributes
    },
    prstShdw: {
        type: 'child',
        childAttributes: CT_PresetShadowEffect_Attributes
    },
    reflection: {
        type: 'child',
        childAttributes: CT_ReflectionEffect_Attributes
    },
    softEdge: {
        type: 'child',
        childAttributes: CT_SoftEdgesEffect_Attributes
    }
};
var CT_EffectContainer_Attributes = {
    type: {
        type: 'string'
    },
    name: {
        type: 'string'
    }
};
var CT_SphereCoords_Attributes = {
    lat: {
        type: 'int'
    },
    lon: {
        type: 'int'
    },
    rev: {
        type: 'int'
    }
};
var CT_Camera_Attributes = {
    rot: {
        type: 'child',
        childAttributes: CT_SphereCoords_Attributes
    },
    prst: {
        type: 'string'
    },
    fov: {
        type: 'int'
    },
    zoom: {
        type: 'string'
    }
};
var CT_LightRig_Attributes = {
    rot: {
        type: 'child',
        childAttributes: CT_SphereCoords_Attributes
    },
    rig: {
        type: 'string'
    },
    dir: {
        type: 'string'
    }
};
var CT_Point3D_Attributes = {
    x: {
        type: 'string'
    },
    y: {
        type: 'string'
    },
    z: {
        type: 'string'
    }
};
var CT_Vector3D_Attributes = {
    dx: {
        type: 'string'
    },
    dy: {
        type: 'string'
    },
    dz: {
        type: 'string'
    }
};
var CT_Backdrop_Attributes = {
    anchor: {
        type: 'child',
        childAttributes: CT_Point3D_Attributes
    },
    norm: {
        type: 'child',
        childAttributes: CT_Vector3D_Attributes
    },
    up: {
        type: 'child',
        childAttributes: CT_Vector3D_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    }
};
var CT_Scene3D_Attributes = {
    camera: {
        type: 'child',
        childAttributes: CT_Camera_Attributes
    },
    lightRig: {
        type: 'child',
        childAttributes: CT_LightRig_Attributes
    },
    backdrop: {
        type: 'child',
        childAttributes: CT_Backdrop_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    }
};
var CT_Bevel_Attributes = {
    w: {
        type: 'int'
    },
    h: {
        type: 'int'
    },
    prst: {
        type: 'string'
    }
};
var CT_Shape3D_Attributes = {
    bevelT: {
        type: 'child',
        childAttributes: CT_Bevel_Attributes
    },
    bevelB: {
        type: 'child',
        childAttributes: CT_Bevel_Attributes
    },
    extrusionClr: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    contourClr: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    z: {
        type: 'string'
    },
    extrusionH: {
        type: 'int'
    },
    contourW: {
        type: 'int'
    },
    prstMaterial: {
        type: 'string'
    }
};
var CT_EffectStyleItem_Attributes = {
    effectLst: {
        type: 'child',
        childAttributes: CT_EffectList_Attributes
    },
    effectDag: {
        type: 'child',
        childAttributes: CT_EffectContainer_Attributes
    },
    scene3d: {
        type: 'child',
        childAttributes: CT_Scene3D_Attributes
    },
    sp3d: {
        type: 'child',
        childAttributes: CT_Shape3D_Attributes
    }
};
var CT_FontScheme_Attributes = {
    majorFont: {
        type: 'child',
        childAttributes: CT_FontCollection_Attributes
    },
    minorFont: {
        type: 'child',
        childAttributes: CT_FontCollection_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    name: {
        type: 'string'
    }
};
var CT_FillStyleList_Attributes = {
    noFill: {
        type: 'child',
        childAttributes: CT_NoFillProperties_Attributes
    },
    solidFill: {
        type: 'child',
        childAttributes: CT_SolidColorFillProperties_Attributes
    },
    gradFill: {
        type: 'child',
        childAttributes: CT_GradientFillProperties_Attributes
    },
    blipFill: {
        type: 'child',
        childAttributes: CT_BlipFillProperties_Attributes
    },
    pattFill: {
        type: 'child',
        childAttributes: CT_PatternFillProperties_Attributes
    },
    grpFill: {
        type: 'child',
        childAttributes: CT_GroupFillProperties_Attributes
    }
};
var CT_PresetLineDashProperties_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_DashStop_Attributes = {
    d: {
        type: 'string'
    },
    sp: {
        type: 'string'
    }
};
var CT_DashStopList_Attributes = {
    ds: {
        type: 'child',
        childAttributes: CT_DashStop_Attributes,
        childIsArray: true
    }
};
var CT_LineJoinRound_Attributes = {};
var CT_LineJoinBevel_Attributes = {};
var CT_LineJoinMiterProperties_Attributes = {
    lim: {
        type: 'string'
    }
};
var CT_LineEndProperties_Attributes = {
    type: {
        type: 'string'
    },
    w: {
        type: 'string'
    },
    len: {
        type: 'string'
    }
};
var CT_LineProperties_Attributes = {
    noFill: {
        type: 'child',
        childAttributes: CT_NoFillProperties_Attributes
    },
    solidFill: {
        type: 'child',
        childAttributes: CT_SolidColorFillProperties_Attributes
    },
    gradFill: {
        type: 'child',
        childAttributes: CT_GradientFillProperties_Attributes
    },
    pattFill: {
        type: 'child',
        childAttributes: CT_PatternFillProperties_Attributes
    },
    prstDash: {
        type: 'child',
        childAttributes: CT_PresetLineDashProperties_Attributes
    },
    custDash: {
        type: 'child',
        childAttributes: CT_DashStopList_Attributes
    },
    round: {
        type: 'child',
        childAttributes: CT_LineJoinRound_Attributes
    },
    bevel: {
        type: 'child',
        childAttributes: CT_LineJoinBevel_Attributes
    },
    miter: {
        type: 'child',
        childAttributes: CT_LineJoinMiterProperties_Attributes
    },
    headEnd: {
        type: 'child',
        childAttributes: CT_LineEndProperties_Attributes
    },
    tailEnd: {
        type: 'child',
        childAttributes: CT_LineEndProperties_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    w: {
        type: 'int'
    },
    cap: {
        type: 'string'
    },
    cmpd: {
        type: 'string'
    },
    algn: {
        type: 'string'
    }
};
var CT_LineStyleList_Attributes = {
    ln: {
        type: 'child',
        childAttributes: CT_LineProperties_Attributes,
        childIsArray: true
    }
};
var CT_EffectStyleList_Attributes = {
    effectStyle: {
        type: 'child',
        childAttributes: CT_EffectStyleItem_Attributes,
        childIsArray: true
    }
};
var CT_BackgroundFillStyleList_Attributes = {
    noFill: {
        type: 'child',
        childAttributes: CT_NoFillProperties_Attributes
    },
    solidFill: {
        type: 'child',
        childAttributes: CT_SolidColorFillProperties_Attributes
    },
    gradFill: {
        type: 'child',
        childAttributes: CT_GradientFillProperties_Attributes
    },
    blipFill: {
        type: 'child',
        childAttributes: CT_BlipFillProperties_Attributes
    },
    pattFill: {
        type: 'child',
        childAttributes: CT_PatternFillProperties_Attributes
    },
    grpFill: {
        type: 'child',
        childAttributes: CT_GroupFillProperties_Attributes
    }
};
var CT_StyleMatrix_Attributes = {
    fillStyleLst: {
        type: 'child',
        childAttributes: CT_FillStyleList_Attributes
    },
    lnStyleLst: {
        type: 'child',
        childAttributes: CT_LineStyleList_Attributes
    },
    effectStyleLst: {
        type: 'child',
        childAttributes: CT_EffectStyleList_Attributes
    },
    bgFillStyleLst: {
        type: 'child',
        childAttributes: CT_BackgroundFillStyleList_Attributes
    },
    name: {
        type: 'string'
    }
};
var CT_BaseStyles_Attributes = {
    clrScheme: {
        type: 'child',
        childAttributes: CT_ColorScheme_Attributes
    },
    fontScheme: {
        type: 'child',
        childAttributes: CT_FontScheme_Attributes
    },
    fmtScheme: {
        type: 'child',
        childAttributes: CT_StyleMatrix_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    }
};
var CT_Point2D_Attributes = {
    x: {
        type: 'string'
    },
    y: {
        type: 'string'
    }
};
var CT_PositiveSize2D_Attributes = {
    cx: {
        type: 'int'
    },
    cy: {
        type: 'int'
    }
};
var CT_Transform2D_Attributes = {
    off: {
        type: 'child',
        childAttributes: CT_Point2D_Attributes
    },
    ext: {
        type: 'child',
        childAttributes: CT_PositiveSize2D_Attributes
    },
    rot: {
        type: 'int'
    },
    flipH: {
        type: 'boolean'
    },
    flipV: {
        type: 'boolean'
    }
};
var CT_EmbeddedWAVAudioFile_Attributes = {
    name: {
        type: 'string'
    }
};
var CT_Hyperlink_Attributes = {
    snd: {
        type: 'child',
        childAttributes: CT_EmbeddedWAVAudioFile_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    r_id: {
        type: 'string'
    },
    invalidUrl: {
        type: 'string'
    },
    action: {
        type: 'string'
    },
    tgtFrame: {
        type: 'string'
    },
    tooltip: {
        type: 'string'
    },
    history: {
        type: 'boolean'
    },
    highlightClick: {
        type: 'boolean'
    },
    endSnd: {
        type: 'boolean'
    }
};
var CT_GeomGuide_Attributes = {
    name: {
        type: 'string'
    },
    fmla: {
        type: 'string'
    }
};
var CT_GeomGuideList_Attributes = {
    gd: {
        type: 'child',
        childAttributes: CT_GeomGuide_Attributes,
        childIsArray: true
    }
};
var CT_PresetTextShape_Attributes = {
    avLst: {
        type: 'child',
        childAttributes: CT_GeomGuideList_Attributes
    },
    prst: {
        type: 'string'
    }
};
var CT_TextNoAutofit_Attributes = {};
var CT_TextNormalAutofit_Attributes = {
    fontScale: {
        type: 'string'
    },
    lnSpcReduction: {
        type: 'string'
    }
};
var CT_TextShapeAutofit_Attributes = {};
var CT_FlatText_Attributes = {
    z: {
        type: 'string'
    }
};
var CT_TextBodyProperties_Attributes = {
    prstTxWarp: {
        type: 'child',
        childAttributes: CT_PresetTextShape_Attributes
    },
    noAutofit: {
        type: 'child',
        childAttributes: CT_TextNoAutofit_Attributes,
        childIsArray: true
    },
    normAutofit: {
        type: 'child',
        childAttributes: CT_TextNormalAutofit_Attributes,
        childIsArray: true
    },
    spAutoFit: {
        type: 'child',
        childAttributes: CT_TextShapeAutofit_Attributes,
        childIsArray: true
    },
    scene3d: {
        type: 'child',
        childAttributes: CT_Scene3D_Attributes
    },
    sp3d: {
        type: 'child',
        childAttributes: CT_Shape3D_Attributes
    },
    flatTx: {
        type: 'child',
        childAttributes: CT_FlatText_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    rot: {
        type: 'int'
    },
    spcFirstLastPara: {
        type: 'boolean'
    },
    vertOverflow: {
        type: 'string'
    },
    horzOverflow: {
        type: 'string'
    },
    vert: {
        type: 'string'
    },
    wrap: {
        type: 'string'
    },
    lIns: {
        type: 'string'
    },
    tIns: {
        type: 'string'
    },
    rIns: {
        type: 'string'
    },
    bIns: {
        type: 'string'
    },
    numCol: {
        type: 'int'
    },
    spcCol: {
        type: 'int'
    },
    rtlCol: {
        type: 'boolean'
    },
    fromWordArt: {
        type: 'boolean'
    },
    anchor: {
        type: 'string'
    },
    anchorCtr: {
        type: 'boolean'
    },
    forceAA: {
        type: 'boolean'
    },
    upright: {
        type: 'boolean'
    },
    compatLnSpc: {
        type: 'boolean'
    }
};
var CT_TextSpacingPercent_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_TextSpacingPoint_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_TextSpacing_Attributes = {
    spcPct: {
        type: 'child',
        childAttributes: CT_TextSpacingPercent_Attributes,
        childIsArray: true
    },
    spcPts: {
        type: 'child',
        childAttributes: CT_TextSpacingPoint_Attributes,
        childIsArray: true
    }
};
var CT_TextBulletColorFollowText_Attributes = {};
var CT_TextBulletSizeFollowText_Attributes = {};
var CT_TextBulletSizePercent_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_TextBulletSizePoint_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_TextBulletTypefaceFollowText_Attributes = {};
var CT_TextNoBullet_Attributes = {};
var CT_TextAutonumberBullet_Attributes = {
    type: {
        type: 'string'
    },
    startAt: {
        type: 'int'
    }
};
var CT_TextCharBullet_Attributes = {
    char: {
        type: 'string'
    }
};
var CT_TextBlipBullet_Attributes = {
    blip: {
        type: 'child',
        childAttributes: CT_Blip_Attributes
    }
};
var CT_TextTabStop_Attributes = {
    pos: {
        type: 'string'
    },
    algn: {
        type: 'string'
    }
};
var CT_TextTabStopList_Attributes = {
    tab: {
        type: 'child',
        childAttributes: CT_TextTabStop_Attributes,
        childIsArray: true
    }
};
var CT_TextUnderlineLineFollowText_Attributes = {};
var CT_TextUnderlineFillFollowText_Attributes = {};
var CT_TextUnderlineFillGroupWrapper_Attributes = {};
var CT_Boolean_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_TextCharacterProperties_Attributes = {
    ln: {
        type: 'child',
        childAttributes: CT_LineProperties_Attributes
    },
    noFill: {
        type: 'child',
        childAttributes: CT_NoFillProperties_Attributes
    },
    solidFill: {
        type: 'child',
        childAttributes: CT_SolidColorFillProperties_Attributes
    },
    gradFill: {
        type: 'child',
        childAttributes: CT_GradientFillProperties_Attributes
    },
    blipFill: {
        type: 'child',
        childAttributes: CT_BlipFillProperties_Attributes
    },
    pattFill: {
        type: 'child',
        childAttributes: CT_PatternFillProperties_Attributes
    },
    grpFill: {
        type: 'child',
        childAttributes: CT_GroupFillProperties_Attributes
    },
    effectLst: {
        type: 'child',
        childAttributes: CT_EffectList_Attributes
    },
    effectDag: {
        type: 'child',
        childAttributes: CT_EffectContainer_Attributes
    },
    highlight: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    uLnTx: {
        type: 'child',
        childAttributes: CT_TextUnderlineLineFollowText_Attributes,
        childIsArray: true
    },
    uLn: {
        type: 'child',
        childAttributes: CT_LineProperties_Attributes
    },
    uFillTx: {
        type: 'child',
        childAttributes: CT_TextUnderlineFillFollowText_Attributes,
        childIsArray: true
    },
    uFill: {
        type: 'child',
        childAttributes: CT_TextUnderlineFillGroupWrapper_Attributes,
        childIsArray: true
    },
    latin: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes
    },
    ea: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes
    },
    cs: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes
    },
    sym: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes
    },
    hlinkClick: {
        type: 'child',
        childAttributes: CT_Hyperlink_Attributes
    },
    hlinkMouseOver: {
        type: 'child',
        childAttributes: CT_Hyperlink_Attributes
    },
    rtl: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    kumimoji: {
        type: 'boolean'
    },
    lang: {
        type: 'string'
    },
    altLang: {
        type: 'string'
    },
    sz: {
        type: 'int'
    },
    b: {
        type: 'boolean'
    },
    i: {
        type: 'boolean'
    },
    u: {
        type: 'string'
    },
    strike: {
        type: 'string'
    },
    kern: {
        type: 'int'
    },
    cap: {
        type: 'string'
    },
    spc: {
        type: 'string'
    },
    normalizeH: {
        type: 'boolean'
    },
    baseline: {
        type: 'string'
    },
    noProof: {
        type: 'boolean'
    },
    dirty: {
        type: 'boolean'
    },
    err: {
        type: 'boolean'
    },
    smtClean: {
        type: 'boolean'
    },
    smtId: {
        type: 'int'
    },
    bmk: {
        type: 'string'
    }
};
var CT_TextParagraphProperties_Attributes = {
    lnSpc: {
        type: 'child',
        childAttributes: CT_TextSpacing_Attributes
    },
    spcBef: {
        type: 'child',
        childAttributes: CT_TextSpacing_Attributes
    },
    spcAft: {
        type: 'child',
        childAttributes: CT_TextSpacing_Attributes
    },
    buClrTx: {
        type: 'child',
        childAttributes: CT_TextBulletColorFollowText_Attributes
    },
    buClr: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    buSzTx: {
        type: 'child',
        childAttributes: CT_TextBulletSizeFollowText_Attributes,
        childIsArray: true
    },
    buSzPct: {
        type: 'child',
        childAttributes: CT_TextBulletSizePercent_Attributes,
        childIsArray: true
    },
    buSzPts: {
        type: 'child',
        childAttributes: CT_TextBulletSizePoint_Attributes,
        childIsArray: true
    },
    buFontTx: {
        type: 'child',
        childAttributes: CT_TextBulletTypefaceFollowText_Attributes,
        childIsArray: true
    },
    buFont: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes,
        childIsArray: true
    },
    buNone: {
        type: 'child',
        childAttributes: CT_TextNoBullet_Attributes,
        childIsArray: true
    },
    buAutoNum: {
        type: 'child',
        childAttributes: CT_TextAutonumberBullet_Attributes,
        childIsArray: true
    },
    buChar: {
        type: 'child',
        childAttributes: CT_TextCharBullet_Attributes,
        childIsArray: true
    },
    buBlip: {
        type: 'child',
        childAttributes: CT_TextBlipBullet_Attributes,
        childIsArray: true
    },
    tabLst: {
        type: 'child',
        childAttributes: CT_TextTabStopList_Attributes
    },
    defRPr: {
        type: 'child',
        childAttributes: CT_TextCharacterProperties_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    marL: {
        type: 'int'
    },
    marR: {
        type: 'int'
    },
    lvl: {
        type: 'int'
    },
    indent: {
        type: 'int'
    },
    algn: {
        type: 'string'
    },
    defTabSz: {
        type: 'string'
    },
    rtl: {
        type: 'boolean'
    },
    eaLnBrk: {
        type: 'boolean'
    },
    fontAlgn: {
        type: 'string'
    },
    latinLnBrk: {
        type: 'boolean'
    },
    hangingPunct: {
        type: 'boolean'
    }
};
var CT_TextListStyle_Attributes = {
    defPPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl1pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl2pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl3pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl4pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl5pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl6pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl7pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl8pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl9pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    }
};
var CT_AdjPoint2D_Attributes = {
    x: {
        type: 'string'
    },
    y: {
        type: 'string'
    }
};
var CT_XYAdjustHandle_Attributes = {
    pos: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes
    },
    gdRefX: {
        type: 'string'
    },
    minX: {
        type: 'string'
    },
    maxX: {
        type: 'string'
    },
    gdRefY: {
        type: 'string'
    },
    minY: {
        type: 'string'
    },
    maxY: {
        type: 'string'
    }
};
var CT_PolarAdjustHandle_Attributes = {
    pos: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes
    },
    gdRefR: {
        type: 'string'
    },
    minR: {
        type: 'string'
    },
    maxR: {
        type: 'string'
    },
    gdRefAng: {
        type: 'string'
    },
    minAng: {
        type: 'string'
    },
    maxAng: {
        type: 'string'
    }
};
var CT_AdjustHandleList_Attributes = {
    ahXY: {
        type: 'child',
        childAttributes: CT_XYAdjustHandle_Attributes
    },
    ahPolar: {
        type: 'child',
        childAttributes: CT_PolarAdjustHandle_Attributes
    }
};
var CT_ConnectionSite_Attributes = {
    pos: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes
    },
    ang: {
        type: 'string'
    }
};
var CT_ConnectionSiteList_Attributes = {
    cxn: {
        type: 'child',
        childAttributes: CT_ConnectionSite_Attributes,
        childIsArray: true
    }
};
var CT_GeomRect_Attributes = {
    l: {
        type: 'string'
    },
    t: {
        type: 'string'
    },
    r: {
        type: 'string'
    },
    b: {
        type: 'string'
    }
};
var CT_Path2DClose_Attributes = {};
var CT_Path2DMoveTo_Attributes = {
    pt: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes
    }
};
var CT_Path2DLineTo_Attributes = {
    pt: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes
    }
};
var CT_Path2DArcTo_Attributes = {
    wR: {
        type: 'string'
    },
    hR: {
        type: 'string'
    },
    stAng: {
        type: 'string'
    },
    swAng: {
        type: 'string'
    }
};
var CT_Path2DQuadBezierTo_Attributes = {
    pt: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes,
        childIsArray: true
    }
};
var CT_Path2DCubicBezierTo_Attributes = {
    pt: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes,
        childIsArray: true
    }
};
var CT_Path2D_Attributes = {
    close: {
        type: 'child',
        childAttributes: CT_Path2DClose_Attributes
    },
    moveTo: {
        type: 'child',
        childAttributes: CT_Path2DMoveTo_Attributes
    },
    lnTo: {
        type: 'child',
        childAttributes: CT_Path2DLineTo_Attributes
    },
    arcTo: {
        type: 'child',
        childAttributes: CT_Path2DArcTo_Attributes
    },
    quadBezTo: {
        type: 'child',
        childAttributes: CT_Path2DQuadBezierTo_Attributes
    },
    cubicBezTo: {
        type: 'child',
        childAttributes: CT_Path2DCubicBezierTo_Attributes
    },
    w: {
        type: 'int'
    },
    h: {
        type: 'int'
    },
    fill: {
        type: 'string'
    },
    stroke: {
        type: 'boolean'
    },
    extrusionOk: {
        type: 'boolean'
    }
};
var CT_Path2DList_Attributes = {
    path: {
        type: 'child',
        childAttributes: CT_Path2D_Attributes,
        childIsArray: true
    }
};
var CT_CustomGeometry2D_Attributes = {
    avLst: {
        type: 'child',
        childAttributes: CT_GeomGuideList_Attributes
    },
    gdLst: {
        type: 'child',
        childAttributes: CT_GeomGuideList_Attributes
    },
    ahLst: {
        type: 'child',
        childAttributes: CT_AdjustHandleList_Attributes
    },
    cxnLst: {
        type: 'child',
        childAttributes: CT_ConnectionSiteList_Attributes
    },
    rect: {
        type: 'child',
        childAttributes: CT_GeomRect_Attributes
    },
    pathLst: {
        type: 'child',
        childAttributes: CT_Path2DList_Attributes
    }
};
var CT_PresetGeometry2D_Attributes = {
    avLst: {
        type: 'child',
        childAttributes: CT_GeomGuideList_Attributes
    },
    prst: {
        type: 'string'
    }
};
var CT_ShapeProperties_Attributes = {
    xfrm: {
        type: 'child',
        childAttributes: CT_Transform2D_Attributes
    },
    custGeom: {
        type: 'child',
        childAttributes: CT_CustomGeometry2D_Attributes
    },
    prstGeom: {
        type: 'child',
        childAttributes: CT_PresetGeometry2D_Attributes
    },
    noFill: {
        type: 'child',
        childAttributes: CT_NoFillProperties_Attributes
    },
    solidFill: {
        type: 'child',
        childAttributes: CT_SolidColorFillProperties_Attributes
    },
    gradFill: {
        type: 'child',
        childAttributes: CT_GradientFillProperties_Attributes
    },
    blipFill: {
        type: 'child',
        childAttributes: CT_BlipFillProperties_Attributes
    },
    pattFill: {
        type: 'child',
        childAttributes: CT_PatternFillProperties_Attributes
    },
    grpFill: {
        type: 'child',
        childAttributes: CT_GroupFillProperties_Attributes
    },
    ln: {
        type: 'child',
        childAttributes: CT_LineProperties_Attributes
    },
    effectLst: {
        type: 'child',
        childAttributes: CT_EffectList_Attributes
    },
    effectDag: {
        type: 'child',
        childAttributes: CT_EffectContainer_Attributes
    },
    scene3d: {
        type: 'child',
        childAttributes: CT_Scene3D_Attributes
    },
    sp3d: {
        type: 'child',
        childAttributes: CT_Shape3D_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    bwMode: {
        type: 'string'
    }
};
var CT_StyleMatrixReference_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    },
    idx: {
        type: 'int'
    }
};
var CT_FontReference_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    },
    idx: {
        type: 'string'
    }
};
var CT_ShapeStyle_Attributes = {
    lnRef: {
        type: 'child',
        childAttributes: CT_StyleMatrixReference_Attributes
    },
    fillRef: {
        type: 'child',
        childAttributes: CT_StyleMatrixReference_Attributes
    },
    effectRef: {
        type: 'child',
        childAttributes: CT_StyleMatrixReference_Attributes
    },
    fontRef: {
        type: 'child',
        childAttributes: CT_FontReference_Attributes
    }
};
var CT_DefaultShapeDefinition_Attributes = {
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    bodyPr: {
        type: 'child',
        childAttributes: CT_TextBodyProperties_Attributes
    },
    lstStyle: {
        type: 'child',
        childAttributes: CT_TextListStyle_Attributes
    },
    style: {
        type: 'child',
        childAttributes: CT_ShapeStyle_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    }
};
var CT_ObjectStyleDefaults_Attributes = {
    spDef: {
        type: 'child',
        childAttributes: CT_DefaultShapeDefinition_Attributes
    },
    lnDef: {
        type: 'child',
        childAttributes: CT_DefaultShapeDefinition_Attributes
    },
    txDef: {
        type: 'child',
        childAttributes: CT_DefaultShapeDefinition_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    }
};
var CT_ColorMapping_Attributes = {
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    bg1: {
        type: 'string'
    },
    tx1: {
        type: 'string'
    },
    bg2: {
        type: 'string'
    },
    tx2: {
        type: 'string'
    },
    accent1: {
        type: 'string'
    },
    accent2: {
        type: 'string'
    },
    accent3: {
        type: 'string'
    },
    accent4: {
        type: 'string'
    },
    accent5: {
        type: 'string'
    },
    accent6: {
        type: 'string'
    },
    hlink: {
        type: 'string'
    },
    folHlink: {
        type: 'string'
    }
};
var CT_ColorSchemeAndMapping_Attributes = {
    clrScheme: {
        type: 'child',
        childAttributes: CT_ColorScheme_Attributes
    },
    clrMap: {
        type: 'child',
        childAttributes: CT_ColorMapping_Attributes
    }
};
var CT_ColorSchemeList_Attributes = {
    extraClrScheme: {
        type: 'child',
        childAttributes: CT_ColorSchemeAndMapping_Attributes,
        childIsArray: true
    }
};
var CT_OfficeStyleSheet_Attributes = {
    themeElements: {
        type: 'child',
        childAttributes: CT_BaseStyles_Attributes
    },
    objectDefaults: {
        type: 'child',
        childAttributes: CT_ObjectStyleDefaults_Attributes
    },
    extraClrSchemeLst: {
        type: 'child',
        childAttributes: CT_ColorSchemeList_Attributes
    },
    custClrLst: {
        type: 'child',
        childAttributes: CT_CustomColorList_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    name: {
        type: 'string'
    }
};

export { CT_AdjPoint2D_Attributes, CT_AdjustHandleList_Attributes, CT_Angle_Attributes, CT_Backdrop_Attributes, CT_BackgroundFillStyleList_Attributes, CT_BaseStyles_Attributes, CT_Bevel_Attributes, CT_BlipFillProperties_Attributes, CT_Blip_Attributes, CT_BlurEffect_Attributes, CT_Boolean_Attributes, CT_Camera_Attributes, CT_ColorMapping_Attributes, CT_ColorSchemeAndMapping_Attributes, CT_ColorSchemeList_Attributes, CT_ColorScheme_Attributes, CT_Color_Attributes, CT_ComplementTransform_Attributes, CT_ConnectionSiteList_Attributes, CT_ConnectionSite_Attributes, CT_CustomColorList_Attributes, CT_CustomColor_Attributes, CT_CustomGeometry2D_Attributes, CT_DashStopList_Attributes, CT_DashStop_Attributes, CT_DefaultShapeDefinition_Attributes, CT_EffectContainer_Attributes, CT_EffectList_Attributes, CT_EffectStyleItem_Attributes, CT_EffectStyleList_Attributes, CT_EmbeddedWAVAudioFile_Attributes, CT_FillOverlayEffect_Attributes, CT_FillStyleList_Attributes, CT_FixedPercentage_Attributes, CT_FlatText_Attributes, CT_FontCollection_Attributes, CT_FontReference_Attributes, CT_FontScheme_Attributes, CT_GammaTransform_Attributes, CT_GeomGuideList_Attributes, CT_GeomGuide_Attributes, CT_GeomRect_Attributes, CT_GlowEffect_Attributes, CT_GradientFillProperties_Attributes, CT_GradientStopList_Attributes, CT_GradientStop_Attributes, CT_GrayscaleTransform_Attributes, CT_GroupFillProperties_Attributes, CT_HslColor_Attributes, CT_Hyperlink_Attributes, CT_InnerShadowEffect_Attributes, CT_InverseGammaTransform_Attributes, CT_InverseTransform_Attributes, CT_LightRig_Attributes, CT_LineEndProperties_Attributes, CT_LineJoinBevel_Attributes, CT_LineJoinMiterProperties_Attributes, CT_LineJoinRound_Attributes, CT_LineProperties_Attributes, CT_LineStyleList_Attributes, CT_LinearShadeProperties_Attributes, CT_NoFillProperties_Attributes, CT_ObjectStyleDefaults_Attributes, CT_OfficeArtExtensionList_Attributes, CT_OfficeArtExtension_Attributes, CT_OfficeStyleSheet_Attributes, CT_OuterShadowEffect_Attributes, CT_Path2DArcTo_Attributes, CT_Path2DClose_Attributes, CT_Path2DCubicBezierTo_Attributes, CT_Path2DLineTo_Attributes, CT_Path2DList_Attributes, CT_Path2DMoveTo_Attributes, CT_Path2DQuadBezierTo_Attributes, CT_Path2D_Attributes, CT_PathShadeProperties_Attributes, CT_PatternFillProperties_Attributes, CT_Percentage_Attributes, CT_Point2D_Attributes, CT_Point3D_Attributes, CT_PolarAdjustHandle_Attributes, CT_PositiveFixedAngle_Attributes, CT_PositiveFixedPercentage_Attributes, CT_PositivePercentage_Attributes, CT_PositiveSize2D_Attributes, CT_PresetColor_Attributes, CT_PresetGeometry2D_Attributes, CT_PresetLineDashProperties_Attributes, CT_PresetShadowEffect_Attributes, CT_PresetTextShape_Attributes, CT_ReflectionEffect_Attributes, CT_RelativeRect_Attributes, CT_SRgbColor_Attributes, CT_ScRgbColor_Attributes, CT_Scene3D_Attributes, CT_SchemeColor_Attributes, CT_Shape3D_Attributes, CT_ShapeProperties_Attributes, CT_ShapeStyle_Attributes, CT_SoftEdgesEffect_Attributes, CT_SolidColorFillProperties_Attributes, CT_SphereCoords_Attributes, CT_StretchInfoProperties_Attributes, CT_StyleMatrixReference_Attributes, CT_StyleMatrix_Attributes, CT_SupplementalFont_Attributes, CT_SystemColor_Attributes, CT_TextAutonumberBullet_Attributes, CT_TextBlipBullet_Attributes, CT_TextBodyProperties_Attributes, CT_TextBulletColorFollowText_Attributes, CT_TextBulletSizeFollowText_Attributes, CT_TextBulletSizePercent_Attributes, CT_TextBulletSizePoint_Attributes, CT_TextBulletTypefaceFollowText_Attributes, CT_TextCharBullet_Attributes, CT_TextCharacterProperties_Attributes, CT_TextFont_Attributes, CT_TextListStyle_Attributes, CT_TextNoAutofit_Attributes, CT_TextNoBullet_Attributes, CT_TextNormalAutofit_Attributes, CT_TextParagraphProperties_Attributes, CT_TextShapeAutofit_Attributes, CT_TextSpacingPercent_Attributes, CT_TextSpacingPoint_Attributes, CT_TextSpacing_Attributes, CT_TextTabStopList_Attributes, CT_TextTabStop_Attributes, CT_TextUnderlineFillFollowText_Attributes, CT_TextUnderlineFillGroupWrapper_Attributes, CT_TextUnderlineLineFollowText_Attributes, CT_TileInfoProperties_Attributes, CT_Transform2D_Attributes, CT_Vector3D_Attributes, CT_XYAdjustHandle_Attributes };
