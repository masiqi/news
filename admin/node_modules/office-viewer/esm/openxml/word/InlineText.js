import { __values } from 'tslib';
import { BookmarkStart } from './Bookmark.js';
import { Hyperlink } from './Hyperlink.js';
import { Run } from './Run.js';

/**
 * 通用的文本元素
 */
var InlineText = /** @class */ (function () {
    function InlineText() {
        this.children = [];
    }
    InlineText.prototype.addChild = function (child) {
        this.children.push(child);
    };
    InlineText.fromXML = function (word, element) {
        var e_1, _a;
        var smartTag = new InlineText();
        try {
            for (var _b = __values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                var tagName = child.tagName;
                switch (tagName) {
                    case 'w:r':
                        smartTag.addChild(Run.fromXML(word, child));
                        break;
                    case 'w:hyperlink':
                        smartTag.addChild(Hyperlink.fromXML(word, child));
                        break;
                    case 'w:bookmarkStart':
                        smartTag.addChild(BookmarkStart.fromXML(word, child));
                    case 'w:bookmarkEnd':
                        // 没啥用所以不解析了
                        break;
                    case 'w:proofErr':
                    case 'w:noProof':
                        // 语法检查
                        break;
                    case 'w:smartTagPr':
                        // 看起来对渲染没用
                        break;
                    case 'w:del':
                        // del 看起来主要是用于跟踪历史的，先不支持
                        break;
                    default:
                        console.warn('parse Inline: Unknown key', tagName, child);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return smartTag;
    };
    return InlineText;
}());

export { InlineText };
