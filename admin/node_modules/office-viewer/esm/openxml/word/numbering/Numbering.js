import { __values } from 'tslib';
import { AbstractNum } from './AbstractNum.js';
import { Num } from './Num.js';

var Numbering = /** @class */ (function () {
    function Numbering() {
        this.abstractNums = {};
        this.nums = {};
        // 某个 numId 当前值，如果要重新渲染文档，需要将这个置空，
        // 第一个 key 是 numId，第二个 key 是 ilvl，第一个 key 会自动初始化
        this.numData = {};
    }
    Numbering.fromXML = function (word, element) {
        var e_1, _a, e_2, _b;
        var numbering = new Numbering();
        try {
            for (var _c = __values(element.getElementsByTagName('w:abstractNum')), _d = _c.next(); !_d.done; _d = _c.next()) {
                var abstractNumElement = _d.value;
                var abstractNum = AbstractNum.fromXML(word, abstractNumElement);
                numbering.abstractNums[abstractNum.abstractNumId] = abstractNum;
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
        try {
            for (var _e = __values(element.getElementsByTagName('w:num')), _f = _e.next(); !_f.done; _f = _e.next()) {
                var numElement = _f.value;
                var num = Num.fromXML(word, numElement);
                numbering.nums[num.numId] = num;
                numbering.numData[num.numId] = {};
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return numbering;
    };
    return Numbering;
}());

export { Numbering };
