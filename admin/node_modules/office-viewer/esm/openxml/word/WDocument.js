import { __values } from 'tslib';
import { Color } from '../../util/color.js';
import { parseColorAttr } from '../../word/parse/parseColor.js';
import { Body } from './Body.js';

/**
 * Document 解析及类型定义
 * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/document.html
 * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/Main%20Document%20Story.html
 */
/**
 * 计算出最终实际背景色
 */
function getBackgroundColor(documentBackground) {
    if (documentBackground.color) {
        return documentBackground.color;
    }
    if (documentBackground.themeColor) {
        var themeColor = documentBackground.themeColor;
        if (documentBackground.themeTint) {
            var color = new Color(themeColor);
            var themeShade = parseInt(documentBackground.themeTint, 16);
            color.tint(themeShade / 256);
        }
        else if (documentBackground.themeShade) {
            var color = new Color(themeColor);
            var themeShade = parseInt(documentBackground.themeShade, 16);
            color.lumMod(themeShade / 256);
        }
    }
    return '#FFFFF';
}
var WDocument = /** @class */ (function () {
    function WDocument() {
    }
    WDocument.fromXML = function (word, element) {
        var e_1, _a, e_2, _b;
        var doc = new WDocument();
        var body = element.getElementsByTagName('w:body').item(0);
        if (body) {
            doc.body = Body.fromXML(word, body);
        }
        var background = element.getElementsByTagName('w:background').item(0);
        if (background) {
            var documentBackground = {};
            try {
                for (var _c = __values(background.attributes), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var attr = _d.value;
                    var name_1 = attr.name;
                    switch (name_1) {
                        case 'w:color':
                            documentBackground.color = parseColorAttr(word, background, 'w:color');
                            break;
                        case 'w:themeColor':
                            documentBackground.themeColor = parseColorAttr(word, background, 'w:themeColor');
                            break;
                        case 'w:themeShade':
                            documentBackground.themeShade = parseColorAttr(word, background, 'w:themeShade');
                            break;
                        case 'w:themeTint':
                            documentBackground.themeTint = parseColorAttr(word, background, 'w:themeTint');
                            break;
                        default:
                            console.log('unknown background', background);
                            break;
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_1) throw e_1.error; }
            }
            try {
                for (var _e = __values(background.children), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var child = _f.value;
                    var name_2 = child.tagName;
                    switch (name_2) {
                        case 'v:background':
                            // vml 的背景色，不支持
                            break;
                        default:
                            console.log('unknown background', background);
                            break;
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_2) throw e_2.error; }
            }
            doc.backgroundColor = getBackgroundColor(documentBackground);
        }
        return doc;
    };
    return WDocument;
}());

export { WDocument };
