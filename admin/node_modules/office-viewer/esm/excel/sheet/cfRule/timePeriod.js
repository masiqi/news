import { applyCfRuleDxf } from './applyCfRuleDxf.js';
import { fromExcelDate } from '../../io/excel/util/fromExcelDate.js';

function isToday(date) {
    var now = new Date();
    return (date.getFullYear() === now.getFullYear() &&
        date.getMonth() === now.getMonth() &&
        date.getDate() === now.getDate());
}
function isYesterday(date) {
    var now = new Date();
    var yesterday = new Date(now);
    yesterday.setDate(now.getDate() - 1);
    return (date.getFullYear() === yesterday.getFullYear() &&
        date.getMonth() === yesterday.getMonth() &&
        date.getDate() === yesterday.getDate());
}
function isTomorrow(date) {
    var now = new Date();
    var tomorrow = new Date(now);
    tomorrow.setDate(now.getDate() + 1);
    return (date.getFullYear() === tomorrow.getFullYear() &&
        date.getMonth() === tomorrow.getMonth() &&
        date.getDate() === tomorrow.getDate());
}
function isThisMonth(date) {
    var now = new Date();
    return (date.getFullYear() === now.getFullYear() &&
        date.getMonth() === now.getMonth());
}
function isLastMonth(date) {
    var now = new Date();
    var lastMonth = new Date(now);
    lastMonth.setMonth(now.getMonth() - 1);
    return (date.getFullYear() === lastMonth.getFullYear() &&
        date.getMonth() === lastMonth.getMonth());
}
function isNextMonth(date) {
    var now = new Date();
    var nextMonth = new Date(now);
    nextMonth.setMonth(now.getMonth() + 1);
    return (date.getFullYear() === nextMonth.getFullYear() &&
        date.getMonth() === nextMonth.getMonth());
}
function isThisWeek(date) {
    var now = new Date();
    var day = now.getDay();
    var start = new Date(now);
    start.setDate(now.getDate() - day);
    start.setHours(0, 0, 0, 0);
    var end = new Date(start);
    end.setDate(start.getDate() + 7);
    return date >= start && date < end;
}
function isLastWeek(date) {
    var now = new Date();
    var day = now.getDay();
    var start = new Date(now);
    start.setDate(now.getDate() - day - 7);
    start.setHours(0, 0, 0, 0);
    var end = new Date(start);
    end.setDate(start.getDate() + 7);
    return date >= start && date < end;
}
function isNextWeek(date) {
    var now = new Date();
    var day = now.getDay();
    var start = new Date(now);
    start.setDate(now.getDate() - day + 7);
    start.setHours(0, 0, 0, 0);
    var end = new Date(start);
    end.setDate(start.getDate() + 7);
    return date >= start && date < end;
}
function isLast7Days(date) {
    var now = new Date();
    var start = new Date(now);
    start.setDate(now.getDate() - 7);
    start.setHours(0, 0, 0, 0);
    return date >= start && date < now;
}
function checkDate(date, timePeriod) {
    switch (timePeriod) {
        case 'today':
            return isToday(date);
        case 'yesterday':
            return isYesterday(date);
        case 'tomorrow':
            return isTomorrow(date);
        case 'last7Days':
            return isLast7Days(date);
        case 'thisMonth':
            return isThisMonth(date);
        case 'lastMonth':
            return isLastMonth(date);
        case 'nextMonth':
            return isNextMonth(date);
        case 'thisWeek':
            return isThisWeek(date);
        case 'lastWeek':
            return isLastWeek(date);
        case 'nextWeek':
            return isNextWeek(date);
        default:
            return false;
    }
}
/**
 * 时间相关的判断，这里不依赖公式
 */
function timePeriod(sheet, cellInfo, ranges, cfRule) {
    var timePeriod = cfRule.timePeriod;
    if (!timePeriod) {
        return false;
    }
    var dateValue = cellInfo.value;
    if (dateValue === undefined) {
        return false;
    }
    // 这是天，要先转成秒
    var date = fromExcelDate(dateValue, sheet.workbook.is1904());
    if (checkDate(date, timePeriod)) {
        applyCfRuleDxf(cfRule, sheet, cellInfo);
        return true;
    }
    return false;
}

export { checkDate, timePeriod };
