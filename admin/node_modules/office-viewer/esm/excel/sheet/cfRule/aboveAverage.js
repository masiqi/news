import { lte, gte, gt } from '../../../util/number.js';
import { toNumber } from '../../data/toNumber.js';
import { applyCfRuleDxf } from './applyCfRuleDxf.js';

function getAverageValue(values) {
    if (values.length === 0) {
        return null;
    }
    var sum = values.reduce(function (prev, curr) { return prev + curr; }, 0);
    return sum / values.length;
}
/**
 * 对大于或小于平均值的应用样式
 */
function aboveAverage(sheet, cellInfo, ranges, cfRule) {
    if (cellInfo.value === '') {
        return false;
    }
    var rangeCache = sheet.getRangeCache();
    var rangeAverage = rangeCache.get(ranges, 'average');
    if (!rangeAverage) {
        var rangeValues = sheet.getCellValueByRanges(ranges);
        if (rangeValues.length === 0) {
            return false;
        }
        var values_1 = [];
        rangeValues.map(function (value) {
            if (value.text === '') {
                return;
            }
            values_1.push(toNumber(value.value));
        });
        rangeAverage = getAverageValue(values_1);
        if (rangeAverage === null) {
            return false;
        }
        rangeCache.set(ranges, 'average', rangeAverage);
    }
    var value = parseFloat(cellInfo.value);
    if (cfRule.aboveAverage === false) {
        if (cfRule.equalAverage === true) {
            if (lte(value, rangeAverage)) {
                applyCfRuleDxf(cfRule, sheet, cellInfo);
                return true;
            }
        }
        else {
            if (lte(value, rangeAverage)) {
                applyCfRuleDxf(cfRule, sheet, cellInfo);
                return true;
            }
        }
    }
    else {
        if (cfRule.equalAverage === true) {
            if (gte(value, rangeAverage)) {
                applyCfRuleDxf(cfRule, sheet, cellInfo);
                return true;
            }
        }
        else {
            if (gt(value, rangeAverage)) {
                applyCfRuleDxf(cfRule, sheet, cellInfo);
                return true;
            }
        }
    }
    return false;
}

export { aboveAverage, getAverageValue };
