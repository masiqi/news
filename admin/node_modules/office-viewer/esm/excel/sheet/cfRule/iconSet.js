import { __values, __read } from 'tslib';
import { presetIconSet } from '../../io/excel/preset/presetIconSet.js';
import { getMinMax } from './getMinMax.js';
import { getPercent } from '../../../util/number.js';

/**
 * 应用图标样式
 */
function iconSet(sheet, cellInfo, ranges, cfRule) {
    var e_1, _a, e_2, _b;
    var rangeCache = sheet.getRangeCache();
    JSON.stringify(cfRule);
    var rangeIconSet = rangeCache.get(ranges, 'ruleKey');
    if (!rangeIconSet) {
        var iconSet_1 = cfRule.iconSet;
        if (!iconSet_1) {
            return false;
        }
        var iconSetName = iconSet_1.iconSet || '3TrafficLights1';
        var cfvo = iconSet_1.cfvo;
        if (!cfvo) {
            console.warn('图标集规则不完整');
            return false;
        }
        var rangeValues = sheet.getCellValueByRanges(ranges);
        var icons = [];
        var presetIcon = presetIconSet[iconSetName];
        if (!presetIcon) {
            console.warn('未知的图标集', iconSetName);
            return false;
        }
        if (iconSet_1.reverse === true) {
            presetIcon = presetIcon.slice().reverse();
        }
        try {
            for (var _c = __values(cfvo.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {
                var _e = __read(_d.value, 2), i = _e[0], cfvoItem = _e[1];
                var type = cfvoItem.type;
                switch (type) {
                    // 目前还不知道这两个啥区别
                    case 'percentile':
                    case 'percent': {
                        var val = parseInt(cfvoItem.val || '50', 10);
                        var percent_1 = val / 100;
                        var icon = presetIcon[i];
                        if (typeof icon === 'undefined') {
                            console.warn('未知的图标', iconSetName);
                            return false;
                        }
                        icons.push({
                            percent: percent_1,
                            icon: icon
                        });
                        break;
                    }
                    default:
                        console.warn('未知的 cfvo type', type);
                        break;
                }
                var _f = getMinMax(rangeValues), min = _f.min, max = _f.max;
                if (min === undefined || max === undefined) {
                    return false;
                }
                if (icons.length === 0) {
                    console.warn('图标集为空');
                    return false;
                }
                rangeIconSet = {
                    min: min,
                    max: max,
                    icons: icons
                };
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    var value = parseFloat(cellInfo.value);
    // 当前值所在的百分比
    var percent = getPercent(value, rangeIconSet.min, rangeIconSet.max);
    // 查找所属 icon
    var startIcon = rangeIconSet.icons[0].icon;
    try {
        for (var _g = __values(rangeIconSet.icons), _h = _g.next(); !_h.done; _h = _g.next()) {
            var icon = _h.value;
            if (percent <= icon.percent) {
                break;
            }
            startIcon = icon.icon;
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (_h && !_h.done && (_b = _g.return)) _b.call(_g);
        }
        finally { if (e_2) throw e_2.error; }
    }
    // 应用图标
    cellInfo.icon = startIcon;
    return true;
}

export { iconSet };
