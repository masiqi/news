import { renderLine } from './renderLine.js';
import { renderColumn } from './renderColumn.js';
import { renderStacked } from './renderStacked.js';
import { lt, gt } from '../../../util/number.js';

/**
 * 绘制 sparkline，这里的坐标都是从 0 开始
 */
/**
 * 绘制 Sparkline
 */
function renderSparkline(ctx, width, height, data, sparklineOptions, getColor) {
    var type = sparklineOptions.type || 'line';
    var minVal;
    var maxVal;
    var numbers = data.map(function (d) {
        if (d === '') {
            return undefined;
        }
        var num = parseFloat(d);
        if (minVal === undefined) {
            minVal = num;
        }
        if (maxVal === undefined) {
            maxVal = num;
        }
        if (lt(num, minVal)) {
            minVal = num;
        }
        if (gt(num, maxVal)) {
            maxVal = num;
        }
        return num;
    });
    if (numbers.length === 0 || minVal === undefined || maxVal === undefined) {
        console.warn('sparkline 数据不完整', numbers);
        return;
    }
    if (sparklineOptions.manualMin !== undefined) {
        minVal = sparklineOptions.manualMin;
    }
    if (sparklineOptions.manualMax !== undefined) {
        maxVal = sparklineOptions.manualMax;
    }
    if (type === 'line') {
        renderLine(ctx, width, height, minVal, maxVal, numbers, sparklineOptions, getColor);
    }
    else if (type === 'column') {
        renderColumn(ctx, width, height, minVal, maxVal, numbers, sparklineOptions, getColor);
    }
    else if (type === 'stacked') {
        renderStacked(ctx, width, height, minVal, maxVal, numbers, sparklineOptions, getColor);
    }
    else {
        console.warn('不支持的 sparkline 类型', type);
    }
}

export { renderSparkline };
