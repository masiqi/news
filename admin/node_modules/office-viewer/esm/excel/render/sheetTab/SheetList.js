import { __values } from 'tslib';
import { H } from '../../../util/H.js';
import { Color } from '../../../util/color.js';
import { onClickOutside } from '../../../util/onClickOutside.js';
import { Icons } from '../Icons.js';

var activeTabClass = 'ov-excel-sheet-tab-bar__list-tab--active';
var iconEnableClass = 'ov-excel-sheet-tab-bar__nav-icon--enabled';
var menuListActiveClass = 'ov-excel-sheet-tab-bar__menu-list-item--active';
/**
 * Sheet 列表
 */
var SheetList = /** @class */ (function () {
    function SheetList(container, workbook, renderOptions) {
        var _this = this;
        this.sheetTabs = [];
        this.sheetMenuItems = [];
        // 水平滚动距离
        this.scrollLeft = 0;
        // sheet 内容总长度，由于宽度 list 宽度设置为 0 导致这里需要重新计算
        this.sheetListWidth = 0;
        this.workbook = workbook;
        this.initDOM(container);
        workbook.uiEvent.on('SWITCH_SHEET', function () {
            _this.updateActiveTab();
        });
        this.updateActiveTab();
    }
    SheetList.prototype.initDOM = function (container) {
        var _this = this;
        this.renderNav(container);
        this.renderSheetMenu(container);
        var sheetListContainer = H('div', {
            className: 'ov-excel-sheet-tab-bar__list-container',
            parent: container
        });
        this.sheetListContainer = sheetListContainer;
        var sheetList = H('div', {
            className: 'ov-excel-sheet-tab-bar__list',
            parent: sheetListContainer
        });
        this.sheetList = sheetList;
        sheetListContainer.addEventListener('wheel', function (e) {
            _this.handleWheel(e);
        });
        this.renderSheets(sheetList, true);
    };
    SheetList.prototype.renderSheetMenu = function (container) {
        var sheetMenu = H('div', {
            className: 'ov-excel-sheet-tab-bar__menu',
            parent: container
        });
        this.sheetMenu = sheetMenu;
        this.renderSheetMenuList(sheetMenu);
    };
    SheetList.prototype.renderSheetMenuList = function (sheetMenu) {
        var _this = this;
        this.sheetMenu.innerHTML = '';
        H('div', {
            className: 'ov-excel-sheet-tab-bar__menu-icon',
            parent: sheetMenu,
            innerHTML: Icons.menu
        });
        var sheetMenuList = H('div', {
            className: 'ov-excel-sheet-tab-bar__menu-list',
            parent: sheetMenu
        });
        sheetMenu.onclick = function () {
            sheetMenuList.style.display = 'block';
        };
        this.workbook.sheets.forEach(function (sheet) {
            if (sheet.isHidden()) {
                return;
            }
            var sheetMenuItem = H('div', {
                className: 'ov-excel-sheet-tab-bar__menu-list-item',
                parent: sheetMenuList
            });
            sheetMenuItem.textContent = sheet.getSheetName();
            sheetMenuItem.dataset.sheetIndex = sheet.getIndex().toString();
            sheetMenuItem.addEventListener('click', function () {
                _this.workbook.setActiveSheet(sheet.getSheetName());
                _this.makeActiveSheetVisible();
            });
            if (sheet.getIndex() === _this.workbook.getActiveSheet().getIndex()) {
                sheetMenuItem.classList.add(menuListActiveClass);
            }
            _this.sheetMenuItems.push(sheetMenuItem);
        });
        onClickOutside(sheetMenu, function () {
            sheetMenuList.style.display = 'none';
        });
    };
    /**
     * 改变 sheet 水平滚动的左右导航
     */
    SheetList.prototype.renderNav = function (container) {
        var _this = this;
        var sheetNav = H('div', {
            className: 'ov-excel-sheet-tab-bar__nav',
            parent: container
        });
        var holdTime = 100;
        var moveDelta = 20;
        var leftNav = H('div', {
            className: 'ov-excel-sheet-tab-bar__nav-icon',
            parent: sheetNav,
            innerHTML: Icons.left
        });
        this.leftNav = leftNav;
        var leftNavTimer;
        leftNav.addEventListener('mousedown', function () {
            leftNavTimer = setInterval(function () {
                _this.updateScrollLeft(moveDelta);
            }, holdTime);
        });
        document.addEventListener('mouseup', function () {
            clearInterval(leftNavTimer);
        });
        var rightNav = H('div', {
            className: 'ov-excel-sheet-tab-bar__nav-icon',
            parent: sheetNav,
            innerHTML: Icons.right
        });
        this.rightNav = rightNav;
        var rightNavTimer;
        rightNav.addEventListener('mousedown', function () {
            rightNavTimer = setInterval(function () {
                _this.updateScrollLeft(-moveDelta);
            }, holdTime);
        });
        document.addEventListener('mouseup', function () {
            clearInterval(rightNavTimer);
        });
    };
    SheetList.prototype.syncNavStatus = function () {
        var containerWidth = this.sheetListContainer.clientWidth;
        var sheetListWidth = this.sheetListWidth;
        if (sheetListWidth < containerWidth) {
            return;
        }
        var scrollLeft = this.scrollLeft;
        if (scrollLeft < 0) {
            this.leftNav.classList.add(iconEnableClass);
            this.sheetListContainer.classList.add('ov-excel-sheet-tab-bar__list-container--enable-left-nav');
        }
        else {
            this.sheetListContainer.classList.remove('ov-excel-sheet-tab-bar__list-container--enable-left-nav');
            this.leftNav.classList.remove(iconEnableClass);
        }
        if (scrollLeft > containerWidth - sheetListWidth) {
            this.sheetListContainer.classList.add('ov-excel-sheet-tab-bar__list-container--enable-right-nav');
            this.rightNav.classList.add(iconEnableClass);
        }
        else {
            this.sheetListContainer.classList.remove('ov-excel-sheet-tab-bar__list-container--enable-right-nav');
            this.rightNav.classList.remove(iconEnableClass);
        }
    };
    /**
     * 支持在 sheet 上使用滚轮
     */
    SheetList.prototype.handleWheel = function (e) {
        var deltaY = e.deltaY;
        this.updateScrollLeft(-deltaY);
    };
    SheetList.prototype.updateScrollLeft = function (delta) {
        var containerWidth = this.sheetListContainer.clientWidth;
        var sheetListWidth = this.sheetListWidth;
        if (sheetListWidth < containerWidth) {
            return;
        }
        var scrollLeft = this.scrollLeft;
        scrollLeft += delta;
        scrollLeft = Math.max(Math.min(0, scrollLeft), containerWidth - sheetListWidth);
        this.scrollLeft = scrollLeft;
        // 目前是用 transform 来实现的，因为 list 的宽度设置为 0 了
        this.sheetList.style.transform = "translateX(".concat(scrollLeft, "px)");
        this.syncNavStatus();
    };
    /**
     * 初始化的时候保证激活的 sheet 可见
     * @param offsetX 当前 sheet 的偏移量
     */
    SheetList.prototype.makeActiveSheetVisible = function () {
        var e_1, _a;
        var _this = this;
        var offsetX = 0;
        var currentIndex = this.workbook.getActiveSheet().getIndex().toString();
        try {
            for (var _b = __values(this.sheetTabs), _c = _b.next(); !_c.done; _c = _b.next()) {
                var sheetTab = _c.value;
                var marginLeft = parseInt(getComputedStyle(sheetTab).marginLeft);
                var marginRight = parseInt(getComputedStyle(sheetTab).marginRight);
                offsetX += sheetTab.clientWidth + marginLeft + marginRight;
                if (sheetTab.dataset.sheetIndex === currentIndex) {
                    break;
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        // 需要延迟一下不然 containerWidth 不准确
        setTimeout(function () {
            var containerWidth = _this.sheetListContainer.clientWidth;
            _this.scrollLeft = Math.min(0, containerWidth - offsetX);
            _this.sheetList.style.transform = "translateX(".concat(_this.scrollLeft, "px)");
            _this.syncNavStatus();
        }, 100);
    };
    /**
     * 渲染 sheet 列表，如果 sheet 有变化可以重新调用这个方法
     * @param sheetList sheet 列表容器
     * @param firstRender 是否是第一次渲染，第一次渲染会调用 makeActiveSheetVisible
     */
    SheetList.prototype.renderSheets = function (sheetList, firstRender) {
        var _this = this;
        if (firstRender === void 0) { firstRender = false; }
        sheetList.innerHTML = '';
        this.sheetTabs = [];
        var sheetListWidth = 0;
        this.workbook.sheets.forEach(function (sheet) {
            if (sheet.isHidden()) {
                return;
            }
            var sheetTab = H('div', {
                className: 'ov-excel-sheet-tab-bar__list-tab',
                parent: sheetList
            });
            var tabColor = sheet.getTabColor();
            if (tabColor !== 'none') {
                var color = new Color(tabColor);
                sheetTab.style.backgroundImage = "linear-gradient(".concat(color.toRgba(0.1), ", ").concat(color.toRgba(0.5), ")");
                sheetTab.style.color = tabColor;
            }
            var name = sheet.getSheetName();
            sheetTab.textContent = name;
            sheetTab.dataset.sheetIndex = sheet.getIndex().toString();
            sheetTab.addEventListener('click', function () {
                _this.workbook.setActiveSheet(name);
            });
            _this.sheetTabs.push(sheetTab);
            var marginLeft = parseInt(getComputedStyle(sheetTab).marginLeft);
            var marginRight = parseInt(getComputedStyle(sheetTab).marginRight);
            sheetListWidth += sheetTab.clientWidth + marginLeft + marginRight;
            if (sheet.getIndex() === _this.workbook.getActiveSheet().getIndex()) {
                sheetTab.classList.add(activeTabClass);
                if (firstRender) {
                    _this.makeActiveSheetVisible();
                }
            }
        });
        this.sheetListWidth = sheetListWidth;
    };
    SheetList.prototype.updateActiveTab = function () {
        var currentSheet = this.workbook.getActiveSheet();
        var sheetIndex = currentSheet.getIndex();
        this.sheetTabs.forEach(function (tab) {
            var index = parseInt(tab.dataset.sheetIndex, 10);
            if (index === sheetIndex) {
                tab.classList.add(activeTabClass);
            }
            else {
                tab.classList.remove(activeTabClass);
            }
        });
        this.sheetMenuItems.forEach(function (item) {
            var index = parseInt(item.dataset.sheetIndex, 10);
            if (index === sheetIndex) {
                item.classList.add(menuListActiveClass);
            }
            else {
                item.classList.remove(menuListActiveClass);
            }
        });
    };
    return SheetList;
}());

export { SheetList };
