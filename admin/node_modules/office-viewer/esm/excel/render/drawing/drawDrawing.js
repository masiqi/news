import { __values } from 'tslib';
import { drawPic } from './drawPic.js';
import { drawShape } from './drawShape.js';
import { drawChart } from './drawChart.js';
import { getRectFromTwoAnchorPoint, getRectFromOneAnchorPoint } from './getRectFromAnchorPoint.js';
import { getAbsoluteAnchorPosition } from './getAbsoluteAnchorPosition.js';

/**
 * 绘制 sheet 里的图片及文本框
 */
function drawDrawing(excelRender, currentSheet, viewRange, canvas) {
    var e_1, _a, e_2, _b, e_3, _c;
    var _d, _e, _f;
    var drawing = currentSheet.getDrawing();
    if (!drawing) {
        return;
    }
    var displayRect = currentSheet.getDisplayRect();
    var _g = currentSheet.getRowColSize(), rowHeaderWidth = _g.rowHeaderWidth, colHeaderHeight = _g.colHeaderHeight;
    try {
        for (var _h = __values(drawing.twoCellAnchors), _j = _h.next(); !_j.done; _j = _h.next()) {
            var twoCellAnchor = _j.value;
            if (!twoCellAnchor.from || !twoCellAnchor.to) {
                console.warn('from or to do not exist');
                continue;
            }
            var drawingRect = getRectFromTwoAnchorPoint(currentSheet, (_d = twoCellAnchor.from) === null || _d === void 0 ? void 0 : _d[0], (_e = twoCellAnchor.to) === null || _e === void 0 ? void 0 : _e[0], viewRange);
            if (twoCellAnchor.pic) {
                drawPic(currentSheet, canvas, displayRect, drawingRect, rowHeaderWidth, colHeaderHeight, twoCellAnchor.pic);
            }
            if (twoCellAnchor.shape) {
                drawShape(excelRender, currentSheet, canvas, displayRect, drawingRect, rowHeaderWidth, colHeaderHeight, twoCellAnchor.shape);
            }
            if (twoCellAnchor.chartSpace) {
                drawChart(currentSheet, displayRect, rowHeaderWidth, colHeaderHeight, drawingRect, twoCellAnchor.chartSpace);
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_j && !_j.done && (_a = _h.return)) _a.call(_h);
        }
        finally { if (e_1) throw e_1.error; }
    }
    try {
        for (var _k = __values(drawing.absoluteAnchors), _l = _k.next(); !_l.done; _l = _k.next()) {
            var absoluteAnchor = _l.value;
            var size = getAbsoluteAnchorPosition(absoluteAnchor);
            var x = size.x + rowHeaderWidth - displayRect.x;
            var y = size.y + colHeaderHeight - displayRect.y;
            var drawingRect = {
                x: x,
                y: y,
                width: size.width,
                height: size.height
            };
            // 目前没测试过在 absoluteAnchor 里的效果，都不知道怎么在 excel 里操作
            if (absoluteAnchor.pic) {
                drawPic(currentSheet, canvas, displayRect, drawingRect, rowHeaderWidth, colHeaderHeight, absoluteAnchor.pic);
            }
            if (absoluteAnchor.shape) {
                drawShape(excelRender, currentSheet, canvas, displayRect, drawingRect, rowHeaderWidth, colHeaderHeight, absoluteAnchor.shape);
            }
            if (absoluteAnchor.chartSpace) {
                drawChart(currentSheet, displayRect, rowHeaderWidth, colHeaderHeight, drawingRect, absoluteAnchor.chartSpace);
            }
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (_l && !_l.done && (_b = _k.return)) _b.call(_k);
        }
        finally { if (e_2) throw e_2.error; }
    }
    try {
        for (var _m = __values(drawing.oneCellAnchors), _o = _m.next(); !_o.done; _o = _m.next()) {
            var oneCellAnchor = _o.value;
            if (!oneCellAnchor.from) {
                console.warn('from do not exist');
                continue;
            }
            var drawingRect = getRectFromOneAnchorPoint(currentSheet, (_f = oneCellAnchor.from) === null || _f === void 0 ? void 0 : _f[0], viewRange);
            if (oneCellAnchor.pic) {
                drawPic(currentSheet, canvas, displayRect, drawingRect, rowHeaderWidth, colHeaderHeight, oneCellAnchor.pic);
            }
            if (oneCellAnchor.shape) {
                drawShape(excelRender, currentSheet, canvas, displayRect, drawingRect, rowHeaderWidth, colHeaderHeight, oneCellAnchor.shape);
            }
            if (oneCellAnchor.chartSpace) {
                drawChart(currentSheet, displayRect, rowHeaderWidth, colHeaderHeight, drawingRect, oneCellAnchor.chartSpace);
            }
        }
    }
    catch (e_3_1) { e_3 = { error: e_3_1 }; }
    finally {
        try {
            if (_o && !_o.done && (_c = _m.return)) _c.call(_m);
        }
        finally { if (e_3) throw e_3.error; }
    }
}

export { drawDrawing };
