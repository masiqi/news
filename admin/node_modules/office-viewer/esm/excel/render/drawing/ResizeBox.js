import { H } from '../../../util/H.js';

/**
 * 用于缩放 drawing 的边框，目前没实现编辑功能所以还不能用，只是展示
 */
var ResizeBox = /** @class */ (function () {
    function ResizeBox(container) {
        /**
         * 控制节点的大小，需要和 CSS 里保持一致
         */
        this.controllerSize = 14;
        this.box = H('div', {
            className: 'ov-excel-resize-box',
            parent: container
        });
        this.topLeft = H('div', {
            className: 'ov-excel-resize-box-control',
            parent: this.box
        });
        this.top = H('div', {
            className: 'ov-excel-resize-box-control',
            parent: this.box
        });
        this.topRight = H('div', {
            className: 'ov-excel-resize-box-control',
            parent: this.box
        });
        this.left = H('div', {
            className: 'ov-excel-resize-box-control',
            parent: this.box
        });
        this.right = H('div', {
            className: 'ov-excel-resize-box-control',
            parent: this.box
        });
        this.bottomLeft = H('div', {
            className: 'ov-excel-resize-box-control',
            parent: this.box
        });
        this.bottom = H('div', {
            className: 'ov-excel-resize-box-control',
            parent: this.box
        });
        this.bottomRight = H('div', {
            className: 'ov-excel-resize-box-control',
            parent: this.box
        });
        // 默认隐藏，点击的时候才开启
        this.hide();
    }
    /**
     * 更新位置信息
     */
    ResizeBox.prototype.updatePosition = function (x, y, width, height) {
        this.box.style.display = 'block';
        this.box.style.left = "".concat(x, "px");
        this.box.style.top = "".concat(y, "px");
        this.box.style.width = "".concat(width, "px");
        this.box.style.height = "".concat(height, "px");
        this.topLeft.style.left = '-7px';
        this.topLeft.style.top = '-7px';
        this.top.style.left = "".concat(width / 2 - this.controllerSize / 2, "px");
        this.top.style.top = '-7px';
        this.topRight.style.right = '-7px';
        this.topRight.style.top = '-7px';
        this.left.style.left = '-7px';
        this.left.style.top = "".concat(height / 2 - this.controllerSize / 2, "px");
        this.right.style.right = '-7px';
        this.right.style.top = "".concat(height / 2 - this.controllerSize / 2, "px");
        this.bottomLeft.style.left = '-7px';
        this.bottomLeft.style.bottom = '-7px';
        this.bottom.style.left = "".concat(width / 2 - this.controllerSize / 2, "px");
        this.bottom.style.bottom = '-7px';
        this.bottomRight.style.right = '-7px';
        this.bottomRight.style.bottom = '-7px';
    };
    ResizeBox.prototype.hide = function () {
        this.box.style.display = 'none';
    };
    return ResizeBox;
}());

export { ResizeBox };
