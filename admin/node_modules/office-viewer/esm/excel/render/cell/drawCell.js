import { drawCellBackground } from './drawCellBackground.js';
import { drawCellBorder } from './drawCellBorder.js';
import { drawCellDataBar } from './drawDataBar.js';
import { drawIconSet } from './drawIconSet.js';
import { drawTextInCell } from './drawTextInCell.js';

/**
 * 绘制单元格的实现逻辑
 * @param ctx
 * @param dataProvider
 * @param cellInfo
 * @param x
 * @param y
 * @param width
 * @param height
 * @param padding
 * @param needClear
 */
function drawCell(excelRender, sheet, canvas, dataProvider, cellInfo, x, y, width, height, indentSize, padding, needClear, linkPositionCache) {
    if (needClear === void 0) { needClear = false; }
    if (linkPositionCache === void 0) { linkPositionCache = []; }
    var ctx = canvas.ctx;
    if (needClear) {
        // 这里减 1 是为了避免清除网格线，不过后续需要更好的实现
        ctx.clearRect(x + 1, y + 1, width - 2, height - 2);
    }
    drawCellBackground(ctx, dataProvider, cellInfo, x, y, width, height);
    var drawText = true;
    if (cellInfo.dataBarDisplay) {
        //数据条的绘制
        drawCellDataBar(canvas, cellInfo.dataBarDisplay, x, y, width, height);
        drawText = cellInfo.dataBarDisplay.showValue;
    }
    if (cellInfo.icon) {
        drawIconSet(canvas, cellInfo.icon, x, y, width, height);
    }
    if (drawText) {
        drawTextInCell(excelRender, sheet, ctx, dataProvider, cellInfo, x, y, width, height, indentSize, padding, linkPositionCache);
    }
    // Excel 里似乎是后绘制 border
    drawCellBorder(ctx, dataProvider, cellInfo, x, y, width, height);
}

export { drawCell };
