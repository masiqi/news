import { __values, __read } from 'tslib';
import { measureTextWithCache } from './measureTextWithCache.js';
import { genFontStr } from './genFontStr.js';

/**
 * 自动裁剪，Excel 中似乎会自动避免遮挡，目前还不清楚是怎么实现的
 */
function autoClip(ctx, dataProvider, cellInfoMap) {
    var e_1, _a;
    var _b;
    try {
        for (var cellInfoMap_1 = __values(cellInfoMap), cellInfoMap_1_1 = cellInfoMap_1.next(); !cellInfoMap_1_1.done; cellInfoMap_1_1 = cellInfoMap_1.next()) {
            var _c = __read(cellInfoMap_1_1.value, 2), key = _c[0], cellInfo = _c[1];
            var row = parseInt(key.split(',')[0]);
            var col = parseInt(key.split(',')[1]);
            var nextCol = col + 1;
            // 如果当前单元格右边有单元格且当前单元格不是 wrap
            if (cellInfoMap.has("".concat(row, ",").concat(nextCol))) {
                var nextCellInfo = cellInfoMap.get("".concat(row, ",").concat(nextCol));
                // 当前和后面单元格都有文本，且当前单元格不是 wrap
                if (((_b = cellInfo.alignment) === null || _b === void 0 ? void 0 : _b.wrapText) !== true &&
                    cellInfo.text &&
                    nextCellInfo.text) {
                    var fontStyle = dataProvider.getFontStyle(cellInfo.font);
                    // 如果当前文本过长，可能会折叠后面的文本，就设置为 needClip
                    var font = genFontStr(fontStyle);
                    var size = measureTextWithCache(ctx, font, cellInfo.text);
                    if (size.width > cellInfo.width) {
                        cellInfo.needClip = true;
                    }
                }
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (cellInfoMap_1_1 && !cellInfoMap_1_1.done && (_a = cellInfoMap_1.return)) _a.call(cellInfoMap_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
}

export { autoClip };
