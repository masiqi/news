import { isValidURL } from '../../../util/isValidURL.js';
import { measureTextWithCache } from './measureTextWithCache.js';
import { genFontStr } from './genFontStr.js';

/**
 * 绘制单行无样式文本
 * @param fontStyle
 * @param text
 * @param color
 * @param x
 * @param y
 * @param width
 * @param height
 * @param intent 缩进
 * @param horizontal
 * @param vertical
 */
function drawSingleLineText(ctx, fontStyle, text, color, x, y, width, height, intent, horizontal, vertical, linkPositionCache) {
    if (linkPositionCache === void 0) { linkPositionCache = []; }
    var font = genFontStr(fontStyle);
    ctx.font = font;
    ctx.fillStyle = color;
    ctx.textBaseline = 'middle';
    var textWidth = 0;
    var drawX = x + intent;
    if (horizontal === 'right') {
        var size = measureTextWithCache(ctx, font, text);
        textWidth = size.width;
        size.height;
        drawX = x + width - textWidth;
    }
    if (horizontal === 'center') {
        var size = measureTextWithCache(ctx, font, text);
        textWidth = size.width;
        size.height;
        drawX = x + (width - textWidth) / 2;
    }
    // 默认按左对齐和垂直居中，这时计算很简单，直接居中绘制
    var drawY = y + height / 2;
    if (vertical === 'bottom') {
        drawY = y + height;
        ctx.textBaseline = 'bottom';
    }
    if (vertical === 'top') {
        drawY = y;
        ctx.textBaseline = 'top';
    }
    ctx.fillText(text, drawX, drawY);
    if (isValidURL(text)) {
        var size = measureTextWithCache(ctx, font, text);
        // 真实渲染位置
        var realY = drawY - size.height / 2;
        if (vertical === 'bottom') {
            realY = drawY - size.height;
        }
        if (vertical === 'top') {
            realY = drawY;
        }
        linkPositionCache.push({
            url: text,
            pos: [
                {
                    x: drawX,
                    y: realY,
                    width: size.width,
                    height: size.height
                }
            ]
        });
    }
}

export { drawSingleLineText };
