import { drawGridLines } from '../../grid/drawGridLines.js';
import { drawCells } from '../drawCells.js';
import { drawRowColHeaders } from '../../header/drawRowColHeaders.js';
import { drawTopFrozen } from './drawTopFrozen.js';
import { drawLeftFrozen } from './drawLeftFrozen.js';

/**
 * 绘制同时有左边和上边冻结的情况，需要绘制 3 个独立区域
 */
function drawTopLeftFrozen(excelRender, xSplit, ySplit, currentSheet, dataProvider, excelRenderOptions, mainCanvas, height, width, linkPositionCache) {
    // 先单独绘制左边和上边的区域
    var topViewRange = drawTopFrozen(excelRender, ySplit, currentSheet, dataProvider, excelRenderOptions, mainCanvas, width, linkPositionCache);
    var leftViewRange = drawLeftFrozen(excelRender, xSplit, currentSheet, dataProvider, excelRenderOptions, mainCanvas, height, linkPositionCache);
    // 绘制中间的区域
    var topLeftViewRange = currentSheet.getFrozenTopLeftViewPointRange(xSplit, ySplit);
    // 获取可视区域内的信息
    var displayData = currentSheet.getViewPointData(topLeftViewRange);
    // 清空区域
    mainCanvas.drawRect(0, 0, topLeftViewRange.width, topLeftViewRange.height, excelRenderOptions.cellBackgroundColor);
    // 绘制单元格
    drawCells(excelRender, currentSheet, excelRenderOptions, mainCanvas, displayData, linkPositionCache);
    // 绘制网格线
    drawGridLines(currentSheet, topLeftViewRange, mainCanvas, topLeftViewRange.height, topLeftViewRange.width, excelRenderOptions);
    // 绘制表头
    drawRowColHeaders(currentSheet, topLeftViewRange, mainCanvas, excelRenderOptions, dataProvider.getDefaultFontSize(), dataProvider.getDefaultFontStyle());
    // 绘制上边和左边分割线
    mainCanvas.drawLine({
        x1: 0,
        y1: topViewRange.height,
        x2: topLeftViewRange.width,
        y2: topViewRange.height
    }, excelRenderOptions.frozenLineColor);
    mainCanvas.drawLine({
        x1: leftViewRange.width,
        y1: 0,
        x2: leftViewRange.width,
        y2: topLeftViewRange.height
    }, excelRenderOptions.frozenLineColor);
    return {
        topViewRange: topViewRange,
        leftViewRange: leftViewRange,
        topLeftViewRange: topLeftViewRange
    };
}

export { drawTopLeftFrozen };
