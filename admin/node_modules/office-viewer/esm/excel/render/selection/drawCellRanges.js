import { __values } from 'tslib';
import { MAX_COL, MAX_ROW } from '../Consts.js';
import { drawAllSelection } from './drawAllSelection.js';
import { drawCellSelection } from './drawCellSelection.js';
import { drawColSelection } from './drawColSelection.js';
import { drawRowSelection } from './drawRowSelection.js';

/**
 * 绘制选择区域
 * @param workbook
 * @param canvas
 * @param selection
 */
function drawCellRanges(workbook, canvas, selection) {
    var e_1, _a;
    if (!selection) {
        return;
    }
    try {
        for (var _b = __values(selection.cellRanges), _c = _b.next(); !_c.done; _c = _b.next()) {
            var range = _c.value;
            if (range.endCol === MAX_COL && range.endRow === MAX_ROW) {
                drawAllSelection(workbook, canvas, selection);
            }
            else if (range.endCol === MAX_COL) {
                drawRowSelection(workbook, canvas, selection, range);
            }
            else if (range.endRow === MAX_ROW) {
                drawColSelection(workbook, canvas, selection, range);
            }
            else {
                drawCellSelection(workbook, canvas, selection, range);
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
}

export { drawCellRanges };
