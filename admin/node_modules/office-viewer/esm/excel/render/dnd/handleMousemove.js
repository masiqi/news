import { getMouseRelativePosition } from './getMouseRelativePosition.js';
import { handleDragCell } from './handleDragCell.js';
import { handleDragColGrid } from './handleDragColGrid.js';
import { handleDragColHeader } from './handleDragColHeader.js';
import { handleDragRowGrid } from './handleDragRowGrid.js';
import { handleDragRowHeader } from './handleDragRowHeader.js';
import { dragState } from './handleMousedown.js';

/**
 * 鼠标拖拽过程中
 */
function handleMousemove(mouseEvent) {
    dragState.isDragging = true;
    var _a = getMouseRelativePosition(dragState.container, mouseEvent), offsetX = _a.offsetX, offsetY = _a.offsetY;
    var zoomLevel = dragState.workbook.getActiveSheet().getZoomLevel();
    offsetX = offsetX / zoomLevel;
    offsetY = offsetY / zoomLevel;
    offsetX = Math.round(offsetX);
    offsetY = Math.round(offsetY);
    var dragType = dragState.dragType;
    if (dragType === 'cell') {
        handleDragCell(offsetX, offsetY);
    }
    if (dragType === 'row-grid') {
        handleDragRowGrid(mouseEvent);
    }
    if (dragType === 'col-grid') {
        handleDragColGrid(mouseEvent);
    }
    if (dragType === 'row-header') {
        handleDragRowHeader(offsetX, offsetY);
    }
    if (dragType === 'col-header') {
        handleDragColHeader(offsetX, offsetY);
    }
}

export { handleMousemove };
