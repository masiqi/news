import { __assign } from 'tslib';
import { isObject } from './isObject.js';

/**
 * 拷贝自 amis 里的方法，避免依赖
 */
function createObject(superProps, props, properties) {
    if (superProps && Object.isFrozen(superProps)) {
        superProps = cloneObject(superProps);
    }
    var obj = superProps
        ? Object.create(superProps, __assign(__assign({}, properties), { __super: {
                value: superProps,
                writable: false,
                enumerable: false
            } }))
        : Object.create(Object.prototype, properties);
    props &&
        isObject(props) &&
        Object.keys(props).forEach(function (key) { return (obj[key] = props[key]); });
    return obj;
}
function cloneObject(target, persistOwnProps) {
    if (persistOwnProps === void 0) { persistOwnProps = true; }
    var obj = target && target.__super
        ? Object.create(target.__super, {
            __super: {
                value: target.__super,
                writable: false,
                enumerable: false
            }
        })
        : Object.create(Object.prototype);
    persistOwnProps &&
        target &&
        Object.keys(target).forEach(function (key) { return (obj[key] = target[key]); });
    return obj;
}

export { cloneObject, createObject };
