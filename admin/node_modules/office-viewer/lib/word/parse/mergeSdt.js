'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');

/**
 * 将 sdt 内容合并到上层节点，返回合并后的数组
 */
function flattenSdtArray(arr) {
    var e_1, _a;
    var returnArray = arr.slice();
    var index = 0;
    // 如果 sdt 里还有 sdt 就需要递归
    var needRecursion = false;
    try {
        for (var arr_1 = tslib.__values(arr), arr_1_1 = arr_1.next(); !arr_1_1.done; arr_1_1 = arr_1.next()) {
            var child = arr_1_1.value;
            var tagName = child.tagName;
            switch (tagName) {
                case 'w:smartTag':
                case 'w:customXml':
                    var customXMLChildren = [].slice.call(child.children);
                    returnArray.splice.apply(returnArray, tslib.__spreadArray([index, 1], tslib.__read(customXMLChildren), false));
                    index = index + customXMLChildren.length;
                    continue;
                case 'w:sdt':
                    var sdtContent = child.getElementsByTagName('w:sdtContent').item(0);
                    var childSdt = child.getElementsByTagName('w:sdt').item(0);
                    if (childSdt) {
                        needRecursion = true;
                    }
                    if (sdtContent) {
                        var sdtContentChildren = [].slice.call(sdtContent.children);
                        returnArray.splice.apply(returnArray, tslib.__spreadArray([index, 1], tslib.__read(sdtContentChildren), false));
                        index = index + sdtContentChildren.length;
                        continue;
                    }
                    break;
            }
            index = index + 1;
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return)) _a.call(arr_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    if (needRecursion) {
        return flattenSdtArray(returnArray);
    }
    return returnArray;
}
function mergeSdt(element) {
    var arr = [].slice.call(element.children);
    return flattenSdtArray(arr);
}

exports.mergeSdt = mergeSdt;
