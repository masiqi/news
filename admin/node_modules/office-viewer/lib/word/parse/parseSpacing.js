'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var parseSize = require('./parseSize.js');

/**
 * 解析 spacing
 * http://officeopenxml.com/WPspacing.php
 */
function parseSpacing(word, element, style) {
    var before = parseSize.parseSize(element, 'w:before');
    var after = parseSize.parseSize(element, 'w:after');
    var lineRule = element.getAttribute('w:lineRule');
    if (before) {
        style['margin-top'] = before;
    }
    if (after) {
        style['margin-bottom'] = after;
    }
    var line = element.getAttribute('w:line');
    if (line) {
        // 强制行高
        if (word.renderOptions.forceLineHeight) {
            style['line-height'] = word.renderOptions.forceLineHeight;
            return;
        }
        var lineNum = parseInt(line, 10);
        var minLineHeight = word.renderOptions.minLineHeight || 1.0;
        switch (lineRule) {
            case 'auto':
                var lineHeight = Math.max(minLineHeight, lineNum / 240);
                style['line-height'] = "".concat(lineHeight.toFixed(2));
                break;
            case 'atLeast':
                // 不知道这样处理是否正确，先用默认好了
                // style['line-height'] = `calc(100% + ${lineNum / 20}pt)`;
                break;
            default:
                var lineHeightMin = Math.max(minLineHeight, lineNum / 20);
                style['line-height'] = "".concat(lineHeightMin, "pt");
                break;
        }
    }
}

exports.parseSpacing = parseSpacing;
