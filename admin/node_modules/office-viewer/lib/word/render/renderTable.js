'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var Paragraph = require('../../openxml/word/Paragraph.js');
var Table = require('../../openxml/word/Table.js');
var dom = require('../../util/dom.js');
var renderParagraph = require('./renderParagraph.js');
var renderStyle = require('./renderStyle.js');
var setElementStyle = require('./setElementStyle.js');

/**
 * 设置 td 的类，用于支持各种表格条件样式
 * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/ST_TblStyleOverrideType.html
 */
function setTdClassName(rowIndex, colIndex, rowLength, colLength, element, rowBandSize, colBandSize) {
    // 左上角
    if (rowIndex === 0 && colIndex === 0) {
        element.classList.add('nwCell');
    }
    // 右上角
    if (rowIndex === 0 && colIndex === colLength - 1) {
        element.classList.add('neCell');
    }
    // 左下角
    if (rowIndex === rowLength - 1 && colIndex === 0) {
        element.classList.add('swCell');
    }
    // 右下角
    if (rowIndex === rowLength - 1 && colIndex === colLength - 1) {
        element.classList.add('seCell');
    }
    // 第一行
    if (rowIndex === 0) {
        element.classList.add('firstRow');
    }
    // 最后一行
    if (rowIndex === rowLength - 1) {
        element.classList.add('lastRow');
    }
    // 第一列
    if (colIndex === 0) {
        element.classList.add('firstCol');
    }
    // 最后一列
    if (colIndex === colLength - 1) {
        element.classList.add('lastCol');
    }
    // 奇数行
    if (isOdd(rowIndex + 1)) {
        element.classList.add('band1Horz');
    }
    // 偶数行
    if (!isOdd(rowIndex + 1)) {
        element.classList.add('band2Horz');
    }
    // 奇数列
    if (isOdd(colIndex + 1)) {
        element.classList.add('band1Vert');
    }
    // 偶数列
    if (!isOdd(colIndex + 1)) {
        element.classList.add('band2Vert');
    }
}
/**
 * 根据倍数判断是否是奇数，目前看来似乎 word 编辑器也没提供 size 设置
 * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/tblStyleRowBandSize.html
 */
function isOdd(num, size) {
    return !(num % 2);
}
/**
 * 渲染表格
 */
function renderTable(word, table) {
    var e_1, _a, e_2, _b, e_3, _c;
    var tableEl = document.createElement('table');
    var properties = table.properties;
    if (properties.tblCaption) {
        var caption = document.createElement('caption');
        caption.textContent = properties.tblCaption;
        tableEl.appendChild(caption);
    }
    if (properties.tblLook) {
        for (var key in properties.tblLook) {
            // 这两个属性是反过来的
            if (key === 'noHBand') {
                if (!properties.tblLook[key]) {
                    dom.addClassName(tableEl, 'enable-hBand');
                }
            }
            else if (key === 'noVBand') {
                if (!properties.tblLook[key]) {
                    dom.addClassName(tableEl, 'enable-vBand');
                }
            }
            else if (properties.tblLook[key]) {
                dom.addClassName(tableEl, 'enable-' + key);
            }
        }
    }
    setElementStyle.setElementStyle(word, tableEl, properties);
    var customClass = word.genClassName();
    tableEl.classList.add(customClass);
    word.appendStyle(renderStyle.generateTableStyle(word.getClassPrefix(), customClass, { tblPr: properties }));
    // 这里或许应该生成 classname 来支持 tcCSSStyle
    var tbody = document.createElement('tbody');
    tableEl.appendChild(tbody);
    var rowIndex = 0;
    try {
        for (var _d = tslib.__values(table.trs), _e = _d.next(); !_e.done; _e = _d.next()) {
            var tr = _e.value;
            var trEl = document.createElement('tr');
            tbody.appendChild(trEl);
            var colIndex = 0;
            try {
                for (var _f = (e_2 = void 0, tslib.__values(tr.tcs)), _g = _f.next(); !_g.done; _g = _f.next()) {
                    var tc = _g.value;
                    var tdEl = document.createElement('td');
                    trEl.appendChild(tdEl);
                    setTdClassName(rowIndex, colIndex, table.trs.length, tr.tcs.length, tdEl, properties.rowBandSize, properties.colBandSize);
                    // tr 也能设置 tc style，所以先应用这个
                    if (tr.properties.tcStyle) {
                        dom.applyStyle(tdEl, tr.properties.tcStyle);
                    }
                    var tcPr = tc.properties;
                    setElementStyle.setElementStyle(word, tdEl, tcPr);
                    if (tcPr.gridSpan) {
                        tdEl.colSpan = tcPr.gridSpan;
                    }
                    if (tcPr.rowSpan) {
                        tdEl.rowSpan = tcPr.rowSpan;
                    }
                    var renderSpace = true;
                    // 如果有 tcPr.hideMark 就不渲染空格
                    if (tcPr.hideMark) {
                        renderSpace = false;
                    }
                    try {
                        for (var _h = (e_3 = void 0, tslib.__values(tc.children)), _j = _h.next(); !_j.done; _j = _h.next()) {
                            var tcChild = _j.value;
                            if (tcChild instanceof Paragraph.Paragraph) {
                                var p = renderParagraph["default"](word, tcChild, renderSpace);
                                dom.appendChild(tdEl, p);
                            }
                            else if (tcChild instanceof Table.Table) {
                                // 如果已经有表格的话，就不再渲染空段落了，避免底部多个空行
                                renderSpace = false;
                                dom.appendChild(tdEl, renderTable(word, tcChild));
                            }
                            else {
                                console.warn('unknown child type: ' + tcChild);
                            }
                        }
                    }
                    catch (e_3_1) { e_3 = { error: e_3_1 }; }
                    finally {
                        try {
                            if (_j && !_j.done && (_c = _h.return)) _c.call(_h);
                        }
                        finally { if (e_3) throw e_3.error; }
                    }
                    if (tcPr.rowSpan) {
                        colIndex += tcPr.rowSpan;
                    }
                    else {
                        colIndex++;
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_g && !_g.done && (_b = _f.return)) _b.call(_f);
                }
                finally { if (e_2) throw e_2.error; }
            }
            rowIndex++;
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return tableEl;
}

exports["default"] = renderTable;
