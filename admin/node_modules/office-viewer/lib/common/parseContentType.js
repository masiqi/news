'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var xml = require('../util/xml.js');

/**
 * 解析 [Content_Types].xml
 * @param xml
 */
function parseContentType(parser) {
    return tslib.__awaiter(this, void 0, void 0, function () {
        var xml$1, contentType, node, _a, _b, child;
        var e_1, _c;
        return tslib.__generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    xml$1 = parser.getString('[Content_Types].xml');
                    contentType = { overrides: [], defaults: [] };
                    return [4 /*yield*/, xml.xml2json(xml$1)];
                case 1:
                    node = _d.sent();
                    try {
                        for (_a = tslib.__values(node.children || []), _b = _a.next(); !_b.done; _b = _a.next()) {
                            child = _b.value;
                            if (child.tag === 'Override') {
                                contentType.overrides.push({
                                    partName: child.attrs.PartName,
                                    contentType: child.attrs.ContentType
                                });
                            }
                            else if (child.tag === 'Default') {
                                contentType.defaults.push({
                                    extension: child.attrs.Extension,
                                    contentType: child.attrs.ContentType
                                });
                            }
                        }
                    }
                    catch (e_1_1) { e_1 = { error: e_1_1 }; }
                    finally {
                        try {
                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                        }
                        finally { if (e_1) throw e_1.error; }
                    }
                    return [2 /*return*/, contentType];
            }
        });
    });
}

exports.parseContentType = parseContentType;
