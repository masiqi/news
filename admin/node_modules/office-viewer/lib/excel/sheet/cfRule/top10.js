'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var number = require('../../../util/number.js');
var toNumber = require('../../data/toNumber.js');
var applyCfRuleDxf = require('./applyCfRuleDxf.js');

function getRankValue(values, cfRule) {
    if (values.length === 0) {
        return null;
    }
    // 用大小堆会更快但预计数据量不大就直接排序了
    values.sort(function (a, b) {
        if (number.lt(a, b)) {
            return -1;
        }
        if (number.gt(a, b)) {
            return 1;
        }
        return 0;
    });
    var top10Number = cfRule.rank || 10;
    if (cfRule.percent) {
        top10Number = Math.ceil(values.length * (top10Number / 100));
    }
    top10Number = Math.max(Math.min(top10Number, values.length), 1);
    // 默认是从小到大排序的
    if (cfRule.bottom) {
        return values[top10Number - 1];
    }
    else {
        return values[values.length - top10Number];
    }
}
/**
 * 处理 top 值的规则
 */
function top10(sheet, cellInfo, ranges, cfRule) {
    var rangeCache = sheet.getRangeCache();
    var ruleKey = JSON.stringify(cfRule);
    var rankValue = rangeCache.get(ranges, ruleKey);
    if (!rankValue) {
        var rangeValues = sheet.getCellValueByRanges(ranges);
        if (rangeValues.length === 0) {
            return false;
        }
        var values_1 = [];
        rangeValues.map(function (value) {
            if (value.text === '') {
                return;
            }
            values_1.push(toNumber.toNumber(value.value));
        });
        rankValue = getRankValue(values_1, cfRule);
        if (rankValue === null) {
            return false;
        }
        rangeCache.set(ranges, ruleKey, rankValue);
    }
    var value = parseFloat(cellInfo.value);
    if (cfRule.bottom) {
        if (number.lte(value, rankValue)) {
            applyCfRuleDxf.applyCfRuleDxf(cfRule, sheet, cellInfo);
            return true;
        }
    }
    else {
        if (number.gte(value, rankValue)) {
            applyCfRuleDxf.applyCfRuleDxf(cfRule, sheet, cellInfo);
            return true;
        }
    }
    return false;
}

exports.getRankValue = getRankValue;
exports.top10 = top10;
