'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function findSizeInCache(index, positionCache, getSize) {
    if (positionCache[index] !== undefined) {
        return positionCache[index];
    }
    else {
        var lastIndex = Math.max(0, positionCache.length - 1);
        for (var i = lastIndex; i <= index; i++) {
            var size = getSize(i);
            if (i !== 0) {
                positionCache[i] = {
                    offset: positionCache[i - 1].offset + positionCache[i - 1].size,
                    size: size
                };
            }
            else {
                positionCache[i] = {
                    offset: 0,
                    size: size
                };
            }
        }
        return positionCache[index];
    }
}
/**
 *  获取单元格的绝对位置
 */
function getCellAbsolutePosition(row, col, getRowHeight, rowPositionCache, getColWidth, colPositionCache) {
    if (rowPositionCache === void 0) { rowPositionCache = []; }
    if (colPositionCache === void 0) { colPositionCache = []; }
    var rowPosition = findSizeInCache(row, rowPositionCache, getRowHeight);
    var colPosition = findSizeInCache(col, colPositionCache, getColWidth);
    return {
        x: colPosition.offset,
        y: rowPosition.offset,
        width: colPosition.size,
        height: rowPosition.size
    };
}

exports.getCellAbsolutePosition = getCellAbsolutePosition;
