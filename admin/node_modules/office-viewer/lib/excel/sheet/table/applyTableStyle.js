'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var presetTableStyles = require('../../io/excel/preset/presetTableStyles.js');
var applyDxf = require('../applyDxf.js');
var buildTableStyle = require('./buildTableStyle.js');
var calcTableRelativePosition = require('./calcTableRelativePosition.js');

function applyTableStyle(cellInfo, tablePart, ref, sheet, row, col) {
    var _a;
    var headerRowCount = (_a = tablePart.headerRowCount) !== null && _a !== void 0 ? _a : 1;
    var totalsRowShown = tablePart.totalsRowShown || true;
    var totalsRowCount = tablePart.totalsRowCount || 0;
    // 这是来自 MS-OI29500 P291 的说明，如果 totalsRowCount 为 0，那么 totalsRowShown 必须为 true
    if (totalsRowCount > 0) {
        totalsRowShown = true;
    }
    var tableStyleInfo = tablePart.tableStyleInfo;
    if (!tableStyleInfo) {
        console.warn('表格缺少 tableStyleInfo 字段', tablePart);
        return;
    }
    var name = tableStyleInfo.name;
    // 表格名称
    if (!name) {
        console.warn('表格缺少 name 字段', tablePart);
        return;
    }
    var tableStyle = presetTableStyles.presetTableStyles[name];
    if (!tableStyle) {
        console.warn('未知的表格样式', name);
        return;
    }
    var tablePosition = calcTableRelativePosition.calcTableRelativePosition(ref, function (r) { return sheet.isRowHidden(r); }, function (c) { return sheet.isColHidden(c); }, row, col, headerRowCount, totalsRowCount, totalsRowShown);
    var showFirstColumn = tableStyleInfo.showFirstColumn || false;
    var showLastColumn = tableStyleInfo.showLastColumn || false;
    var showRowStripes = tableStyleInfo.showRowStripes || false;
    var showColumnStripes = tableStyleInfo.showColumnStripes || false;
    var dxfs = tableStyle.dxfs.dxf || [];
    var tableStyles = buildTableStyle.buildTableStyle(tableStyle);
    if (tableStyles.wholeTable !== undefined) {
        applyDxf.applyDxf(cellInfo, dxfs[tableStyles.wholeTable]);
    }
    if (showRowStripes &&
        tablePosition.rowType === 'odd' &&
        tableStyles.firstRowStripe !== undefined) {
        applyDxf.applyDxf(cellInfo, dxfs[tableStyles.firstRowStripe]);
    }
    if (showColumnStripes &&
        tablePosition.colType === 'odd' &&
        tableStyles.firstColumnStripe !== undefined) {
        applyDxf.applyDxf(cellInfo, dxfs[tableStyles.firstColumnStripe]);
    }
    if (tablePosition.rowType === 'header' &&
        tableStyles.headerRow !== undefined) {
        applyDxf.applyDxf(cellInfo, dxfs[tableStyles.headerRow]);
    }
    if (tablePosition.rowType === 'total' && tableStyles.totalRow !== undefined) {
        applyDxf.applyDxf(cellInfo, dxfs[tableStyles.totalRow]);
    }
    if (showFirstColumn &&
        tablePosition.colPosition === 'first' &&
        tableStyles.firstColumn !== undefined) {
        applyDxf.applyDxf(cellInfo, dxfs[tableStyles.firstColumn]);
    }
    if (showLastColumn &&
        tablePosition.colPosition === 'last' &&
        tableStyles.lastColumn !== undefined) {
        applyDxf.applyDxf(cellInfo, dxfs[tableStyles.lastColumn]);
    }
    // 表格内部添加默认白色分隔线，目前不知道这样做是否正确
    if (!cellInfo.border) {
        cellInfo.border = {
            bottom: {
                color: {
                    rgb: 'FFFFFFFF'
                },
                style: 'thin'
            },
            right: {
                color: {
                    rgb: 'FFFFFFFF'
                },
                style: 'thin'
            }
        };
    }
}

exports.applyTableStyle = applyTableStyle;
