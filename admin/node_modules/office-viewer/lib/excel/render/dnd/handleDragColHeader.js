'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Consts = require('../Consts.js');
var handleMousedown = require('./handleMousedown.js');

/**
 * 处理拖拽列表头扩展选区
 */
function handleDragColHeader(offsetX, offsetY) {
    var _a, _b, _c;
    if (!handleMousedown.dragState.selection) {
        console.warn('没有 selection');
        return;
    }
    // 做 hitTest，判断是否拖到了其它列表头
    var hitTestResult = (_a = handleMousedown.dragState.workbook) === null || _a === void 0 ? void 0 : _a.getActiveSheet().hitTest(offsetX, offsetY);
    var col = handleMousedown.dragState.selection.activeCell.startCol;
    // 后续要支持多选得改这里
    var firstCellRange = handleMousedown.dragState.selection.cellRanges[0];
    if (hitTestResult) {
        // 还不支持跨区域拖拽
        if (hitTestResult.region !== handleMousedown.dragState.region) {
            console.warn('不支持跨区域拖拽');
            return;
        }
        // 说明移动到别的列了
        if (hitTestResult.startCol !== col) {
            var startCol = Math.min(col, hitTestResult.startCol);
            var endCol = Math.max(col, hitTestResult.startCol);
            if (startCol === firstCellRange.startCol &&
                endCol === firstCellRange.endCol) {
                return;
            }
            firstCellRange.startCol = startCol;
            firstCellRange.endCol = endCol;
            firstCellRange.startRow = 0;
            firstCellRange.endRow = Consts.MAX_ROW;
            (_b = handleMousedown.dragState.workbook) === null || _b === void 0 ? void 0 : _b.uiEvent.emit('CHANGE_SELECTION', handleMousedown.dragState.selection);
        }
        else {
            // 如果在当前列移动，需要判断和现有选区是否有变化
            if (firstCellRange.startCol !== firstCellRange.endCol) {
                firstCellRange.startCol = col;
                firstCellRange.endCol = col;
                firstCellRange.startRow = 0;
                firstCellRange.endRow = Consts.MAX_ROW;
                (_c = handleMousedown.dragState.workbook) === null || _c === void 0 ? void 0 : _c.uiEvent.emit('CHANGE_SELECTION', handleMousedown.dragState.selection);
            }
        }
    }
}

exports.handleDragColHeader = handleDragColHeader;
