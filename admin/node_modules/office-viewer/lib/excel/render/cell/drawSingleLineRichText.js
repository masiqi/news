'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var measureTextWithCache = require('./measureTextWithCache.js');
var genFontStr = require('./genFontStr.js');
var drawMultiLineText = require('./drawMultiLineText.js');

/**
 * 绘制单行富文本，这里复用了多行富文本的逻辑，所以这里只进行 token 拆分
 */
function drawSingleLineRichText(excelRender, sheet, ctx, dataProvider, fontStyle, richTexts, x, y, width, height, horizontal, vertical, row) {
    var e_1, _a;
    var defaultFont = genFontStr.genFontStr(fontStyle);
    var line = {
        tokens: [],
        maxHeight: 0
    };
    var lines = [line];
    var defaultFontHeight = dataProvider.getDefaultFontSize().height;
    var maxHeight = defaultFontHeight;
    var text = '';
    try {
        for (var richTexts_1 = tslib.__values(richTexts), richTexts_1_1 = richTexts_1.next(); !richTexts_1_1.done; richTexts_1_1 = richTexts_1.next()) {
            var richText = richTexts_1_1.value;
            var font = defaultFont;
            if (richText.rPr && Object.keys(richText.rPr).length > 0) {
                font = genFontStr.genFontStrFromRPr(richText.rPr, fontStyle);
            }
            var textSize = measureTextWithCache.measureTextWithCache(ctx, font, richText.t);
            var textWidth = textSize.width;
            // 字体高度
            var textFontHeight = textSize.height;
            if (textFontHeight > maxHeight) {
                maxHeight = textFontHeight;
            }
            text += richText.t;
            line.tokens.push({
                type: 'w',
                t: richText.t,
                rPr: richText.rPr,
                w: textWidth
            });
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (richTexts_1_1 && !richTexts_1_1.done && (_a = richTexts_1.return)) _a.call(richTexts_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    line.maxHeight = maxHeight;
    var padding = 0;
    drawMultiLineText.drawMultiLineText(excelRender, sheet, ctx, dataProvider, fontStyle, lines, x, y, width, height, padding, horizontal, vertical, text, row);
}

exports.drawSingleLineRichText = drawSingleLineRichText;
