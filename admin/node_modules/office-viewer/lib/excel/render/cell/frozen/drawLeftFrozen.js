'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var drawGridLines = require('../../grid/drawGridLines.js');
var drawCells = require('../drawCells.js');
var drawRowColHeaders = require('../../header/drawRowColHeaders.js');

/**
 * 绘制只有左边冻结的情况
 */
function drawLeftFrozen(excelRender, xSplit, currentSheet, dataProvider, excelRenderOptions, mainCanvas, height, linkPositionCache) {
    var frozenViewRange = currentSheet.getFrozenLeftViewPointRange(xSplit, height);
    // 获取可视区域内的信息
    var displayData = currentSheet.getViewPointData(frozenViewRange);
    mainCanvas.drawRect(0, 0, frozenViewRange.width, frozenViewRange.height, excelRenderOptions.cellBackgroundColor);
    drawCells.drawCells(excelRender, currentSheet, excelRenderOptions, mainCanvas, displayData, linkPositionCache);
    drawGridLines.drawGridLines(currentSheet, frozenViewRange, mainCanvas, frozenViewRange.height, frozenViewRange.width, excelRenderOptions);
    drawRowColHeaders.drawRowColHeaders(currentSheet, frozenViewRange, mainCanvas, excelRenderOptions, dataProvider.getDefaultFontSize(), dataProvider.getDefaultFontStyle());
    // 绘制冻结分割线
    mainCanvas.drawLine({
        x1: frozenViewRange.width,
        y1: 0,
        x2: frozenViewRange.width,
        y2: frozenViewRange.height
    }, excelRenderOptions.frozenLineColor);
    return frozenViewRange;
}

exports.drawLeftFrozen = drawLeftFrozen;
