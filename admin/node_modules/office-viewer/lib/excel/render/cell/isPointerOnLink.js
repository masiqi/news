'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var Rect = require('../Rect.js');

/**
 * 判断当前指针是否在链接上
 */
function isPointerOnLink(x, y, linkPositionCache) {
    var e_1, _a, e_2, _b;
    try {
        for (var linkPositionCache_1 = tslib.__values(linkPositionCache), linkPositionCache_1_1 = linkPositionCache_1.next(); !linkPositionCache_1_1.done; linkPositionCache_1_1 = linkPositionCache_1.next()) {
            var linkPosition = linkPositionCache_1_1.value;
            try {
                for (var _c = (e_2 = void 0, tslib.__values(linkPosition.pos)), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var pos = _d.value;
                    if (Rect.pointInRect(x, y, pos)) {
                        return linkPosition.url;
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (linkPositionCache_1_1 && !linkPositionCache_1_1.done && (_a = linkPositionCache_1.return)) _a.call(linkPositionCache_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return false;
}

exports.isPointerOnLink = isPointerOnLink;
