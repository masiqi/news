'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var drawDataBarX14 = require('./drawDataBarX14.js');

function drawCellDataBar(canvas, dataBarDisplay, x, y, width, height) {
    if (dataBarDisplay.biDirectional) {
        return drawDataBarX14.drawCellDataBarX14(canvas, dataBarDisplay, x, y, width, height);
    }
    var fillColor = dataBarDisplay.color;
    if (fillColor !== 'none') {
        var displayWidth = width * dataBarDisplay.percent;
        // 从有到左需要换一下方向
        if (dataBarDisplay.direction === 'rightToLeft') {
            x = x + width - displayWidth;
        }
        if (dataBarDisplay.gradient) {
            if (dataBarDisplay.direction === 'rightToLeft') {
                canvas.drawRectLinearGradientWithPadding(x, y, displayWidth, height, dataBarDisplay.colorGradient, fillColor, 1);
            }
            else {
                canvas.drawRectLinearGradientWithPadding(x, y, displayWidth, height, fillColor, dataBarDisplay.colorGradient, 1);
            }
        }
        else {
            canvas.drawRectWithPadding(x, y, displayWidth, height, fillColor, 1);
        }
        if (dataBarDisplay.border && dataBarDisplay.borderColor) {
            canvas.drawStrokeRectPadding(x, y, displayWidth, height, dataBarDisplay.borderColor, 1);
        }
    }
}

exports.drawCellDataBar = drawCellDataBar;
