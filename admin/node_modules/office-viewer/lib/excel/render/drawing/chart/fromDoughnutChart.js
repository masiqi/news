'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var getData = require('./getData.js');
var buildLabel = require('./buildLabel.js');

function fromDoughnutChart(workbook, doughnutChart) {
    var e_1, _a;
    var _b, _c, _d, _e, _f;
    var categories = [];
    var series = [];
    var chartSer = doughnutChart.ser || [];
    try {
        for (var chartSer_1 = tslib.__values(chartSer), chartSer_1_1 = chartSer_1.next(); !chartSer_1_1.done; chartSer_1_1 = chartSer_1.next()) {
            var ser = chartSer_1_1.value;
            var seriesData = getData.getData(workbook, ser.val);
            var name_1 = ((_f = (_e = (_d = (_c = (_b = ser.tx) === null || _b === void 0 ? void 0 : _b.strRef) === null || _c === void 0 ? void 0 : _c.strCache) === null || _d === void 0 ? void 0 : _d.pt) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f.v) || '';
            if (name_1) {
                categories.push(name_1);
            }
            var label = buildLabel.buildLabel(ser.dLbls);
            series.push({
                name: name_1,
                data: seriesData,
                type: 'pie',
                radius: ['40%', '70%'],
                emphasis: {
                    label: {
                        show: true,
                        fontSize: 40,
                        fontWeight: 'bold'
                    }
                }
            });
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (chartSer_1_1 && !chartSer_1_1.done && (_a = chartSer_1.return)) _a.call(chartSer_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    return {
        categories: categories,
        series: series
    };
}

exports.fromDoughnutChart = fromDoughnutChart;
