'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');

function calcPercentStacked(series) {
    var e_1, _a, e_2, _b;
    var totalData = [];
    try {
        for (var series_1 = tslib.__values(series), series_1_1 = series_1.next(); !series_1_1.done; series_1_1 = series_1.next()) {
            var ser = series_1_1.value;
            for (var i = 0; i < ser.data.length; i++) {
                var value = ser.data[i] || 0;
                totalData[i] = (totalData[i] || 0) + +value;
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (series_1_1 && !series_1_1.done && (_a = series_1.return)) _a.call(series_1);
        }
        finally { if (e_1) throw e_1.error; }
    }
    try {
        // 计算百分比
        for (var series_2 = tslib.__values(series), series_2_1 = series_2.next(); !series_2_1.done; series_2_1 = series_2.next()) {
            var ser = series_2_1.value;
            for (var i = 0; i < ser.data.length; i++) {
                var value = ser.data[i] || 0;
                // 避免为零
                var totalValue = totalData[i] || 1;
                ser.data[i] = (+value / totalValue) * 100;
            }
        }
    }
    catch (e_2_1) { e_2 = { error: e_2_1 }; }
    finally {
        try {
            if (series_2_1 && !series_2_1.done && (_b = series_2.return)) _b.call(series_2);
        }
        finally { if (e_2) throw e_2.error; }
    }
}

exports.calcPercentStacked = calcPercentStacked;
