'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var binarySearchSize = require('./binarySearchSize.js');

/**
 * 在视图范围垂直方向内查找
 */
function findInViewRangeY(offsetY, viewRange, gridLineHitRange, 
// 是否在是 header 区域
isHeader) {
    if (isHeader === void 0) { isHeader = false; }
    var y = 0;
    var height = 0;
    var rowIndex = binarySearchSize.binarySearchSize(viewRange.rowSizes, offsetY);
    // 点到线上还是点到单元格上
    var type = 'cell';
    if (isHeader) {
        type = 'row-header';
    }
    var row = -1;
    if (rowIndex !== -1) {
        y = viewRange.rowSizes[rowIndex].offset;
        height = viewRange.rowSizes[rowIndex].size;
        row = viewRange.rows[rowIndex];
        if (isHeader) {
            if (y + height - offsetY < gridLineHitRange) {
                type = 'row-grid';
            }
            // 点到了上边的线
            if (offsetY - y < gridLineHitRange) {
                type = 'row-grid';
                if (rowIndex > 0) {
                    y = viewRange.rowSizes[rowIndex - 1].offset;
                    height = viewRange.rowSizes[rowIndex - 1].size;
                    row = viewRange.rows[rowIndex - 1];
                }
            }
        }
    }
    return { row: row, y: y, height: height, type: type };
}

exports.findInViewRangeY = findInViewRangeY;
