'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Consts = require('../Consts.js');
var findCell = require('./findCell.js');
var findInViewRangeX = require('./findInViewRangeX.js');
var findInViewRangeY = require('./findInViewRangeY.js');

/**
 * 检查是否点中了左上角冻结区域
 */
function hitTestInRange(region, range, offsetX, offsetY, rowHeaderWidth, colHeaderHeight, gridLineHitRange, mergeCells) {
    if (!range) {
        return null;
    }
    // 点击到顶部区域的表头
    if (offsetY < colHeaderHeight &&
        offsetX >= rowHeaderWidth &&
        offsetX < range.width) {
        var _a = findInViewRangeX.findInViewRangeX(offsetX, range, gridLineHitRange, true), col = _a.col, width = _a.width, x = _a.x, type = _a.type;
        return {
            type: type,
            region: region,
            startRow: 0,
            startCol: col,
            endRow: Consts.MAX_ROW,
            endCol: col,
            x: x,
            y: 0,
            width: width,
            height: colHeaderHeight
        };
    }
    // 点击到左侧区域的表头
    if (offsetX < rowHeaderWidth &&
        offsetY >= colHeaderHeight &&
        offsetY < range.height) {
        var _b = findInViewRangeY.findInViewRangeY(offsetY, range, gridLineHitRange, true), row = _b.row, height = _b.height, y = _b.y, type = _b.type;
        return {
            type: type,
            region: region,
            startRow: row,
            startCol: 0,
            endRow: row,
            endCol: Consts.MAX_COL,
            x: 0,
            y: y,
            width: rowHeaderWidth,
            height: height
        };
    }
    // 点击单元格
    if (offsetX < range.width && offsetY < range.height) {
        return findCell.findCell(region, offsetX, offsetY, gridLineHitRange, range, mergeCells);
    }
    return null;
}

exports.hitTestInRange = hitTestInRange;
