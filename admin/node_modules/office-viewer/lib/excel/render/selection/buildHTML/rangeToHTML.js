'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var escapeHTML = require('../../../../util/escapeHTML.js');
var Consts = require('../../Consts.js');
var cellToMergeCell = require('../../cell/cellToMergeCell.js');
var cellInfoToStyle = require('./cellInfoToStyle.js');

/**
 * 基于选区生成 HTML 表格
 * @param workbook
 * @param range 选区定义
 */
function rangeToHTML(workbook, range) {
    var currentSheet = workbook.getActiveSheet();
    var endRow = range.endRow;
    if (endRow === Consts.MAX_ROW) {
        endRow = currentSheet.getMaxRow();
    }
    var endCol = range.endCol;
    if (endCol === Consts.MAX_COL) {
        endCol = currentSheet.getMaxCol();
    }
    var mergeCells = currentSheet.getMergeCells();
    var tsv = [];
    var trs = '';
    for (var row = range.startRow; row <= endRow; row++) {
        var rowHeight = currentSheet.getRowHeight(row);
        trs += "<tr style=\"height: ".concat(rowHeight, "px\">\n");
        var tsvRow = [];
        for (var col = range.startCol; col <= endCol; col++) {
            var cellInfo = currentSheet.getCellInfo(row, col);
            var mergeCell = cellToMergeCell.cellToMergeCell(row, col, mergeCells);
            var text = escapeHTML.escapeHtml(cellInfo.text);
            var style = cellInfoToStyle.cellInfoToStyle(workbook, cellInfo);
            tsvRow.push(text);
            // 如果有合并单元格则需要修改 col 跳过，同时只处理第一个出现的合并单元格
            if (mergeCell.startCol !== mergeCell.endCol &&
                row === mergeCell.startRow &&
                col === mergeCell.startCol) {
                var rowSpan = mergeCell.endRow - mergeCell.startRow + 1;
                var colSpan = mergeCell.endCol - mergeCell.startCol + 1;
                col = mergeCell.endCol;
                trs += "  <td rowspan=\"".concat(rowSpan, "\" colspan=\"").concat(colSpan, "\" style=\"").concat(style, "\">").concat(text, "</td>\n");
                tsvRow.push.apply(tsvRow, tslib.__spreadArray([], tslib.__read(Array(colSpan - 1).fill('')), false));
            }
            else {
                trs += "  <td style=\"".concat(style, "\">").concat(text, "</td>\n");
            }
        }
        tsv.push(tsvRow.join('\t'));
        trs += '</tr>\n';
    }
    // Excel 里粘贴出来也是这样的，似乎 Excel 自己也不支持粘贴时调整宽度，所以这个功能没效果
    var cols = '';
    for (var col = range.startCol; col <= endCol; col++) {
        var colWidth = Math.floor(currentSheet.getColWidth(col));
        var widthPt = colWidth * 0.75;
        cols += "<col width=".concat(colWidth, " style=\"width: ").concat(widthPt, "pt;\"></td>\n");
    }
    // 参考从 Excel 粘贴来的内容
    var table = "<table border=0 cellpadding=0 cellspacing=0 style='border-collapse:\n  collapse;'>\n".concat(cols).concat(trs, "</table>");
    return { table: table, tsv: tsv };
}

exports.rangeToHTML = rangeToHTML;
