'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Range = require('../../io/excel/util/Range.js');
var Rect = require('../Rect.js');
var AutoFilterIconUI = require('./AutoFilterIconUI.js');

var AutoFilterIconCache = {};
/**
 * 渲染 AutoFilter 图标
 */
function renderAutoFilterIcon(sheet, autoFilter, id, dataContainer, headerRowCount) {
    if (headerRowCount === void 0) { headerRowCount = 1; }
    var ref = autoFilter.ref;
    if (!ref) {
        console.warn('缺少 ref 字段', autoFilter);
        return;
    }
    var sheetDataRect = sheet.getDataDisplayRect();
    var _a = sheet.getRowColSize(), rowHeaderWidth = _a.rowHeaderWidth, colHeaderHeight = _a.colHeaderHeight;
    var rangeRef = Range.parseRange(ref);
    var startRow = rangeRef.startRow;
    var startCol = rangeRef.startCol;
    var endCol = rangeRef.endCol;
    var colIndex = -1;
    // 初始化 dom 结构及对象结构
    for (var i = startCol; i <= endCol; i++) {
        colIndex++;
        var fid = "autoFilter-".concat(id, "-").concat(colIndex);
        var filterIconElement = dataContainer.querySelector("[data-fid=\"".concat(fid, "\"]"));
        if (filterIconElement) {
            continue;
        }
        var filterIcon = new AutoFilterIconUI.AutoFilterIconUI(sheet, dataContainer, autoFilter, rangeRef, colIndex, fid, headerRowCount);
        AutoFilterIconCache[fid] = filterIcon;
    }
    colIndex = -1;
    // 判断是否需要显示
    for (var i = startCol; i <= endCol; i++) {
        colIndex++;
        var fid = "autoFilter-".concat(id, "-").concat(colIndex);
        var position = sheet.getCellPosition(startRow, i);
        var autoFilerIcon = AutoFilterIconCache[fid];
        if (Rect.rectIntersect(sheetDataRect, position)) {
            autoFilerIcon.updatePosition(position.x - rowHeaderWidth, position.y - colHeaderHeight, 
            // 避免过高展示效果不好
            Math.min(28, position.height), position.width);
        }
        else {
            autoFilerIcon.hide();
        }
    }
}

exports.renderAutoFilterIcon = renderAutoFilterIcon;
