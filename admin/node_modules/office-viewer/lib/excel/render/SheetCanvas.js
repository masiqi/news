'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var Canvas = require('./Canvas.js');
var drawCell = require('./cell/drawCell.js');
var autoClip = require('./cell/autoClip.js');

/**
 * 内容区 Canvas 封装，方便图形绘制
 */
var SheetCanvas = /** @class */ (function (_super) {
    tslib.__extends(SheetCanvas, _super);
    function SheetCanvas(workbook, dataProvider) {
        var _this = this;
        var _a = workbook.getViewpointSize(), width = _a.width, height = _a.height;
        _this = _super.call(this, width, height, workbook.renderOptions.scale || 1, 'ov-excel-content-canvas ov-excel-canvas') || this;
        // 调试的时候开启，会绘制文字的包围盒
        _this.debugFontBoundingBox = false;
        _this.workbook = workbook;
        _this.dataProvider = dataProvider;
        return _this;
    }
    /**
     * 绘制单元格
     * @param font
     * @param text
     * @param x
     * @param y
     * @param width
     * @param height
     */
    SheetCanvas.prototype.drawCell = function (excelRender, cellInfo, x, y, width, height, indentSize, padding, needClear, linkPositionCache) {
        if (needClear === void 0) { needClear = false; }
        if (linkPositionCache === void 0) { linkPositionCache = []; }
        var sheet = this.workbook.getActiveSheet();
        drawCell.drawCell(excelRender, sheet, this, this.dataProvider, cellInfo, x, y, width, height, indentSize, padding, needClear, linkPositionCache);
    };
    SheetCanvas.prototype.autoClip = function (cellInfoMap) {
        autoClip.autoClip(this.ctx, this.dataProvider, cellInfoMap);
    };
    return SheetCanvas;
}(Canvas.Canvas));

exports.SheetCanvas = SheetCanvas;
