'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var H = require('../../../util/H.js');
var CheckBox = require('./CheckBox.js');
var Input = require('./Input.js');

/**
 * 多选框列表，目前用在自动筛选的条件选择
 */
var CheckBoxList = /** @class */ (function () {
    function CheckBoxList(container, selectAllText, searchPlaceholder, options, onCheck) {
        var e_1, _a;
        if (searchPlaceholder === void 0) { searchPlaceholder = ''; }
        var _this = this;
        this.checkBoxes = [];
        this.options = options;
        var wrapper = H.H('div', {
            className: 'excel-checkbox-list-wrapper',
            parent: container
        });
        var searchInput = new Input.Input({
            container: wrapper,
            placeholder: searchPlaceholder,
            onChange: function (text) {
                _this.handleSearch(text);
            }
        });
        this.searchInput = searchInput;
        var listContainer = H.H('div', {
            className: 'excel-checkbox-list',
            parent: wrapper
        });
        this.listContainer = listContainer;
        var checkAllOption = {
            value: '__all__',
            text: selectAllText,
            checked: true
        };
        var checkAll = new CheckBox.CheckBox(listContainer, checkAllOption, function (checked) {
            _this.checkBoxes.forEach(function (checkbox) {
                checkbox.setChecked(checked);
            });
            onCheck(checked, checkAllOption, options);
        });
        this.checkAllBox = checkAll;
        try {
            for (var options_1 = tslib.__values(options), options_1_1 = options_1.next(); !options_1_1.done; options_1_1 = options_1.next()) {
                var option = options_1_1.value;
                var checkbox = new CheckBox.CheckBox(listContainer, option, function (checked, option) {
                    onCheck(checked, option, options);
                    _this.syncCheckAll();
                });
                this.checkBoxes.push(checkbox);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (options_1_1 && !options_1_1.done && (_a = options_1.return)) _a.call(options_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.syncCheckAll();
    }
    CheckBoxList.prototype.handleSearch = function (text) {
        var e_2, _a, e_3, _b;
        if (text) {
            try {
                // 做一下过滤
                for (var _c = tslib.__values(this.checkBoxes), _d = _c.next(); !_d.done; _d = _c.next()) {
                    var checkbox = _d.value;
                    if (checkbox.getText().toLowerCase().indexOf(text.toLowerCase()) > -1) {
                        checkbox.show();
                    }
                    else {
                        checkbox.hide();
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
        else {
            try {
                for (var _e = tslib.__values(this.checkBoxes), _f = _e.next(); !_f.done; _f = _e.next()) {
                    var checkbox = _f.value;
                    checkbox.show();
                }
            }
            catch (e_3_1) { e_3 = { error: e_3_1 }; }
            finally {
                try {
                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                }
                finally { if (e_3) throw e_3.error; }
            }
        }
    };
    CheckBoxList.prototype.syncCheckAll = function () {
        var allChecked = this.checkBoxes.every(function (checkbox) { return checkbox.isChecked(); });
        this.checkAllBox.setChecked(allChecked);
    };
    CheckBoxList.prototype.getOptions = function () {
        return this.options;
    };
    return CheckBoxList;
}());

exports.CheckBoxList = CheckBoxList;
