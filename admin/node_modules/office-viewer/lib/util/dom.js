'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');

/**
 * dom 相关的操作
 */
/**
 * 样式对象转成 css 文本
 */
function styleToText(style) {
    if (style === void 0) { style = {}; }
    var text = '';
    for (var key in style) {
        var value = style[key];
        if (value != null && value !== '') {
            text += "".concat(key, ": ").concat(value, ";\n");
        }
    }
    return text;
}
/**
 * 设置元素样式
 */
function applyStyle(el, style) {
    if (!style) {
        return;
    }
    for (var key in style) {
        var value = style[key];
        if (value != null && value !== '') {
            el.style.setProperty(key, String(value));
        }
    }
}
/**
 * 创建元素
 */
function createElement(tagName) {
    return document.createElement(tagName);
}
/**
 * 创建 SVG 元素
 */
function createSVGElement(tagName) {
    return document.createElementNS('http://www.w3.org/2000/svg', tagName);
}
/**
 * 添加子节点，会做一些判断避免报错
 */
function appendChild(parent, child) {
    if (parent && child) {
        parent.appendChild(child);
    }
}
/**
 * 删除子节点，会做一些判断避免报错
 */
function removeChild(parent, child) {
    if (parent && child) {
        parent.removeChild(child);
    }
}
/**
 * 添加 css 类
 */
function addClassName(el, className) {
    if (el && className) {
        el.classList.add(className);
    }
}
/**
 * 批量添加 css 类
 */
function addClassNames(el, classNames) {
    var _a;
    if (el && classNames) {
        (_a = el.classList).add.apply(_a, tslib.__spreadArray([], tslib.__read(classNames), false));
    }
}

exports.addClassName = addClassName;
exports.addClassNames = addClassNames;
exports.appendChild = appendChild;
exports.applyStyle = applyStyle;
exports.createElement = createElement;
exports.createSVGElement = createSVGElement;
exports.removeChild = removeChild;
exports.styleToText = styleToText;
