'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var CT_ExtensionList = require('../excel/types/CT_ExtensionList.js');

var CT_OfficeArtExtension_Attributes = {
    __any__: {
        type: 'any'
    },
    uri: {
        type: 'string'
    }
};
var CT_OfficeArtExtensionList_Attributes = {
    ext: {
        type: 'child',
        childAttributes: CT_OfficeArtExtension_Attributes,
        childIsArray: true
    }
};
var CT_Color_Attributes = {
    auto: {
        type: 'boolean'
    },
    indexed: {
        type: 'int'
    },
    rgb: {
        type: 'string'
    },
    theme: {
        type: 'int'
    },
    tint: {
        type: 'double',
        defaultValue: '0.0'
    }
};
var CT_PositiveFixedPercentage_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_ComplementTransform_Attributes = {};
var CT_InverseTransform_Attributes = {};
var CT_GrayscaleTransform_Attributes = {};
var CT_FixedPercentage_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_PositivePercentage_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_PositiveFixedAngle_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_Angle_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_Percentage_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_GammaTransform_Attributes = {};
var CT_InverseGammaTransform_Attributes = {};
var CT_ScRgbColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'child',
        childAttributes: CT_PositiveFixedAngle_Attributes
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    },
    r: {
        type: 'string'
    },
    g: {
        type: 'string'
    },
    b: {
        type: 'string'
    }
};
var CT_SRgbColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'child',
        childAttributes: CT_PositiveFixedAngle_Attributes
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    },
    val: {
        type: 'string'
    }
};
var CT_HslColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'int'
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'string'
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'string'
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    }
};
var CT_SystemColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'child',
        childAttributes: CT_PositiveFixedAngle_Attributes
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    },
    val: {
        type: 'string'
    },
    lastClr: {
        type: 'string'
    }
};
var CT_SchemeColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'child',
        childAttributes: CT_PositiveFixedAngle_Attributes
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    },
    val: {
        type: 'string'
    }
};
var CT_PresetColor_Attributes = {
    tint: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    shade: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    comp: {
        type: 'child',
        childAttributes: CT_ComplementTransform_Attributes
    },
    inv: {
        type: 'child',
        childAttributes: CT_InverseTransform_Attributes
    },
    gray: {
        type: 'child',
        childAttributes: CT_GrayscaleTransform_Attributes
    },
    alpha: {
        type: 'child',
        childAttributes: CT_PositiveFixedPercentage_Attributes
    },
    alphaOff: {
        type: 'child',
        childAttributes: CT_FixedPercentage_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    hue: {
        type: 'child',
        childAttributes: CT_PositiveFixedAngle_Attributes
    },
    hueOff: {
        type: 'child',
        childAttributes: CT_Angle_Attributes
    },
    hueMod: {
        type: 'child',
        childAttributes: CT_PositivePercentage_Attributes
    },
    sat: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    satMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    lumMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    red: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    redMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    green: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    greenMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blue: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueOff: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    blueMod: {
        type: 'child',
        childAttributes: CT_Percentage_Attributes
    },
    gamma: {
        type: 'child',
        childAttributes: CT_GammaTransform_Attributes
    },
    invGamma: {
        type: 'child',
        childAttributes: CT_InverseGammaTransform_Attributes
    },
    val: {
        type: 'string'
    }
};
var CT_TextFont_Attributes = {
    typeface: {
        type: 'string'
    },
    panose: {
        type: 'string'
    },
    pitchFamily: {
        type: 'int',
        defaultValue: '0'
    },
    charset: {
        type: 'int',
        defaultValue: '1'
    }
};
var CT_EffectList_Attributes = {};
var CT_BlurEffect_Attributes = {
    rad: {
        type: 'int',
        defaultValue: '0'
    },
    grow: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_FillOverlayEffect_Attributes = {};
var CT_NoFillProperties_Attributes = {};
var CT_SolidColorFillProperties_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    }
};
var CT_GradientStop_Attributes = {
    color: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    position: {
        type: 'double'
    }
};
var CT_GradientStopList_Attributes = {
    gs: {
        type: 'child',
        childAttributes: CT_GradientStop_Attributes,
        childIsArray: true
    }
};
var CT_LinearShadeProperties_Attributes = {
    ang: {
        type: 'int'
    },
    scaled: {
        type: 'boolean'
    }
};
var CT_RelativeRect_Attributes = {
    l: {
        type: 'string',
        defaultValue: '0%'
    },
    t: {
        type: 'string',
        defaultValue: '0%'
    },
    r: {
        type: 'string',
        defaultValue: '0%'
    },
    b: {
        type: 'string',
        defaultValue: '0%'
    }
};
var CT_PathShadeProperties_Attributes = {
    fillToRect: {
        type: 'child',
        childAttributes: CT_RelativeRect_Attributes
    },
    path: {
        type: 'string'
    }
};
var CT_GradientFillProperties_Attributes = {
    gsLst: {
        type: 'child',
        childAttributes: CT_GradientStopList_Attributes
    },
    lin: {
        type: 'child',
        childAttributes: CT_LinearShadeProperties_Attributes
    },
    path: {
        type: 'child',
        childAttributes: CT_PathShadeProperties_Attributes
    },
    tileRect: {
        type: 'child',
        childAttributes: CT_RelativeRect_Attributes
    },
    flip: {
        type: 'string',
        defaultValue: 'none'
    },
    rotWithShape: {
        type: 'boolean'
    }
};
var CT_AlphaBiLevelEffect_Attributes = {
    thresh: {
        type: 'string'
    }
};
var CT_AlphaCeilingEffect_Attributes = {};
var CT_AlphaFloorEffect_Attributes = {};
var CT_AlphaInverseEffect_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    }
};
var CT_EffectContainer_Attributes = {
    type: {
        type: 'string',
        defaultValue: 'sib'
    },
    name: {
        type: 'string'
    }
};
var CT_AlphaModulateEffect_Attributes = {
    cont: {
        type: 'child',
        childAttributes: CT_EffectContainer_Attributes
    }
};
var CT_AlphaModulateFixedEffect_Attributes = {
    amt: {
        type: 'string',
        defaultValue: '100%'
    }
};
var CT_AlphaReplaceEffect_Attributes = {
    a: {
        type: 'string'
    }
};
var CT_BiLevelEffect_Attributes = {
    thresh: {
        type: 'string'
    }
};
var CT_ColorChangeEffect_Attributes = {
    clrFrom: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    clrTo: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    useA: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_ColorReplaceEffect_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    }
};
var CT_DuotoneEffect_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    }
};
var CT_GrayscaleEffect_Attributes = {};
var CT_HSLEffect_Attributes = {
    hue: {
        type: 'int',
        defaultValue: '0'
    },
    sat: {
        type: 'string',
        defaultValue: '0%'
    },
    lum: {
        type: 'string',
        defaultValue: '0%'
    }
};
var CT_LuminanceEffect_Attributes = {
    bright: {
        type: 'string',
        defaultValue: '0%'
    },
    contrast: {
        type: 'string',
        defaultValue: '0%'
    }
};
var CT_TintEffect_Attributes = {
    hue: {
        type: 'int',
        defaultValue: '0'
    },
    amt: {
        type: 'string',
        defaultValue: '0%'
    }
};
var CT_Blip_Attributes = {
    alphaBiLevel: {
        type: 'child',
        childAttributes: CT_AlphaBiLevelEffect_Attributes
    },
    alphaCeiling: {
        type: 'child',
        childAttributes: CT_AlphaCeilingEffect_Attributes
    },
    alphaFloor: {
        type: 'child',
        childAttributes: CT_AlphaFloorEffect_Attributes
    },
    alphaInv: {
        type: 'child',
        childAttributes: CT_AlphaInverseEffect_Attributes
    },
    alphaMod: {
        type: 'child',
        childAttributes: CT_AlphaModulateEffect_Attributes
    },
    alphaModFix: {
        type: 'child',
        childAttributes: CT_AlphaModulateFixedEffect_Attributes
    },
    alphaRepl: {
        type: 'child',
        childAttributes: CT_AlphaReplaceEffect_Attributes
    },
    biLevel: {
        type: 'child',
        childAttributes: CT_BiLevelEffect_Attributes
    },
    blur: {
        type: 'child',
        childAttributes: CT_BlurEffect_Attributes
    },
    clrChange: {
        type: 'child',
        childAttributes: CT_ColorChangeEffect_Attributes
    },
    clrRepl: {
        type: 'child',
        childAttributes: CT_ColorReplaceEffect_Attributes
    },
    duotone: {
        type: 'child',
        childAttributes: CT_DuotoneEffect_Attributes
    },
    fillOverlay: {
        type: 'child',
        childAttributes: CT_FillOverlayEffect_Attributes
    },
    grayscl: {
        type: 'child',
        childAttributes: CT_GrayscaleEffect_Attributes
    },
    hsl: {
        type: 'child',
        childAttributes: CT_HSLEffect_Attributes
    },
    lum: {
        type: 'child',
        childAttributes: CT_LuminanceEffect_Attributes
    },
    tint: {
        type: 'child',
        childAttributes: CT_TintEffect_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    cstate: {
        type: 'string',
        defaultValue: 'none'
    }
};
var CT_TileInfoProperties_Attributes = {
    tx: {
        type: 'string'
    },
    ty: {
        type: 'string'
    },
    sx: {
        type: 'string'
    },
    sy: {
        type: 'string'
    },
    flip: {
        type: 'string',
        defaultValue: 'none'
    },
    algn: {
        type: 'string'
    }
};
var CT_StretchInfoProperties_Attributes = {
    fillRect: {
        type: 'child',
        childAttributes: CT_RelativeRect_Attributes
    }
};
var CT_BlipFillProperties_Attributes = {
    blip: {
        type: 'child',
        childAttributes: CT_Blip_Attributes
    },
    srcRect: {
        type: 'child',
        childAttributes: CT_RelativeRect_Attributes
    },
    tile: {
        type: 'child',
        childAttributes: CT_TileInfoProperties_Attributes
    },
    stretch: {
        type: 'child',
        childAttributes: CT_StretchInfoProperties_Attributes
    },
    dpi: {
        type: 'int'
    },
    rotWithShape: {
        type: 'boolean'
    }
};
var CT_PatternFillProperties_Attributes = {
    fgClr: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    bgClr: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    prst: {
        type: 'string'
    }
};
var CT_GroupFillProperties_Attributes = {};
var CT_SphereCoords_Attributes = {
    lat: {
        type: 'int'
    },
    lon: {
        type: 'int'
    },
    rev: {
        type: 'int'
    }
};
var CT_Camera_Attributes = {
    rot: {
        type: 'child',
        childAttributes: CT_SphereCoords_Attributes
    },
    prst: {
        type: 'string'
    },
    fov: {
        type: 'int'
    },
    zoom: {
        type: 'string',
        defaultValue: '100%'
    }
};
var CT_LightRig_Attributes = {
    rot: {
        type: 'child',
        childAttributes: CT_SphereCoords_Attributes
    },
    rig: {
        type: 'string'
    },
    dir: {
        type: 'string'
    }
};
var CT_Point3D_Attributes = {
    x: {
        type: 'string'
    },
    y: {
        type: 'string'
    },
    z: {
        type: 'string'
    }
};
var CT_Vector3D_Attributes = {
    dx: {
        type: 'string'
    },
    dy: {
        type: 'string'
    },
    dz: {
        type: 'string'
    }
};
var CT_Backdrop_Attributes = {
    anchor: {
        type: 'child',
        childAttributes: CT_Point3D_Attributes
    },
    norm: {
        type: 'child',
        childAttributes: CT_Vector3D_Attributes
    },
    up: {
        type: 'child',
        childAttributes: CT_Vector3D_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    }
};
var CT_Scene3D_Attributes = {
    camera: {
        type: 'child',
        childAttributes: CT_Camera_Attributes
    },
    lightRig: {
        type: 'child',
        childAttributes: CT_LightRig_Attributes
    },
    backdrop: {
        type: 'child',
        childAttributes: CT_Backdrop_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    }
};
var CT_Bevel_Attributes = {
    w: {
        type: 'int',
        defaultValue: '76200'
    },
    h: {
        type: 'int',
        defaultValue: '76200'
    },
    prst: {
        type: 'string',
        defaultValue: 'circle'
    }
};
var CT_Shape3D_Attributes = {
    bevelT: {
        type: 'child',
        childAttributes: CT_Bevel_Attributes
    },
    bevelB: {
        type: 'child',
        childAttributes: CT_Bevel_Attributes
    },
    extrusionClr: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    contourClr: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    z: {
        type: 'string',
        defaultValue: '0'
    },
    extrusionH: {
        type: 'int',
        defaultValue: '0'
    },
    contourW: {
        type: 'int',
        defaultValue: '0'
    },
    prstMaterial: {
        type: 'string',
        defaultValue: 'warmMatte'
    }
};
var CT_PresetLineDashProperties_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_DashStop_Attributes = {
    d: {
        type: 'string'
    },
    sp: {
        type: 'string'
    }
};
var CT_DashStopList_Attributes = {
    ds: {
        type: 'child',
        childAttributes: CT_DashStop_Attributes,
        childIsArray: true
    }
};
var CT_LineJoinRound_Attributes = {};
var CT_LineJoinBevel_Attributes = {};
var CT_LineJoinMiterProperties_Attributes = {
    lim: {
        type: 'string'
    }
};
var CT_LineEndProperties_Attributes = {
    type: {
        type: 'string',
        defaultValue: 'none'
    },
    w: {
        type: 'string'
    },
    len: {
        type: 'string'
    }
};
var CT_LineProperties_Attributes = {
    noFill: {
        type: 'child',
        childAttributes: CT_NoFillProperties_Attributes
    },
    solidFill: {
        type: 'child',
        childAttributes: CT_SolidColorFillProperties_Attributes
    },
    gradFill: {
        type: 'child',
        childAttributes: CT_GradientFillProperties_Attributes
    },
    pattFill: {
        type: 'child',
        childAttributes: CT_PatternFillProperties_Attributes
    },
    prstDash: {
        type: 'child',
        childAttributes: CT_PresetLineDashProperties_Attributes
    },
    custDash: {
        type: 'child',
        childAttributes: CT_DashStopList_Attributes
    },
    round: {
        type: 'child',
        childAttributes: CT_LineJoinRound_Attributes
    },
    bevel: {
        type: 'child',
        childAttributes: CT_LineJoinBevel_Attributes
    },
    miter: {
        type: 'child',
        childAttributes: CT_LineJoinMiterProperties_Attributes
    },
    headEnd: {
        type: 'child',
        childAttributes: CT_LineEndProperties_Attributes
    },
    tailEnd: {
        type: 'child',
        childAttributes: CT_LineEndProperties_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    w: {
        type: 'int'
    },
    cap: {
        type: 'string'
    },
    cmpd: {
        type: 'string'
    },
    algn: {
        type: 'string'
    }
};
var CT_FontScheme_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_Point2D_Attributes = {
    x: {
        type: 'string'
    },
    y: {
        type: 'string'
    }
};
var CT_PositiveSize2D_Attributes = {
    cx: {
        type: 'int'
    },
    cy: {
        type: 'int'
    }
};
var CT_Transform2D_Attributes = {
    off: {
        type: 'child',
        childAttributes: CT_Point2D_Attributes
    },
    ext: {
        type: 'child',
        childAttributes: CT_PositiveSize2D_Attributes
    },
    rot: {
        type: 'int',
        defaultValue: '0'
    },
    flipH: {
        type: 'boolean',
        defaultValue: 'false'
    },
    flipV: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_ConnectorLocking_Attributes = {
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    }
};
var CT_ShapeLocking_Attributes = {
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    noTextEdit: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_PictureLocking_Attributes = {
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    noCrop: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_GraphicalObjectFrameLocking_Attributes = {
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    noGrp: {
        type: 'boolean',
        defaultValue: 'false'
    },
    noDrilldown: {
        type: 'boolean',
        defaultValue: 'false'
    },
    noSelect: {
        type: 'boolean',
        defaultValue: 'false'
    },
    noChangeAspect: {
        type: 'boolean',
        defaultValue: 'false'
    },
    noMove: {
        type: 'boolean',
        defaultValue: 'false'
    },
    noResize: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_Hyperlink_Attributes = {
    'ref': {
        type: 'string'
    },
    'r:id': {
        type: 'string'
    },
    'location': {
        type: 'string'
    },
    'tooltip': {
        type: 'string'
    },
    'display': {
        type: 'string'
    }
};
var CT_NonVisualDrawingProps_Attributes = {
    hlinkClick: {
        type: 'child',
        childAttributes: CT_Hyperlink_Attributes
    },
    hlinkHover: {
        type: 'child',
        childAttributes: CT_Hyperlink_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    id: {
        type: 'int'
    },
    name: {
        type: 'string'
    },
    descr: {
        type: 'string'
    },
    hidden: {
        type: 'boolean',
        defaultValue: 'false'
    },
    title: {
        type: 'string'
    }
};
var CT_NonVisualDrawingShapeProps_Attributes = {
    spLocks: {
        type: 'child',
        childAttributes: CT_ShapeLocking_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    txBox: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_DbPr_Attributes = {
    connection: {
        type: 'string'
    },
    command: {
        type: 'string'
    },
    serverCommand: {
        type: 'string'
    },
    commandType: {
        type: 'int',
        defaultValue: '2'
    }
};
var CT_OlapPr_Attributes = {
    local: {
        type: 'boolean',
        defaultValue: 'false'
    },
    localConnection: {
        type: 'string'
    },
    localRefresh: {
        type: 'boolean',
        defaultValue: 'true'
    },
    sendLocale: {
        type: 'boolean',
        defaultValue: 'false'
    },
    rowDrillCount: {
        type: 'int'
    },
    serverFill: {
        type: 'boolean',
        defaultValue: 'true'
    },
    serverNumberFormat: {
        type: 'boolean',
        defaultValue: 'true'
    },
    serverFont: {
        type: 'boolean',
        defaultValue: 'true'
    },
    serverFontColor: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_TableMissing_Attributes = {};
var CT_XStringElement_Attributes = {
    v: {
        type: 'string'
    }
};
var CT_Index_Attributes = {
    v: {
        type: 'int'
    }
};
var CT_Tables_Attributes = {
    m: {
        type: 'child',
        childAttributes: CT_TableMissing_Attributes,
        childIsArray: true
    },
    s: {
        type: 'child',
        childAttributes: CT_XStringElement_Attributes,
        childIsArray: true
    },
    x: {
        type: 'child',
        childAttributes: CT_Index_Attributes,
        childIsArray: true
    },
    count: {
        type: 'int'
    }
};
var CT_WebPr_Attributes = {
    tables: {
        type: 'child',
        childAttributes: CT_Tables_Attributes
    },
    xml: {
        type: 'boolean',
        defaultValue: 'false'
    },
    sourceData: {
        type: 'boolean',
        defaultValue: 'false'
    },
    parsePre: {
        type: 'boolean',
        defaultValue: 'false'
    },
    consecutive: {
        type: 'boolean',
        defaultValue: 'false'
    },
    firstRow: {
        type: 'boolean',
        defaultValue: 'false'
    },
    xl97: {
        type: 'boolean',
        defaultValue: 'false'
    },
    textDates: {
        type: 'boolean',
        defaultValue: 'false'
    },
    xl2000: {
        type: 'boolean',
        defaultValue: 'false'
    },
    url: {
        type: 'string'
    },
    post: {
        type: 'string'
    },
    htmlTables: {
        type: 'boolean',
        defaultValue: 'false'
    },
    htmlFormat: {
        type: 'string',
        defaultValue: 'none'
    },
    editPage: {
        type: 'string'
    }
};
var CT_TextField_Attributes = {
    type: {
        type: 'string',
        defaultValue: 'general'
    },
    position: {
        type: 'int',
        defaultValue: '0'
    }
};
var CT_TextFields_Attributes = {
    textField: {
        type: 'child',
        childAttributes: CT_TextField_Attributes,
        childIsArray: true
    },
    count: {
        type: 'int',
        defaultValue: '1'
    }
};
var CT_TextPr_Attributes = {
    textFields: {
        type: 'child',
        childAttributes: CT_TextFields_Attributes
    },
    prompt: {
        type: 'boolean',
        defaultValue: 'true'
    },
    fileType: {
        type: 'string',
        defaultValue: 'win'
    },
    characterSet: {
        type: 'string'
    },
    firstRow: {
        type: 'int',
        defaultValue: '1'
    },
    sourceFile: {
        type: 'string'
    },
    delimited: {
        type: 'boolean',
        defaultValue: 'true'
    },
    decimal: {
        type: 'string',
        defaultValue: '.'
    },
    thousands: {
        type: 'string',
        defaultValue: ','
    },
    tab: {
        type: 'boolean',
        defaultValue: 'true'
    },
    space: {
        type: 'boolean',
        defaultValue: 'false'
    },
    comma: {
        type: 'boolean',
        defaultValue: 'false'
    },
    semicolon: {
        type: 'boolean',
        defaultValue: 'false'
    },
    consecutive: {
        type: 'boolean',
        defaultValue: 'false'
    },
    qualifier: {
        type: 'string',
        defaultValue: 'doubleQuote'
    },
    delimiter: {
        type: 'string'
    }
};
var CT_Parameter_Attributes = {
    name: {
        type: 'string'
    },
    sqlType: {
        type: 'int',
        defaultValue: '0'
    },
    parameterType: {
        type: 'string',
        defaultValue: 'prompt'
    },
    refreshOnChange: {
        type: 'boolean',
        defaultValue: 'false'
    },
    prompt: {
        type: 'string'
    },
    boolean: {
        type: 'boolean'
    },
    double: {
        type: 'double'
    },
    integer: {
        type: 'int'
    },
    string: {
        type: 'string'
    },
    cell: {
        type: 'string'
    }
};
var CT_Parameters_Attributes = {
    parameter: {
        type: 'child',
        childAttributes: CT_Parameter_Attributes,
        childIsArray: true
    },
    count: {
        type: 'int'
    }
};
var CT_Connection_Attributes = {
    dbPr: {
        type: 'child',
        childAttributes: CT_DbPr_Attributes
    },
    olapPr: {
        type: 'child',
        childAttributes: CT_OlapPr_Attributes
    },
    webPr: {
        type: 'child',
        childAttributes: CT_WebPr_Attributes
    },
    textPr: {
        type: 'child',
        childAttributes: CT_TextPr_Attributes
    },
    parameters: {
        type: 'child',
        childAttributes: CT_Parameters_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes
    },
    id: {
        type: 'int'
    },
    sourceFile: {
        type: 'string'
    },
    odcFile: {
        type: 'string'
    },
    keepAlive: {
        type: 'boolean',
        defaultValue: 'false'
    },
    interval: {
        type: 'int',
        defaultValue: '0'
    },
    name: {
        type: 'string'
    },
    description: {
        type: 'string'
    },
    type: {
        type: 'int'
    },
    reconnectionMethod: {
        type: 'int',
        defaultValue: '1'
    },
    refreshedVersion: {
        type: 'int'
    },
    minRefreshableVersion: {
        type: 'int',
        defaultValue: '0'
    },
    savePassword: {
        type: 'boolean',
        defaultValue: 'false'
    },
    new: {
        type: 'boolean',
        defaultValue: 'false'
    },
    deleted: {
        type: 'boolean',
        defaultValue: 'false'
    },
    onlyUseConnectionFile: {
        type: 'boolean',
        defaultValue: 'false'
    },
    background: {
        type: 'boolean',
        defaultValue: 'false'
    },
    refreshOnLoad: {
        type: 'boolean',
        defaultValue: 'false'
    },
    saveData: {
        type: 'boolean',
        defaultValue: 'false'
    },
    credentials: {
        type: 'string',
        defaultValue: 'integrated'
    },
    singleSignOnId: {
        type: 'string'
    }
};
var CT_NonVisualConnectorProperties_Attributes = {
    cxnSpLocks: {
        type: 'child',
        childAttributes: CT_ConnectorLocking_Attributes
    },
    stCxn: {
        type: 'child',
        childAttributes: CT_Connection_Attributes
    },
    endCxn: {
        type: 'child',
        childAttributes: CT_Connection_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    }
};
var CT_NonVisualPictureProperties_Attributes = {
    picLocks: {
        type: 'child',
        childAttributes: CT_PictureLocking_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    preferRelativeResize: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_NonVisualGraphicFrameProperties_Attributes = {
    graphicFrameLocks: {
        type: 'child',
        childAttributes: CT_GraphicalObjectFrameLocking_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    }
};
var CT_GeomGuide_Attributes = {
    name: {
        type: 'string'
    },
    fmla: {
        type: 'string'
    }
};
var CT_GeomGuideList_Attributes = {
    gd: {
        type: 'child',
        childAttributes: CT_GeomGuide_Attributes,
        childIsArray: true
    }
};
var CT_PresetTextShape_Attributes = {
    avLst: {
        type: 'child',
        childAttributes: CT_GeomGuideList_Attributes
    },
    prst: {
        type: 'string'
    }
};
var CT_TextNoAutofit_Attributes = {};
var CT_TextNormalAutofit_Attributes = {
    fontScale: {
        type: 'string',
        defaultValue: '100%'
    },
    lnSpcReduction: {
        type: 'string',
        defaultValue: '0%'
    }
};
var CT_TextShapeAutofit_Attributes = {};
var CT_FlatText_Attributes = {
    z: {
        type: 'string',
        defaultValue: '0'
    }
};
var CT_TextBodyProperties_Attributes = {
    prstTxWarp: {
        type: 'child',
        childAttributes: CT_PresetTextShape_Attributes
    },
    noAutofit: {
        type: 'child',
        childAttributes: CT_TextNoAutofit_Attributes,
        childIsArray: true
    },
    normAutofit: {
        type: 'child',
        childAttributes: CT_TextNormalAutofit_Attributes,
        childIsArray: true
    },
    spAutoFit: {
        type: 'child',
        childAttributes: CT_TextShapeAutofit_Attributes,
        childIsArray: true
    },
    scene3d: {
        type: 'child',
        childAttributes: CT_Scene3D_Attributes
    },
    sp3d: {
        type: 'child',
        childAttributes: CT_Shape3D_Attributes
    },
    flatTx: {
        type: 'child',
        childAttributes: CT_FlatText_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    rot: {
        type: 'int'
    },
    spcFirstLastPara: {
        type: 'boolean'
    },
    vertOverflow: {
        type: 'string'
    },
    horzOverflow: {
        type: 'string'
    },
    vert: {
        type: 'string'
    },
    wrap: {
        type: 'string'
    },
    lIns: {
        type: 'string'
    },
    tIns: {
        type: 'string'
    },
    rIns: {
        type: 'string'
    },
    bIns: {
        type: 'string'
    },
    numCol: {
        type: 'int'
    },
    spcCol: {
        type: 'int'
    },
    rtlCol: {
        type: 'boolean'
    },
    fromWordArt: {
        type: 'boolean'
    },
    anchor: {
        type: 'string'
    },
    anchorCtr: {
        type: 'boolean'
    },
    forceAA: {
        type: 'boolean'
    },
    upright: {
        type: 'boolean',
        defaultValue: 'false'
    },
    compatLnSpc: {
        type: 'boolean'
    }
};
var CT_TextSpacingPercent_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_TextSpacingPoint_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_TextSpacing_Attributes = {
    spcPct: {
        type: 'child',
        childAttributes: CT_TextSpacingPercent_Attributes,
        childIsArray: true
    },
    spcPts: {
        type: 'child',
        childAttributes: CT_TextSpacingPoint_Attributes,
        childIsArray: true
    }
};
var CT_TextBulletColorFollowText_Attributes = {};
var CT_TextBulletSizeFollowText_Attributes = {};
var CT_TextBulletSizePercent_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_TextBulletSizePoint_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_TextBulletTypefaceFollowText_Attributes = {};
var CT_TextNoBullet_Attributes = {};
var CT_TextAutonumberBullet_Attributes = {
    type: {
        type: 'string'
    },
    startAt: {
        type: 'int',
        defaultValue: '1'
    }
};
var CT_TextCharBullet_Attributes = {
    char: {
        type: 'string'
    }
};
var CT_TextBlipBullet_Attributes = {
    blip: {
        type: 'child',
        childAttributes: CT_Blip_Attributes
    }
};
var CT_TextTabStop_Attributes = {
    pos: {
        type: 'string'
    },
    algn: {
        type: 'string'
    }
};
var CT_TextTabStopList_Attributes = {
    tab: {
        type: 'child',
        childAttributes: CT_TextTabStop_Attributes,
        childIsArray: true
    }
};
var CT_TextUnderlineLineFollowText_Attributes = {};
var CT_TextUnderlineFillFollowText_Attributes = {};
var CT_TextUnderlineFillGroupWrapper_Attributes = {};
var CT_X_Attributes = {
    v: {
        type: 'int',
        defaultValue: '0'
    }
};
var CT_Boolean_Attributes = {
    x: {
        type: 'child',
        childAttributes: CT_X_Attributes,
        childIsArray: true
    },
    v: {
        type: 'boolean'
    },
    u: {
        type: 'boolean'
    },
    f: {
        type: 'boolean'
    },
    c: {
        type: 'string'
    },
    cp: {
        type: 'int'
    }
};
var CT_TextCharacterProperties_Attributes = {
    ln: {
        type: 'child',
        childAttributes: CT_LineProperties_Attributes
    },
    noFill: {
        type: 'child',
        childAttributes: CT_NoFillProperties_Attributes
    },
    solidFill: {
        type: 'child',
        childAttributes: CT_SolidColorFillProperties_Attributes
    },
    gradFill: {
        type: 'child',
        childAttributes: CT_GradientFillProperties_Attributes
    },
    blipFill: {
        type: 'child',
        childAttributes: CT_BlipFillProperties_Attributes
    },
    pattFill: {
        type: 'child',
        childAttributes: CT_PatternFillProperties_Attributes
    },
    grpFill: {
        type: 'child',
        childAttributes: CT_GroupFillProperties_Attributes
    },
    effectLst: {
        type: 'child',
        childAttributes: CT_EffectList_Attributes
    },
    effectDag: {
        type: 'child',
        childAttributes: CT_EffectContainer_Attributes
    },
    highlight: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    uLnTx: {
        type: 'child',
        childAttributes: CT_TextUnderlineLineFollowText_Attributes,
        childIsArray: true
    },
    uLn: {
        type: 'child',
        childAttributes: CT_LineProperties_Attributes
    },
    uFillTx: {
        type: 'child',
        childAttributes: CT_TextUnderlineFillFollowText_Attributes,
        childIsArray: true
    },
    uFill: {
        type: 'child',
        childAttributes: CT_TextUnderlineFillGroupWrapper_Attributes,
        childIsArray: true
    },
    latin: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes
    },
    ea: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes
    },
    cs: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes
    },
    sym: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes
    },
    hlinkClick: {
        type: 'child',
        childAttributes: CT_Hyperlink_Attributes
    },
    hlinkMouseOver: {
        type: 'child',
        childAttributes: CT_Hyperlink_Attributes
    },
    rtl: {
        type: 'child',
        childAttributes: CT_Boolean_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    kumimoji: {
        type: 'boolean'
    },
    lang: {
        type: 'string'
    },
    altLang: {
        type: 'string'
    },
    sz: {
        type: 'int'
    },
    b: {
        type: 'boolean'
    },
    i: {
        type: 'boolean'
    },
    u: {
        type: 'string'
    },
    strike: {
        type: 'string'
    },
    kern: {
        type: 'int'
    },
    cap: {
        type: 'string',
        defaultValue: 'none'
    },
    spc: {
        type: 'string'
    },
    normalizeH: {
        type: 'boolean'
    },
    baseline: {
        type: 'string'
    },
    noProof: {
        type: 'boolean'
    },
    dirty: {
        type: 'boolean',
        defaultValue: 'true'
    },
    err: {
        type: 'boolean',
        defaultValue: 'false'
    },
    smtClean: {
        type: 'boolean',
        defaultValue: 'true'
    },
    smtId: {
        type: 'int',
        defaultValue: '0'
    },
    bmk: {
        type: 'string'
    }
};
var CT_TextParagraphProperties_Attributes = {
    lnSpc: {
        type: 'child',
        childAttributes: CT_TextSpacing_Attributes
    },
    spcBef: {
        type: 'child',
        childAttributes: CT_TextSpacing_Attributes
    },
    spcAft: {
        type: 'child',
        childAttributes: CT_TextSpacing_Attributes
    },
    buClrTx: {
        type: 'child',
        childAttributes: CT_TextBulletColorFollowText_Attributes
    },
    buClr: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    buSzTx: {
        type: 'child',
        childAttributes: CT_TextBulletSizeFollowText_Attributes,
        childIsArray: true
    },
    buSzPct: {
        type: 'child',
        childAttributes: CT_TextBulletSizePercent_Attributes,
        childIsArray: true
    },
    buSzPts: {
        type: 'child',
        childAttributes: CT_TextBulletSizePoint_Attributes,
        childIsArray: true
    },
    buFontTx: {
        type: 'child',
        childAttributes: CT_TextBulletTypefaceFollowText_Attributes,
        childIsArray: true
    },
    buFont: {
        type: 'child',
        childAttributes: CT_TextFont_Attributes,
        childIsArray: true
    },
    buNone: {
        type: 'child',
        childAttributes: CT_TextNoBullet_Attributes,
        childIsArray: true
    },
    buAutoNum: {
        type: 'child',
        childAttributes: CT_TextAutonumberBullet_Attributes,
        childIsArray: true
    },
    buChar: {
        type: 'child',
        childAttributes: CT_TextCharBullet_Attributes,
        childIsArray: true
    },
    buBlip: {
        type: 'child',
        childAttributes: CT_TextBlipBullet_Attributes,
        childIsArray: true
    },
    tabLst: {
        type: 'child',
        childAttributes: CT_TextTabStopList_Attributes
    },
    defRPr: {
        type: 'child',
        childAttributes: CT_TextCharacterProperties_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    marL: {
        type: 'int'
    },
    marR: {
        type: 'int'
    },
    lvl: {
        type: 'int'
    },
    indent: {
        type: 'int'
    },
    algn: {
        type: 'string'
    },
    defTabSz: {
        type: 'string'
    },
    rtl: {
        type: 'boolean'
    },
    eaLnBrk: {
        type: 'boolean'
    },
    fontAlgn: {
        type: 'string'
    },
    latinLnBrk: {
        type: 'boolean'
    },
    hangingPunct: {
        type: 'boolean'
    }
};
var CT_TextListStyle_Attributes = {
    defPPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl1pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl2pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl3pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl4pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl5pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl6pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl7pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl8pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    lvl9pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    }
};
var CT_RegularTextRun_Attributes = {
    rPr: {
        type: 'child',
        childAttributes: CT_TextCharacterProperties_Attributes
    },
    t: {
        type: 'child-string'
    }
};
var CT_TextLineBreak_Attributes = {
    rPr: {
        type: 'child',
        childAttributes: CT_TextCharacterProperties_Attributes
    }
};
var CT_TextParagraph_Attributes = {
    pPr: {
        type: 'child',
        childAttributes: CT_TextParagraphProperties_Attributes
    },
    r: {
        type: 'child',
        childAttributes: CT_RegularTextRun_Attributes,
        childIsArray: true
    },
    br: {
        type: 'child',
        childAttributes: CT_TextLineBreak_Attributes,
        childIsArray: true
    },
    fld: {
        type: 'child',
        childAttributes: CT_TextField_Attributes,
        childIsArray: true
    },
    endParaRPr: {
        type: 'child',
        childAttributes: CT_TextCharacterProperties_Attributes
    }
};
var CT_TextBody_Attributes = {
    bodyPr: {
        type: 'child',
        childAttributes: CT_TextBodyProperties_Attributes
    },
    lstStyle: {
        type: 'child',
        childAttributes: CT_TextListStyle_Attributes
    },
    p: {
        type: 'child',
        childAttributes: CT_TextParagraph_Attributes,
        childIsArray: true
    }
};
var CT_AdjPoint2D_Attributes = {
    x: {
        type: 'string'
    },
    y: {
        type: 'string'
    }
};
var CT_XYAdjustHandle_Attributes = {
    pos: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes
    },
    gdRefX: {
        type: 'string'
    },
    minX: {
        type: 'string'
    },
    maxX: {
        type: 'string'
    },
    gdRefY: {
        type: 'string'
    },
    minY: {
        type: 'string'
    },
    maxY: {
        type: 'string'
    }
};
var CT_PolarAdjustHandle_Attributes = {
    pos: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes
    },
    gdRefR: {
        type: 'string'
    },
    minR: {
        type: 'string'
    },
    maxR: {
        type: 'string'
    },
    gdRefAng: {
        type: 'string'
    },
    minAng: {
        type: 'string'
    },
    maxAng: {
        type: 'string'
    }
};
var CT_AdjustHandleList_Attributes = {
    ahXY: {
        type: 'child',
        childAttributes: CT_XYAdjustHandle_Attributes
    },
    ahPolar: {
        type: 'child',
        childAttributes: CT_PolarAdjustHandle_Attributes
    }
};
var CT_ConnectionSite_Attributes = {
    pos: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes
    },
    ang: {
        type: 'string'
    }
};
var CT_ConnectionSiteList_Attributes = {
    cxn: {
        type: 'child',
        childAttributes: CT_ConnectionSite_Attributes,
        childIsArray: true
    }
};
var CT_GeomRect_Attributes = {
    l: {
        type: 'string'
    },
    t: {
        type: 'string'
    },
    r: {
        type: 'string'
    },
    b: {
        type: 'string'
    }
};
var CT_Path2DClose_Attributes = {};
var CT_Path2DMoveTo_Attributes = {
    pt: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes
    }
};
var CT_Path2DLineTo_Attributes = {
    pt: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes
    }
};
var CT_Path2DArcTo_Attributes = {
    wR: {
        type: 'string'
    },
    hR: {
        type: 'string'
    },
    stAng: {
        type: 'string'
    },
    swAng: {
        type: 'string'
    }
};
var CT_Path2DQuadBezierTo_Attributes = {
    pt: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes,
        childIsArray: true
    }
};
var CT_Path2DCubicBezierTo_Attributes = {
    pt: {
        type: 'child',
        childAttributes: CT_AdjPoint2D_Attributes,
        childIsArray: true
    }
};
var CT_Path2D_Attributes = {
    close: {
        type: 'child',
        childAttributes: CT_Path2DClose_Attributes
    },
    moveTo: {
        type: 'child',
        childAttributes: CT_Path2DMoveTo_Attributes
    },
    lnTo: {
        type: 'child',
        childAttributes: CT_Path2DLineTo_Attributes
    },
    arcTo: {
        type: 'child',
        childAttributes: CT_Path2DArcTo_Attributes
    },
    quadBezTo: {
        type: 'child',
        childAttributes: CT_Path2DQuadBezierTo_Attributes
    },
    cubicBezTo: {
        type: 'child',
        childAttributes: CT_Path2DCubicBezierTo_Attributes
    },
    w: {
        type: 'int',
        defaultValue: '0'
    },
    h: {
        type: 'int',
        defaultValue: '0'
    },
    fill: {
        type: 'string',
        defaultValue: 'norm'
    },
    stroke: {
        type: 'boolean',
        defaultValue: 'true'
    },
    extrusionOk: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_Path2DList_Attributes = {
    path: {
        type: 'child',
        childAttributes: CT_Path2D_Attributes,
        childIsArray: true
    }
};
var CT_CustomGeometry2D_Attributes = {
    avLst: {
        type: 'child',
        childAttributes: CT_GeomGuideList_Attributes
    },
    gdLst: {
        type: 'child',
        childAttributes: CT_GeomGuideList_Attributes
    },
    ahLst: {
        type: 'child',
        childAttributes: CT_AdjustHandleList_Attributes
    },
    cxnLst: {
        type: 'child',
        childAttributes: CT_ConnectionSiteList_Attributes
    },
    rect: {
        type: 'child',
        childAttributes: CT_GeomRect_Attributes
    },
    pathLst: {
        type: 'child',
        childAttributes: CT_Path2DList_Attributes
    }
};
var CT_PresetGeometry2D_Attributes = {
    avLst: {
        type: 'child',
        childAttributes: CT_GeomGuideList_Attributes
    },
    prst: {
        type: 'string'
    }
};
var CT_ShapeProperties_Attributes = {
    xfrm: {
        type: 'child',
        childAttributes: CT_Transform2D_Attributes
    },
    custGeom: {
        type: 'child',
        childAttributes: CT_CustomGeometry2D_Attributes
    },
    prstGeom: {
        type: 'child',
        childAttributes: CT_PresetGeometry2D_Attributes
    },
    noFill: {
        type: 'child',
        childAttributes: CT_NoFillProperties_Attributes
    },
    solidFill: {
        type: 'child',
        childAttributes: CT_SolidColorFillProperties_Attributes
    },
    gradFill: {
        type: 'child',
        childAttributes: CT_GradientFillProperties_Attributes
    },
    blipFill: {
        type: 'child',
        childAttributes: CT_BlipFillProperties_Attributes
    },
    pattFill: {
        type: 'child',
        childAttributes: CT_PatternFillProperties_Attributes
    },
    grpFill: {
        type: 'child',
        childAttributes: CT_GroupFillProperties_Attributes
    },
    ln: {
        type: 'child',
        childAttributes: CT_LineProperties_Attributes
    },
    effectLst: {
        type: 'child',
        childAttributes: CT_EffectList_Attributes
    },
    effectDag: {
        type: 'child',
        childAttributes: CT_EffectContainer_Attributes
    },
    scene3d: {
        type: 'child',
        childAttributes: CT_Scene3D_Attributes
    },
    sp3d: {
        type: 'child',
        childAttributes: CT_Shape3D_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_OfficeArtExtensionList_Attributes
    },
    bwMode: {
        type: 'string'
    }
};
var CT_StyleMatrixReference_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    },
    idx: {
        type: 'int'
    }
};
var CT_FontReference_Attributes = {
    scrgbClr: {
        type: 'child',
        childAttributes: CT_ScRgbColor_Attributes
    },
    srgbClr: {
        type: 'child',
        childAttributes: CT_SRgbColor_Attributes
    },
    hslClr: {
        type: 'child',
        childAttributes: CT_HslColor_Attributes
    },
    sysClr: {
        type: 'child',
        childAttributes: CT_SystemColor_Attributes
    },
    schemeClr: {
        type: 'child',
        childAttributes: CT_SchemeColor_Attributes
    },
    prstClr: {
        type: 'child',
        childAttributes: CT_PresetColor_Attributes
    },
    idx: {
        type: 'string'
    }
};
var CT_ShapeStyle_Attributes = {
    lnRef: {
        type: 'child',
        childAttributes: CT_StyleMatrixReference_Attributes
    },
    fillRef: {
        type: 'child',
        childAttributes: CT_StyleMatrixReference_Attributes
    },
    effectRef: {
        type: 'child',
        childAttributes: CT_StyleMatrixReference_Attributes
    },
    fontRef: {
        type: 'child',
        childAttributes: CT_FontReference_Attributes
    }
};
var CT_TableStyleElement_Attributes = {
    type: {
        type: 'string'
    },
    size: {
        type: 'int',
        defaultValue: '1'
    },
    dxfId: {
        type: 'int'
    }
};
var CT_TableStyle_Attributes = {
    tableStyleElement: {
        type: 'child',
        childAttributes: CT_TableStyleElement_Attributes,
        childIsArray: true
    },
    name: {
        type: 'string'
    },
    pivot: {
        type: 'boolean',
        defaultValue: 'true'
    },
    table: {
        type: 'boolean',
        defaultValue: 'true'
    },
    count: {
        type: 'int'
    }
};
var CT_AnchorClientData_Attributes = {
    fLocksWithSheet: {
        type: 'boolean',
        defaultValue: 'true'
    },
    fPrintsWithSheet: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_ShapeNonVisual_Attributes = {
    cNvPr: {
        type: 'child',
        childAttributes: CT_NonVisualDrawingProps_Attributes
    },
    cNvSpPr: {
        type: 'child',
        childAttributes: CT_NonVisualDrawingShapeProps_Attributes
    }
};
var CT_Shape_Attributes = {
    nvSpPr: {
        type: 'child',
        childAttributes: CT_ShapeNonVisual_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    style: {
        type: 'child',
        childAttributes: CT_ShapeStyle_Attributes
    },
    txBody: {
        type: 'child',
        childAttributes: CT_TextBody_Attributes
    },
    macro: {
        type: 'string'
    },
    textlink: {
        type: 'string'
    },
    fLocksText: {
        type: 'boolean',
        defaultValue: 'true'
    },
    fPublished: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_ConnectorNonVisual_Attributes = {
    cNvPr: {
        type: 'child',
        childAttributes: CT_NonVisualDrawingProps_Attributes
    },
    cNvCxnSpPr: {
        type: 'child',
        childAttributes: CT_NonVisualConnectorProperties_Attributes
    }
};
var CT_Connector_Attributes = {
    nvCxnSpPr: {
        type: 'child',
        childAttributes: CT_ConnectorNonVisual_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    style: {
        type: 'child',
        childAttributes: CT_ShapeStyle_Attributes
    },
    macro: {
        type: 'string'
    },
    fPublished: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_PictureNonVisual_Attributes = {
    cNvPr: {
        type: 'child',
        childAttributes: CT_NonVisualDrawingProps_Attributes
    },
    cNvPicPr: {
        type: 'child',
        childAttributes: CT_NonVisualPictureProperties_Attributes
    }
};
var CT_Picture_Attributes = {
    nvPicPr: {
        type: 'child',
        childAttributes: CT_PictureNonVisual_Attributes
    },
    blipFill: {
        type: 'child',
        childAttributes: CT_BlipFillProperties_Attributes
    },
    spPr: {
        type: 'child',
        childAttributes: CT_ShapeProperties_Attributes
    },
    style: {
        type: 'child',
        childAttributes: CT_ShapeStyle_Attributes
    },
    macro: {
        type: 'string'
    },
    fPublished: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_GraphicalObjectFrameNonVisual_Attributes = {
    cNvPr: {
        type: 'child',
        childAttributes: CT_NonVisualDrawingProps_Attributes
    },
    cNvGraphicFramePr: {
        type: 'child',
        childAttributes: CT_NonVisualGraphicFrameProperties_Attributes
    }
};
var CT_GraphicalObjectFrame_Attributes = {
    nvGraphicFramePr: {
        type: 'child',
        childAttributes: CT_GraphicalObjectFrameNonVisual_Attributes
    },
    xfrm: {
        type: 'child',
        childAttributes: CT_Transform2D_Attributes
    },
    macro: {
        type: 'string'
    },
    fPublished: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_GroupShape_Attributes = {};
var CT_Rel_Attributes = {
    'r:id': {
        type: 'string'
    }
};
var CT_Marker_Attributes = {
    col: {
        type: 'child-int',
        childIsArray: true
    },
    colOff: {
        type: 'child-string',
        childIsArray: true
    },
    row: {
        type: 'child-int',
        childIsArray: true
    },
    rowOff: {
        type: 'child-string',
        childIsArray: true
    }
};
var CT_TwoCellAnchor_Attributes = {
    from: {
        type: 'child',
        childAttributes: CT_Marker_Attributes,
        childIsArray: true
    },
    to: {
        type: 'child',
        childAttributes: CT_Marker_Attributes,
        childIsArray: true
    },
    sp: {
        type: 'child',
        childAttributes: CT_Shape_Attributes,
        childIsArray: true
    },
    grpSp: {
        type: 'child',
        childAttributes: CT_GroupShape_Attributes,
        childIsArray: true
    },
    graphicFrame: {
        type: 'child',
        childAttributes: CT_GraphicalObjectFrame_Attributes,
        childIsArray: true
    },
    cxnSp: {
        type: 'child',
        childAttributes: CT_Connector_Attributes,
        childIsArray: true
    },
    pic: {
        type: 'child',
        childAttributes: CT_Picture_Attributes,
        childIsArray: true
    },
    contentPart: {
        type: 'child',
        childAttributes: CT_Rel_Attributes,
        childIsArray: true
    },
    clientData: {
        type: 'child',
        childAttributes: CT_AnchorClientData_Attributes
    },
    editAs: {
        type: 'string',
        defaultValue: 'twoCell'
    }
};
var CT_OneCellAnchor_Attributes = {
    from: {
        type: 'child',
        childAttributes: CT_Marker_Attributes,
        childIsArray: true
    },
    ext: {
        type: 'child',
        childAttributes: CT_PositiveSize2D_Attributes,
        childIsArray: true
    },
    sp: {
        type: 'child',
        childAttributes: CT_Shape_Attributes,
        childIsArray: true
    },
    grpSp: {
        type: 'child',
        childAttributes: CT_GroupShape_Attributes,
        childIsArray: true
    },
    graphicFrame: {
        type: 'child',
        childAttributes: CT_GraphicalObjectFrame_Attributes,
        childIsArray: true
    },
    cxnSp: {
        type: 'child',
        childAttributes: CT_Connector_Attributes,
        childIsArray: true
    },
    pic: {
        type: 'child',
        childAttributes: CT_Picture_Attributes,
        childIsArray: true
    },
    contentPart: {
        type: 'child',
        childAttributes: CT_Rel_Attributes,
        childIsArray: true
    },
    clientData: {
        type: 'child',
        childAttributes: CT_AnchorClientData_Attributes
    }
};
var CT_AbsoluteAnchor_Attributes = {
    pos: {
        type: 'child',
        childAttributes: CT_Point2D_Attributes,
        childIsArray: true
    },
    ext: {
        type: 'child',
        childAttributes: CT_PositiveSize2D_Attributes,
        childIsArray: true
    },
    sp: {
        type: 'child',
        childAttributes: CT_Shape_Attributes,
        childIsArray: true
    },
    grpSp: {
        type: 'child',
        childAttributes: CT_GroupShape_Attributes,
        childIsArray: true
    },
    graphicFrame: {
        type: 'child',
        childAttributes: CT_GraphicalObjectFrame_Attributes,
        childIsArray: true
    },
    cxnSp: {
        type: 'child',
        childAttributes: CT_Connector_Attributes,
        childIsArray: true
    },
    pic: {
        type: 'child',
        childAttributes: CT_Picture_Attributes,
        childIsArray: true
    },
    contentPart: {
        type: 'child',
        childAttributes: CT_Rel_Attributes,
        childIsArray: true
    },
    clientData: {
        type: 'child',
        childAttributes: CT_AnchorClientData_Attributes
    }
};
var CT_Filter_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_DateGroupItem_Attributes = {
    year: {
        type: 'int'
    },
    month: {
        type: 'int'
    },
    day: {
        type: 'int'
    },
    hour: {
        type: 'int'
    },
    minute: {
        type: 'int'
    },
    second: {
        type: 'int'
    },
    dateTimeGrouping: {
        type: 'string'
    }
};
var CT_Filters_Attributes = {
    filter: {
        type: 'child',
        childAttributes: CT_Filter_Attributes,
        childIsArray: true
    },
    dateGroupItem: {
        type: 'child',
        childAttributes: CT_DateGroupItem_Attributes,
        childIsArray: true
    },
    blank: {
        type: 'boolean',
        defaultValue: 'false'
    },
    calendarType: {
        type: 'string',
        defaultValue: 'none'
    }
};
var CT_Top10_Attributes = {
    top: {
        type: 'boolean',
        defaultValue: 'true'
    },
    percent: {
        type: 'boolean',
        defaultValue: 'false'
    },
    val: {
        type: 'double'
    },
    filterVal: {
        type: 'double'
    }
};
var CT_CustomFilter_Attributes = {
    operator: {
        type: 'string',
        defaultValue: 'equal'
    },
    val: {
        type: 'string'
    }
};
var CT_CustomFilters_Attributes = {
    customFilter: {
        type: 'child',
        childAttributes: CT_CustomFilter_Attributes,
        childIsArray: true
    },
    and: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_DynamicFilter_Attributes = {
    type: {
        type: 'string'
    },
    val: {
        type: 'double'
    },
    valIso: {
        type: 'string'
    },
    maxValIso: {
        type: 'string'
    }
};
var CT_ColorFilter_Attributes = {
    dxfId: {
        type: 'int'
    },
    cellColor: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_IconFilter_Attributes = {
    iconSet: {
        type: 'string'
    },
    iconId: {
        type: 'int'
    }
};
var CT_FilterColumn_Attributes = {
    filters: {
        type: 'child',
        childAttributes: CT_Filters_Attributes
    },
    top10: {
        type: 'child',
        childAttributes: CT_Top10_Attributes
    },
    customFilters: {
        type: 'child',
        childAttributes: CT_CustomFilters_Attributes
    },
    dynamicFilter: {
        type: 'child',
        childAttributes: CT_DynamicFilter_Attributes
    },
    colorFilter: {
        type: 'child',
        childAttributes: CT_ColorFilter_Attributes
    },
    iconFilter: {
        type: 'child',
        childAttributes: CT_IconFilter_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes
    },
    colId: {
        type: 'int'
    },
    hiddenButton: {
        type: 'boolean',
        defaultValue: 'false'
    },
    showButton: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_SortCondition_Attributes = {
    descending: {
        type: 'boolean',
        defaultValue: 'false'
    },
    sortBy: {
        type: 'string',
        defaultValue: 'value'
    },
    ref: {
        type: 'string'
    },
    customList: {
        type: 'string'
    },
    dxfId: {
        type: 'int'
    },
    iconSet: {
        type: 'string',
        defaultValue: '3Arrows'
    },
    iconId: {
        type: 'int'
    }
};
var CT_SortState_Attributes = {
    sortCondition: {
        type: 'child',
        childAttributes: CT_SortCondition_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes
    },
    columnSort: {
        type: 'boolean',
        defaultValue: 'false'
    },
    caseSensitive: {
        type: 'boolean',
        defaultValue: 'false'
    },
    sortMethod: {
        type: 'string',
        defaultValue: 'none'
    },
    ref: {
        type: 'string'
    }
};
var CT_AutoFilter_Attributes = {
    filterColumn: {
        type: 'child',
        childAttributes: CT_FilterColumn_Attributes,
        childIsArray: true
    },
    sortState: {
        type: 'child',
        childAttributes: CT_SortState_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes
    },
    ref: {
        type: 'string'
    }
};
var CT_FontName_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_IntProperty_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_BooleanProperty_Attributes = {
    val: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_FontSize_Attributes = {
    val: {
        type: 'double'
    }
};
var CT_UnderlineProperty_Attributes = {
    val: {
        type: 'string',
        defaultValue: 'single'
    }
};
var CT_VerticalAlignFontProperty_Attributes = {
    val: {
        type: 'string'
    }
};
var CT_RPrElt_Attributes = {
    rFont: {
        type: 'child',
        childAttributes: CT_FontName_Attributes
    },
    charset: {
        type: 'child',
        childAttributes: CT_IntProperty_Attributes
    },
    family: {
        type: 'child',
        childAttributes: CT_IntProperty_Attributes
    },
    b: {
        type: 'child',
        childAttributes: CT_BooleanProperty_Attributes
    },
    i: {
        type: 'child',
        childAttributes: CT_BooleanProperty_Attributes
    },
    strike: {
        type: 'child',
        childAttributes: CT_BooleanProperty_Attributes
    },
    outline: {
        type: 'child',
        childAttributes: CT_BooleanProperty_Attributes
    },
    shadow: {
        type: 'child',
        childAttributes: CT_BooleanProperty_Attributes
    },
    condense: {
        type: 'child',
        childAttributes: CT_BooleanProperty_Attributes
    },
    extend: {
        type: 'child',
        childAttributes: CT_BooleanProperty_Attributes
    },
    color: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    sz: {
        type: 'child',
        childAttributes: CT_FontSize_Attributes
    },
    u: {
        type: 'child',
        childAttributes: CT_UnderlineProperty_Attributes
    },
    vertAlign: {
        type: 'child',
        childAttributes: CT_VerticalAlignFontProperty_Attributes
    },
    scheme: {
        type: 'child',
        childAttributes: CT_FontScheme_Attributes
    }
};
var CT_RElt_Attributes = {
    rPr: {
        type: 'child',
        childAttributes: CT_RPrElt_Attributes
    },
    t: {
        type: 'child-string'
    }
};
var CT_PhoneticRun_Attributes = {
    t: {
        type: 'child-string'
    },
    sb: {
        type: 'int'
    },
    eb: {
        type: 'int'
    }
};
var CT_PhoneticPr_Attributes = {
    fontId: {
        type: 'int'
    },
    type: {
        type: 'string',
        defaultValue: 'fullwidthKatakana'
    },
    alignment: {
        type: 'string',
        defaultValue: 'left'
    }
};
var CT_Rst_Attributes = {
    t: {
        type: 'child-string'
    },
    r: {
        type: 'child',
        childAttributes: CT_RElt_Attributes,
        childIsArray: true
    },
    rPh: {
        type: 'child',
        childAttributes: CT_PhoneticRun_Attributes,
        childIsArray: true
    },
    phoneticPr: {
        type: 'child',
        childAttributes: CT_PhoneticPr_Attributes
    }
};
var CT_PivotAreaReference_Attributes = {
    x: {
        type: 'child',
        childAttributes: CT_Index_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes,
        childIsArray: true
    },
    field: {
        type: 'int'
    },
    count: {
        type: 'int'
    },
    selected: {
        type: 'boolean',
        defaultValue: 'true'
    },
    byPosition: {
        type: 'boolean',
        defaultValue: 'false'
    },
    relative: {
        type: 'boolean',
        defaultValue: 'false'
    },
    defaultSubtotal: {
        type: 'boolean',
        defaultValue: 'false'
    },
    sumSubtotal: {
        type: 'boolean',
        defaultValue: 'false'
    },
    countASubtotal: {
        type: 'boolean',
        defaultValue: 'false'
    },
    avgSubtotal: {
        type: 'boolean',
        defaultValue: 'false'
    },
    maxSubtotal: {
        type: 'boolean',
        defaultValue: 'false'
    },
    minSubtotal: {
        type: 'boolean',
        defaultValue: 'false'
    },
    productSubtotal: {
        type: 'boolean',
        defaultValue: 'false'
    },
    countSubtotal: {
        type: 'boolean',
        defaultValue: 'false'
    },
    stdDevSubtotal: {
        type: 'boolean',
        defaultValue: 'false'
    },
    stdDevPSubtotal: {
        type: 'boolean',
        defaultValue: 'false'
    },
    varSubtotal: {
        type: 'boolean',
        defaultValue: 'false'
    },
    varPSubtotal: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_PivotAreaReferences_Attributes = {
    reference: {
        type: 'child',
        childAttributes: CT_PivotAreaReference_Attributes,
        childIsArray: true
    },
    count: {
        type: 'int'
    }
};
var CT_PivotArea_Attributes = {
    references: {
        type: 'child',
        childAttributes: CT_PivotAreaReferences_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes,
        childIsArray: true
    },
    field: {
        type: 'int'
    },
    type: {
        type: 'string',
        defaultValue: 'normal'
    },
    dataOnly: {
        type: 'boolean',
        defaultValue: 'true'
    },
    labelOnly: {
        type: 'boolean',
        defaultValue: 'false'
    },
    grandRow: {
        type: 'boolean',
        defaultValue: 'false'
    },
    grandCol: {
        type: 'boolean',
        defaultValue: 'false'
    },
    cacheIndex: {
        type: 'boolean',
        defaultValue: 'false'
    },
    outline: {
        type: 'boolean',
        defaultValue: 'true'
    },
    offset: {
        type: 'string'
    },
    collapsedLevelsAreSubtotals: {
        type: 'boolean',
        defaultValue: 'false'
    },
    axis: {
        type: 'string'
    },
    fieldPosition: {
        type: 'int'
    }
};
var CT_CellFormula_Attributes = {};
var CT_Cell_Attributes = {
    f: {
        type: 'child',
        childAttributes: CT_CellFormula_Attributes
    },
    v: {
        type: 'child-string'
    },
    is: {
        type: 'child',
        childAttributes: CT_Rst_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes,
        childIsArray: true
    },
    r: {
        type: 'string'
    },
    s: {
        type: 'int',
        defaultValue: '0'
    },
    t: {
        type: 'string',
        defaultValue: 'n'
    },
    cm: {
        type: 'int',
        defaultValue: '0'
    },
    vm: {
        type: 'int',
        defaultValue: '0'
    },
    ph: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_FontFamily_Attributes = {
    val: {
        type: 'int'
    }
};
var CT_Font_Attributes = {
    name: {
        type: 'child',
        childAttributes: CT_FontName_Attributes
    },
    charset: {
        type: 'child',
        childAttributes: CT_IntProperty_Attributes
    },
    family: {
        type: 'child',
        childAttributes: CT_FontFamily_Attributes
    },
    b: {
        type: 'child',
        childAttributes: CT_BooleanProperty_Attributes
    },
    i: {
        type: 'child',
        childAttributes: CT_BooleanProperty_Attributes
    },
    strike: {
        type: 'child',
        childAttributes: CT_BooleanProperty_Attributes
    },
    outline: {
        type: 'child',
        childAttributes: CT_BooleanProperty_Attributes
    },
    shadow: {
        type: 'child',
        childAttributes: CT_BooleanProperty_Attributes
    },
    condense: {
        type: 'child',
        childAttributes: CT_BooleanProperty_Attributes
    },
    extend: {
        type: 'child',
        childAttributes: CT_BooleanProperty_Attributes
    },
    color: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    sz: {
        type: 'child',
        childAttributes: CT_FontSize_Attributes
    },
    u: {
        type: 'child',
        childAttributes: CT_UnderlineProperty_Attributes
    },
    vertAlign: {
        type: 'child',
        childAttributes: CT_VerticalAlignFontProperty_Attributes
    },
    scheme: {
        type: 'child',
        childAttributes: CT_FontScheme_Attributes
    }
};
var CT_NumFmt_Attributes = {
    numFmtId: {
        type: 'int'
    },
    formatCode: {
        type: 'string'
    }
};
var CT_PatternFill_Attributes = {
    fgColor: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    bgColor: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    patternType: {
        type: 'string'
    }
};
var CT_GradientFill_Attributes = {
    stop: {
        type: 'child',
        childAttributes: CT_GradientStop_Attributes,
        childIsArray: true
    },
    type: {
        type: 'string',
        defaultValue: 'linear'
    },
    degree: {
        type: 'double',
        defaultValue: '0'
    },
    left: {
        type: 'double',
        defaultValue: '0'
    },
    right: {
        type: 'double',
        defaultValue: '0'
    },
    top: {
        type: 'double',
        defaultValue: '0'
    },
    bottom: {
        type: 'double',
        defaultValue: '0'
    }
};
var CT_Fill_Attributes = {
    patternFill: {
        type: 'child',
        childAttributes: CT_PatternFill_Attributes
    },
    gradientFill: {
        type: 'child',
        childAttributes: CT_GradientFill_Attributes
    }
};
var CT_CellAlignment_Attributes = {
    horizontal: {
        type: 'string'
    },
    vertical: {
        type: 'string',
        defaultValue: 'bottom'
    },
    textRotation: {
        type: 'int'
    },
    wrapText: {
        type: 'boolean'
    },
    indent: {
        type: 'int'
    },
    relativeIndent: {
        type: 'int'
    },
    justifyLastLine: {
        type: 'boolean'
    },
    shrinkToFit: {
        type: 'boolean'
    },
    readingOrder: {
        type: 'int'
    }
};
var CT_BorderPr_Attributes = {
    color: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    style: {
        type: 'string',
        defaultValue: 'none'
    }
};
var CT_Border_Attributes = {
    start: {
        type: 'child',
        childAttributes: CT_BorderPr_Attributes
    },
    end: {
        type: 'child',
        childAttributes: CT_BorderPr_Attributes
    },
    left: {
        type: 'child',
        childAttributes: CT_BorderPr_Attributes
    },
    right: {
        type: 'child',
        childAttributes: CT_BorderPr_Attributes
    },
    top: {
        type: 'child',
        childAttributes: CT_BorderPr_Attributes
    },
    bottom: {
        type: 'child',
        childAttributes: CT_BorderPr_Attributes
    },
    diagonal: {
        type: 'child',
        childAttributes: CT_BorderPr_Attributes
    },
    vertical: {
        type: 'child',
        childAttributes: CT_BorderPr_Attributes
    },
    horizontal: {
        type: 'child',
        childAttributes: CT_BorderPr_Attributes
    },
    diagonalUp: {
        type: 'boolean'
    },
    diagonalDown: {
        type: 'boolean'
    },
    outline: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_CellProtection_Attributes = {
    locked: {
        type: 'boolean'
    },
    hidden: {
        type: 'boolean'
    }
};
var CT_Dxf_Attributes = {
    font: {
        type: 'child',
        childAttributes: CT_Font_Attributes
    },
    numFmt: {
        type: 'child',
        childAttributes: CT_NumFmt_Attributes
    },
    fill: {
        type: 'child',
        childAttributes: CT_Fill_Attributes
    },
    alignment: {
        type: 'child',
        childAttributes: CT_CellAlignment_Attributes
    },
    border: {
        type: 'child',
        childAttributes: CT_Border_Attributes
    },
    protection: {
        type: 'child',
        childAttributes: CT_CellProtection_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes
    }
};
var CT_OutlinePr_Attributes = {
    applyStyles: {
        type: 'boolean',
        defaultValue: 'false'
    },
    summaryBelow: {
        type: 'boolean',
        defaultValue: 'true'
    },
    summaryRight: {
        type: 'boolean',
        defaultValue: 'true'
    },
    showOutlineSymbols: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_PageSetUpPr_Attributes = {
    autoPageBreaks: {
        type: 'boolean',
        defaultValue: 'true'
    },
    fitToPage: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_SheetPr_Attributes = {
    tabColor: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    outlinePr: {
        type: 'child',
        childAttributes: CT_OutlinePr_Attributes
    },
    pageSetUpPr: {
        type: 'child',
        childAttributes: CT_PageSetUpPr_Attributes
    },
    syncHorizontal: {
        type: 'boolean',
        defaultValue: 'false'
    },
    syncVertical: {
        type: 'boolean',
        defaultValue: 'false'
    },
    syncRef: {
        type: 'string'
    },
    transitionEvaluation: {
        type: 'boolean',
        defaultValue: 'false'
    },
    transitionEntry: {
        type: 'boolean',
        defaultValue: 'false'
    },
    published: {
        type: 'boolean',
        defaultValue: 'true'
    },
    codeName: {
        type: 'string'
    },
    filterMode: {
        type: 'boolean',
        defaultValue: 'false'
    },
    enableFormatConditionsCalculation: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_Pane_Attributes = {
    xSplit: {
        type: 'double',
        defaultValue: '0'
    },
    ySplit: {
        type: 'double',
        defaultValue: '0'
    },
    topLeftCell: {
        type: 'string'
    },
    activePane: {
        type: 'string',
        defaultValue: 'topLeft'
    },
    state: {
        type: 'string',
        defaultValue: 'split'
    }
};
var CT_Selection_Attributes = {
    pane: {
        type: 'string',
        defaultValue: 'topLeft'
    },
    activeCell: {
        type: 'string'
    },
    activeCellId: {
        type: 'int',
        defaultValue: '0'
    },
    sqref: {
        type: 'string',
        defaultValue: 'A1'
    }
};
var CT_PivotSelection_Attributes = {
    'pivotArea': {
        type: 'child',
        childAttributes: CT_PivotArea_Attributes,
        childIsArray: true
    },
    'pane': {
        type: 'string',
        defaultValue: 'topLeft'
    },
    'showHeader': {
        type: 'boolean',
        defaultValue: 'false'
    },
    'label': {
        type: 'boolean',
        defaultValue: 'false'
    },
    'data': {
        type: 'boolean',
        defaultValue: 'false'
    },
    'extendable': {
        type: 'boolean',
        defaultValue: 'false'
    },
    'count': {
        type: 'int',
        defaultValue: '0'
    },
    'axis': {
        type: 'string'
    },
    'dimension': {
        type: 'int',
        defaultValue: '0'
    },
    'start': {
        type: 'int',
        defaultValue: '0'
    },
    'min': {
        type: 'int',
        defaultValue: '0'
    },
    'max': {
        type: 'int',
        defaultValue: '0'
    },
    'activeRow': {
        type: 'int',
        defaultValue: '0'
    },
    'activeCol': {
        type: 'int',
        defaultValue: '0'
    },
    'previousRow': {
        type: 'int',
        defaultValue: '0'
    },
    'previousCol': {
        type: 'int',
        defaultValue: '0'
    },
    'click': {
        type: 'int',
        defaultValue: '0'
    },
    'r:id': {
        type: 'string'
    }
};
var CT_SheetView_Attributes = {
    pane: {
        type: 'child',
        childAttributes: CT_Pane_Attributes
    },
    selection: {
        type: 'child',
        childAttributes: CT_Selection_Attributes,
        childIsArray: true
    },
    pivotSelection: {
        type: 'child',
        childAttributes: CT_PivotSelection_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes
    },
    windowProtection: {
        type: 'boolean',
        defaultValue: 'false'
    },
    showFormulas: {
        type: 'boolean',
        defaultValue: 'false'
    },
    showGridLines: {
        type: 'boolean',
        defaultValue: 'true'
    },
    showRowColHeaders: {
        type: 'boolean',
        defaultValue: 'true'
    },
    showZeros: {
        type: 'boolean',
        defaultValue: 'true'
    },
    rightToLeft: {
        type: 'boolean',
        defaultValue: 'false'
    },
    tabSelected: {
        type: 'boolean',
        defaultValue: 'false'
    },
    showRuler: {
        type: 'boolean',
        defaultValue: 'true'
    },
    showOutlineSymbols: {
        type: 'boolean',
        defaultValue: 'true'
    },
    defaultGridColor: {
        type: 'boolean',
        defaultValue: 'true'
    },
    showWhiteSpace: {
        type: 'boolean',
        defaultValue: 'true'
    },
    view: {
        type: 'string',
        defaultValue: 'normal'
    },
    topLeftCell: {
        type: 'string'
    },
    colorId: {
        type: 'int',
        defaultValue: '64'
    },
    zoomScale: {
        type: 'int',
        defaultValue: '100'
    },
    zoomScaleNormal: {
        type: 'int',
        defaultValue: '0'
    },
    zoomScaleSheetLayoutView: {
        type: 'int',
        defaultValue: '0'
    },
    zoomScalePageLayoutView: {
        type: 'int',
        defaultValue: '0'
    },
    workbookViewId: {
        type: 'int'
    }
};
var CT_SheetFormatPr_Attributes = {
    baseColWidth: {
        type: 'int',
        defaultValue: '8'
    },
    defaultColWidth: {
        type: 'double'
    },
    defaultRowHeight: {
        type: 'double'
    },
    customHeight: {
        type: 'boolean',
        defaultValue: 'false'
    },
    zeroHeight: {
        type: 'boolean',
        defaultValue: 'false'
    },
    thickTop: {
        type: 'boolean',
        defaultValue: 'false'
    },
    thickBottom: {
        type: 'boolean',
        defaultValue: 'false'
    },
    outlineLevelRow: {
        type: 'int',
        defaultValue: '0'
    },
    outlineLevelCol: {
        type: 'int',
        defaultValue: '0'
    }
};
var CT_Col_Attributes = {
    min: {
        type: 'int'
    },
    max: {
        type: 'int'
    },
    width: {
        type: 'double'
    },
    style: {
        type: 'int',
        defaultValue: '0'
    },
    hidden: {
        type: 'boolean',
        defaultValue: 'false'
    },
    bestFit: {
        type: 'boolean',
        defaultValue: 'false'
    },
    customWidth: {
        type: 'boolean',
        defaultValue: 'false'
    },
    phonetic: {
        type: 'boolean',
        defaultValue: 'false'
    },
    outlineLevel: {
        type: 'int',
        defaultValue: '0'
    },
    collapsed: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_Row_Attributes = {
    c: {
        type: 'child',
        childAttributes: CT_Cell_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes,
        childIsArray: true
    },
    r: {
        type: 'int'
    },
    spans: {
        type: 'string',
        childIsArray: true
    },
    s: {
        type: 'int',
        defaultValue: '0'
    },
    customFormat: {
        type: 'boolean',
        defaultValue: 'false'
    },
    ht: {
        type: 'double'
    },
    hidden: {
        type: 'boolean',
        defaultValue: 'false'
    },
    customHeight: {
        type: 'boolean',
        defaultValue: 'false'
    },
    outlineLevel: {
        type: 'int',
        defaultValue: '0'
    },
    collapsed: {
        type: 'boolean',
        defaultValue: 'false'
    },
    thickTop: {
        type: 'boolean',
        defaultValue: 'false'
    },
    thickBot: {
        type: 'boolean',
        defaultValue: 'false'
    },
    ph: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_Cfvo_Attributes = {
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes
    },
    type: {
        type: 'string'
    },
    val: {
        type: 'string'
    },
    gte: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_ColorScale_Attributes = {
    cfvo: {
        type: 'child',
        childAttributes: CT_Cfvo_Attributes,
        childIsArray: true
    },
    color: {
        type: 'child',
        childAttributes: CT_Color_Attributes,
        childIsArray: true
    }
};
var CT_DataBar_Attributes = {
    cfvo: {
        type: 'child',
        childAttributes: CT_Cfvo_Attributes,
        childIsArray: true
    },
    color: {
        type: 'child',
        childAttributes: CT_Color_Attributes
    },
    minLength: {
        type: 'int',
        defaultValue: '10'
    },
    maxLength: {
        type: 'int',
        defaultValue: '90'
    },
    showValue: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_IconSet_Attributes = {
    cfvo: {
        type: 'child',
        childAttributes: CT_Cfvo_Attributes,
        childIsArray: true
    },
    iconSet: {
        type: 'string',
        defaultValue: '3TrafficLights1'
    },
    showValue: {
        type: 'boolean',
        defaultValue: 'true'
    },
    percent: {
        type: 'boolean',
        defaultValue: 'true'
    },
    reverse: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_CfRule_Attributes = {
    formula: {
        type: 'child-string',
        childIsArray: true
    },
    colorScale: {
        type: 'child',
        childAttributes: CT_ColorScale_Attributes
    },
    dataBar: {
        type: 'child',
        childAttributes: CT_DataBar_Attributes
    },
    iconSet: {
        type: 'child',
        childAttributes: CT_IconSet_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes,
        childIsArray: true
    },
    type: {
        type: 'string'
    },
    dxfId: {
        type: 'int'
    },
    priority: {
        type: 'int'
    },
    stopIfTrue: {
        type: 'boolean',
        defaultValue: 'false'
    },
    aboveAverage: {
        type: 'boolean',
        defaultValue: 'true'
    },
    percent: {
        type: 'boolean',
        defaultValue: 'false'
    },
    bottom: {
        type: 'boolean',
        defaultValue: 'false'
    },
    operator: {
        type: 'string'
    },
    text: {
        type: 'string'
    },
    timePeriod: {
        type: 'string'
    },
    rank: {
        type: 'int'
    },
    stdDev: {
        type: 'int'
    },
    equalAverage: {
        type: 'boolean',
        defaultValue: 'false'
    }
};
var CT_ConditionalFormatting_Attributes = {
    cfRule: {
        type: 'child',
        childAttributes: CT_CfRule_Attributes,
        childIsArray: true
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes,
        childIsArray: true
    },
    pivot: {
        type: 'boolean',
        defaultValue: 'false'
    },
    sqref: {
        type: 'string'
    }
};
var CT_NumFmts_Attributes = {
    numFmt: {
        type: 'child',
        childAttributes: CT_NumFmt_Attributes,
        childIsArray: true
    },
    count: {
        type: 'int'
    }
};
var CT_Fonts_Attributes = {
    font: {
        type: 'child',
        childAttributes: CT_Font_Attributes,
        childIsArray: true
    },
    count: {
        type: 'int'
    }
};
var CT_Fills_Attributes = {
    fill: {
        type: 'child',
        childAttributes: CT_Fill_Attributes,
        childIsArray: true
    },
    count: {
        type: 'int'
    }
};
var CT_Borders_Attributes = {
    border: {
        type: 'child',
        childAttributes: CT_Border_Attributes,
        childIsArray: true
    },
    count: {
        type: 'int'
    }
};
var CT_Xf_Attributes = {
    alignment: {
        type: 'child',
        childAttributes: CT_CellAlignment_Attributes
    },
    protection: {
        type: 'child',
        childAttributes: CT_CellProtection_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes
    },
    numFmtId: {
        type: 'int'
    },
    fontId: {
        type: 'int'
    },
    fillId: {
        type: 'int'
    },
    borderId: {
        type: 'int'
    },
    xfId: {
        type: 'int'
    },
    quotePrefix: {
        type: 'boolean',
        defaultValue: 'false'
    },
    pivotButton: {
        type: 'boolean',
        defaultValue: 'false'
    },
    applyNumberFormat: {
        type: 'boolean'
    },
    applyFont: {
        type: 'boolean'
    },
    applyFill: {
        type: 'boolean'
    },
    applyBorder: {
        type: 'boolean'
    },
    applyAlignment: {
        type: 'boolean'
    },
    applyProtection: {
        type: 'boolean'
    }
};
var CT_CellStyleXfs_Attributes = {
    xf: {
        type: 'child',
        childAttributes: CT_Xf_Attributes,
        childIsArray: true
    },
    count: {
        type: 'int'
    }
};
var CT_CellXfs_Attributes = {
    xf: {
        type: 'child',
        childAttributes: CT_Xf_Attributes,
        childIsArray: true
    },
    count: {
        type: 'int'
    }
};
var CT_CellStyle_Attributes = {
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes
    },
    name: {
        type: 'string'
    },
    xfId: {
        type: 'int'
    },
    builtinId: {
        type: 'int'
    },
    iLevel: {
        type: 'int'
    },
    hidden: {
        type: 'boolean'
    },
    customBuiltin: {
        type: 'boolean'
    }
};
var CT_CellStyles_Attributes = {
    cellStyle: {
        type: 'child',
        childAttributes: CT_CellStyle_Attributes,
        childIsArray: true
    },
    count: {
        type: 'int'
    }
};
var CT_Dxfs_Attributes = {
    dxf: {
        type: 'child',
        childAttributes: CT_Dxf_Attributes,
        childIsArray: true
    },
    count: {
        type: 'int'
    }
};
var CT_TableStyles_Attributes = {
    tableStyle: {
        type: 'child',
        childAttributes: CT_TableStyle_Attributes,
        childIsArray: true
    },
    count: {
        type: 'int'
    },
    defaultTableStyle: {
        type: 'string'
    },
    defaultPivotStyle: {
        type: 'string'
    }
};
var CT_RgbColor_Attributes = {
    rgb: {
        type: 'string'
    }
};
var CT_IndexedColors_Attributes = {
    rgbColor: {
        type: 'child',
        childAttributes: CT_RgbColor_Attributes,
        childIsArray: true
    }
};
var CT_MRUColors_Attributes = {
    color: {
        type: 'child',
        childAttributes: CT_Color_Attributes,
        childIsArray: true
    }
};
var CT_Colors_Attributes = {
    indexedColors: {
        type: 'child',
        childAttributes: CT_IndexedColors_Attributes
    },
    mruColors: {
        type: 'child',
        childAttributes: CT_MRUColors_Attributes
    }
};
var CT_Stylesheet_Attributes = {
    numFmts: {
        type: 'child',
        childAttributes: CT_NumFmts_Attributes
    },
    fonts: {
        type: 'child',
        childAttributes: CT_Fonts_Attributes
    },
    fills: {
        type: 'child',
        childAttributes: CT_Fills_Attributes
    },
    borders: {
        type: 'child',
        childAttributes: CT_Borders_Attributes
    },
    cellStyleXfs: {
        type: 'child',
        childAttributes: CT_CellStyleXfs_Attributes
    },
    cellXfs: {
        type: 'child',
        childAttributes: CT_CellXfs_Attributes
    },
    cellStyles: {
        type: 'child',
        childAttributes: CT_CellStyles_Attributes
    },
    dxfs: {
        type: 'child',
        childAttributes: CT_Dxfs_Attributes
    },
    tableStyles: {
        type: 'child',
        childAttributes: CT_TableStyles_Attributes
    },
    colors: {
        type: 'child',
        childAttributes: CT_Colors_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes
    }
};
var CT_TableFormula_Attributes = {};
var CT_XmlColumnPr_Attributes = {
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes
    },
    mapId: {
        type: 'int'
    },
    xpath: {
        type: 'string'
    },
    denormalized: {
        type: 'boolean',
        defaultValue: 'false'
    },
    xmlDataType: {
        type: 'string'
    }
};
var CT_TableColumn_Attributes = {
    calculatedColumnFormula: {
        type: 'child',
        childAttributes: CT_TableFormula_Attributes
    },
    totalsRowFormula: {
        type: 'child',
        childAttributes: CT_TableFormula_Attributes
    },
    xmlColumnPr: {
        type: 'child',
        childAttributes: CT_XmlColumnPr_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes
    },
    id: {
        type: 'int'
    },
    uniqueName: {
        type: 'string'
    },
    name: {
        type: 'string'
    },
    totalsRowFunction: {
        type: 'string',
        defaultValue: 'none'
    },
    totalsRowLabel: {
        type: 'string'
    },
    queryTableFieldId: {
        type: 'int'
    },
    headerRowDxfId: {
        type: 'int'
    },
    dataDxfId: {
        type: 'int'
    },
    totalsRowDxfId: {
        type: 'int'
    },
    headerRowCellStyle: {
        type: 'string'
    },
    dataCellStyle: {
        type: 'string'
    },
    totalsRowCellStyle: {
        type: 'string'
    }
};
var CT_TableColumns_Attributes = {
    tableColumn: {
        type: 'child',
        childAttributes: CT_TableColumn_Attributes,
        childIsArray: true
    },
    count: {
        type: 'int'
    }
};
var CT_TableStyleInfo_Attributes = {
    name: {
        type: 'string'
    },
    showFirstColumn: {
        type: 'boolean'
    },
    showLastColumn: {
        type: 'boolean'
    },
    showRowStripes: {
        type: 'boolean'
    },
    showColumnStripes: {
        type: 'boolean'
    }
};
var CT_Table_Attributes = {
    autoFilter: {
        type: 'child',
        childAttributes: CT_AutoFilter_Attributes
    },
    sortState: {
        type: 'child',
        childAttributes: CT_SortState_Attributes
    },
    tableColumns: {
        type: 'child',
        childAttributes: CT_TableColumns_Attributes
    },
    tableStyleInfo: {
        type: 'child',
        childAttributes: CT_TableStyleInfo_Attributes
    },
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes
    },
    id: {
        type: 'int'
    },
    name: {
        type: 'string'
    },
    displayName: {
        type: 'string'
    },
    comment: {
        type: 'string'
    },
    ref: {
        type: 'string'
    },
    tableType: {
        type: 'string',
        defaultValue: 'worksheet'
    },
    headerRowCount: {
        type: 'int',
        defaultValue: '1'
    },
    insertRow: {
        type: 'boolean',
        defaultValue: 'false'
    },
    insertRowShift: {
        type: 'boolean',
        defaultValue: 'false'
    },
    totalsRowCount: {
        type: 'int',
        defaultValue: '0'
    },
    totalsRowShown: {
        type: 'boolean',
        defaultValue: 'true'
    },
    published: {
        type: 'boolean',
        defaultValue: 'false'
    },
    headerRowDxfId: {
        type: 'int'
    },
    dataDxfId: {
        type: 'int'
    },
    totalsRowDxfId: {
        type: 'int'
    },
    headerRowBorderDxfId: {
        type: 'int'
    },
    tableBorderDxfId: {
        type: 'int'
    },
    totalsRowBorderDxfId: {
        type: 'int'
    },
    headerRowCellStyle: {
        type: 'string'
    },
    dataCellStyle: {
        type: 'string'
    },
    totalsRowCellStyle: {
        type: 'string'
    },
    connectionId: {
        type: 'int'
    }
};
var CT_WorkbookPr_Attributes = {
    date1904: {
        type: 'boolean',
        defaultValue: 'false'
    },
    showObjects: {
        type: 'string',
        defaultValue: 'all'
    },
    showBorderUnselectedTables: {
        type: 'boolean',
        defaultValue: 'true'
    },
    filterPrivacy: {
        type: 'boolean',
        defaultValue: 'false'
    },
    promptedSolutions: {
        type: 'boolean',
        defaultValue: 'false'
    },
    showInkAnnotation: {
        type: 'boolean',
        defaultValue: 'true'
    },
    backupFile: {
        type: 'boolean',
        defaultValue: 'false'
    },
    saveExternalLinkValues: {
        type: 'boolean',
        defaultValue: 'true'
    },
    updateLinks: {
        type: 'string',
        defaultValue: 'userSet'
    },
    codeName: {
        type: 'string'
    },
    hidePivotFieldList: {
        type: 'boolean',
        defaultValue: 'false'
    },
    showPivotChartFilter: {
        type: 'boolean',
        defaultValue: 'false'
    },
    allowRefreshQuery: {
        type: 'boolean',
        defaultValue: 'false'
    },
    publishItems: {
        type: 'boolean',
        defaultValue: 'false'
    },
    checkCompatibility: {
        type: 'boolean',
        defaultValue: 'false'
    },
    autoCompressPictures: {
        type: 'boolean',
        defaultValue: 'true'
    },
    refreshAllConnections: {
        type: 'boolean',
        defaultValue: 'false'
    },
    defaultThemeVersion: {
        type: 'int'
    }
};
var CT_BookView_Attributes = {
    extLst: {
        type: 'child',
        childAttributes: CT_ExtensionList.CT_ExtensionList_Attributes
    },
    visibility: {
        type: 'string',
        defaultValue: 'visible'
    },
    minimized: {
        type: 'boolean',
        defaultValue: 'false'
    },
    showHorizontalScroll: {
        type: 'boolean',
        defaultValue: 'true'
    },
    showVerticalScroll: {
        type: 'boolean',
        defaultValue: 'true'
    },
    showSheetTabs: {
        type: 'boolean',
        defaultValue: 'true'
    },
    xWindow: {
        type: 'int'
    },
    yWindow: {
        type: 'int'
    },
    windowWidth: {
        type: 'int'
    },
    windowHeight: {
        type: 'int'
    },
    tabRatio: {
        type: 'int',
        defaultValue: '600'
    },
    firstSheet: {
        type: 'int',
        defaultValue: '0'
    },
    activeTab: {
        type: 'int',
        defaultValue: '0'
    },
    autoFilterDateGrouping: {
        type: 'boolean',
        defaultValue: 'true'
    }
};
var CT_DefinedName_Attributes = {};
var CT_CalcPr_Attributes = {
    calcId: {
        type: 'int'
    },
    calcMode: {
        type: 'string',
        defaultValue: 'auto'
    },
    fullCalcOnLoad: {
        type: 'boolean',
        defaultValue: 'false'
    },
    refMode: {
        type: 'string',
        defaultValue: 'A1'
    },
    iterate: {
        type: 'boolean',
        defaultValue: 'false'
    },
    iterateCount: {
        type: 'int',
        defaultValue: '100'
    },
    iterateDelta: {
        type: 'double',
        defaultValue: '0.001'
    },
    fullPrecision: {
        type: 'boolean',
        defaultValue: 'true'
    },
    calcCompleted: {
        type: 'boolean',
        defaultValue: 'true'
    },
    calcOnSave: {
        type: 'boolean',
        defaultValue: 'true'
    },
    concurrentCalc: {
        type: 'boolean',
        defaultValue: 'true'
    },
    concurrentManualCount: {
        type: 'int'
    },
    forceFullCalc: {
        type: 'boolean'
    }
};

exports.CT_AbsoluteAnchor_Attributes = CT_AbsoluteAnchor_Attributes;
exports.CT_AdjPoint2D_Attributes = CT_AdjPoint2D_Attributes;
exports.CT_AdjustHandleList_Attributes = CT_AdjustHandleList_Attributes;
exports.CT_AlphaBiLevelEffect_Attributes = CT_AlphaBiLevelEffect_Attributes;
exports.CT_AlphaCeilingEffect_Attributes = CT_AlphaCeilingEffect_Attributes;
exports.CT_AlphaFloorEffect_Attributes = CT_AlphaFloorEffect_Attributes;
exports.CT_AlphaInverseEffect_Attributes = CT_AlphaInverseEffect_Attributes;
exports.CT_AlphaModulateEffect_Attributes = CT_AlphaModulateEffect_Attributes;
exports.CT_AlphaModulateFixedEffect_Attributes = CT_AlphaModulateFixedEffect_Attributes;
exports.CT_AlphaReplaceEffect_Attributes = CT_AlphaReplaceEffect_Attributes;
exports.CT_AnchorClientData_Attributes = CT_AnchorClientData_Attributes;
exports.CT_Angle_Attributes = CT_Angle_Attributes;
exports.CT_AutoFilter_Attributes = CT_AutoFilter_Attributes;
exports.CT_Backdrop_Attributes = CT_Backdrop_Attributes;
exports.CT_Bevel_Attributes = CT_Bevel_Attributes;
exports.CT_BiLevelEffect_Attributes = CT_BiLevelEffect_Attributes;
exports.CT_BlipFillProperties_Attributes = CT_BlipFillProperties_Attributes;
exports.CT_Blip_Attributes = CT_Blip_Attributes;
exports.CT_BlurEffect_Attributes = CT_BlurEffect_Attributes;
exports.CT_BookView_Attributes = CT_BookView_Attributes;
exports.CT_BooleanProperty_Attributes = CT_BooleanProperty_Attributes;
exports.CT_Boolean_Attributes = CT_Boolean_Attributes;
exports.CT_BorderPr_Attributes = CT_BorderPr_Attributes;
exports.CT_Border_Attributes = CT_Border_Attributes;
exports.CT_Borders_Attributes = CT_Borders_Attributes;
exports.CT_CalcPr_Attributes = CT_CalcPr_Attributes;
exports.CT_Camera_Attributes = CT_Camera_Attributes;
exports.CT_CellAlignment_Attributes = CT_CellAlignment_Attributes;
exports.CT_CellFormula_Attributes = CT_CellFormula_Attributes;
exports.CT_CellProtection_Attributes = CT_CellProtection_Attributes;
exports.CT_CellStyleXfs_Attributes = CT_CellStyleXfs_Attributes;
exports.CT_CellStyle_Attributes = CT_CellStyle_Attributes;
exports.CT_CellStyles_Attributes = CT_CellStyles_Attributes;
exports.CT_CellXfs_Attributes = CT_CellXfs_Attributes;
exports.CT_Cell_Attributes = CT_Cell_Attributes;
exports.CT_CfRule_Attributes = CT_CfRule_Attributes;
exports.CT_Cfvo_Attributes = CT_Cfvo_Attributes;
exports.CT_Col_Attributes = CT_Col_Attributes;
exports.CT_ColorChangeEffect_Attributes = CT_ColorChangeEffect_Attributes;
exports.CT_ColorFilter_Attributes = CT_ColorFilter_Attributes;
exports.CT_ColorReplaceEffect_Attributes = CT_ColorReplaceEffect_Attributes;
exports.CT_ColorScale_Attributes = CT_ColorScale_Attributes;
exports.CT_Color_Attributes = CT_Color_Attributes;
exports.CT_Colors_Attributes = CT_Colors_Attributes;
exports.CT_ComplementTransform_Attributes = CT_ComplementTransform_Attributes;
exports.CT_ConditionalFormatting_Attributes = CT_ConditionalFormatting_Attributes;
exports.CT_ConnectionSiteList_Attributes = CT_ConnectionSiteList_Attributes;
exports.CT_ConnectionSite_Attributes = CT_ConnectionSite_Attributes;
exports.CT_Connection_Attributes = CT_Connection_Attributes;
exports.CT_ConnectorLocking_Attributes = CT_ConnectorLocking_Attributes;
exports.CT_ConnectorNonVisual_Attributes = CT_ConnectorNonVisual_Attributes;
exports.CT_Connector_Attributes = CT_Connector_Attributes;
exports.CT_CustomFilter_Attributes = CT_CustomFilter_Attributes;
exports.CT_CustomFilters_Attributes = CT_CustomFilters_Attributes;
exports.CT_CustomGeometry2D_Attributes = CT_CustomGeometry2D_Attributes;
exports.CT_DashStopList_Attributes = CT_DashStopList_Attributes;
exports.CT_DashStop_Attributes = CT_DashStop_Attributes;
exports.CT_DataBar_Attributes = CT_DataBar_Attributes;
exports.CT_DateGroupItem_Attributes = CT_DateGroupItem_Attributes;
exports.CT_DbPr_Attributes = CT_DbPr_Attributes;
exports.CT_DefinedName_Attributes = CT_DefinedName_Attributes;
exports.CT_DuotoneEffect_Attributes = CT_DuotoneEffect_Attributes;
exports.CT_Dxf_Attributes = CT_Dxf_Attributes;
exports.CT_Dxfs_Attributes = CT_Dxfs_Attributes;
exports.CT_DynamicFilter_Attributes = CT_DynamicFilter_Attributes;
exports.CT_EffectContainer_Attributes = CT_EffectContainer_Attributes;
exports.CT_EffectList_Attributes = CT_EffectList_Attributes;
exports.CT_FillOverlayEffect_Attributes = CT_FillOverlayEffect_Attributes;
exports.CT_Fill_Attributes = CT_Fill_Attributes;
exports.CT_Fills_Attributes = CT_Fills_Attributes;
exports.CT_FilterColumn_Attributes = CT_FilterColumn_Attributes;
exports.CT_Filter_Attributes = CT_Filter_Attributes;
exports.CT_Filters_Attributes = CT_Filters_Attributes;
exports.CT_FixedPercentage_Attributes = CT_FixedPercentage_Attributes;
exports.CT_FlatText_Attributes = CT_FlatText_Attributes;
exports.CT_FontFamily_Attributes = CT_FontFamily_Attributes;
exports.CT_FontName_Attributes = CT_FontName_Attributes;
exports.CT_FontReference_Attributes = CT_FontReference_Attributes;
exports.CT_FontScheme_Attributes = CT_FontScheme_Attributes;
exports.CT_FontSize_Attributes = CT_FontSize_Attributes;
exports.CT_Font_Attributes = CT_Font_Attributes;
exports.CT_Fonts_Attributes = CT_Fonts_Attributes;
exports.CT_GammaTransform_Attributes = CT_GammaTransform_Attributes;
exports.CT_GeomGuideList_Attributes = CT_GeomGuideList_Attributes;
exports.CT_GeomGuide_Attributes = CT_GeomGuide_Attributes;
exports.CT_GeomRect_Attributes = CT_GeomRect_Attributes;
exports.CT_GradientFillProperties_Attributes = CT_GradientFillProperties_Attributes;
exports.CT_GradientFill_Attributes = CT_GradientFill_Attributes;
exports.CT_GradientStopList_Attributes = CT_GradientStopList_Attributes;
exports.CT_GradientStop_Attributes = CT_GradientStop_Attributes;
exports.CT_GraphicalObjectFrameLocking_Attributes = CT_GraphicalObjectFrameLocking_Attributes;
exports.CT_GraphicalObjectFrameNonVisual_Attributes = CT_GraphicalObjectFrameNonVisual_Attributes;
exports.CT_GraphicalObjectFrame_Attributes = CT_GraphicalObjectFrame_Attributes;
exports.CT_GrayscaleEffect_Attributes = CT_GrayscaleEffect_Attributes;
exports.CT_GrayscaleTransform_Attributes = CT_GrayscaleTransform_Attributes;
exports.CT_GroupFillProperties_Attributes = CT_GroupFillProperties_Attributes;
exports.CT_GroupShape_Attributes = CT_GroupShape_Attributes;
exports.CT_HSLEffect_Attributes = CT_HSLEffect_Attributes;
exports.CT_HslColor_Attributes = CT_HslColor_Attributes;
exports.CT_Hyperlink_Attributes = CT_Hyperlink_Attributes;
exports.CT_IconFilter_Attributes = CT_IconFilter_Attributes;
exports.CT_IconSet_Attributes = CT_IconSet_Attributes;
exports.CT_Index_Attributes = CT_Index_Attributes;
exports.CT_IndexedColors_Attributes = CT_IndexedColors_Attributes;
exports.CT_IntProperty_Attributes = CT_IntProperty_Attributes;
exports.CT_InverseGammaTransform_Attributes = CT_InverseGammaTransform_Attributes;
exports.CT_InverseTransform_Attributes = CT_InverseTransform_Attributes;
exports.CT_LightRig_Attributes = CT_LightRig_Attributes;
exports.CT_LineEndProperties_Attributes = CT_LineEndProperties_Attributes;
exports.CT_LineJoinBevel_Attributes = CT_LineJoinBevel_Attributes;
exports.CT_LineJoinMiterProperties_Attributes = CT_LineJoinMiterProperties_Attributes;
exports.CT_LineJoinRound_Attributes = CT_LineJoinRound_Attributes;
exports.CT_LineProperties_Attributes = CT_LineProperties_Attributes;
exports.CT_LinearShadeProperties_Attributes = CT_LinearShadeProperties_Attributes;
exports.CT_LuminanceEffect_Attributes = CT_LuminanceEffect_Attributes;
exports.CT_MRUColors_Attributes = CT_MRUColors_Attributes;
exports.CT_Marker_Attributes = CT_Marker_Attributes;
exports.CT_NoFillProperties_Attributes = CT_NoFillProperties_Attributes;
exports.CT_NonVisualConnectorProperties_Attributes = CT_NonVisualConnectorProperties_Attributes;
exports.CT_NonVisualDrawingProps_Attributes = CT_NonVisualDrawingProps_Attributes;
exports.CT_NonVisualDrawingShapeProps_Attributes = CT_NonVisualDrawingShapeProps_Attributes;
exports.CT_NonVisualGraphicFrameProperties_Attributes = CT_NonVisualGraphicFrameProperties_Attributes;
exports.CT_NonVisualPictureProperties_Attributes = CT_NonVisualPictureProperties_Attributes;
exports.CT_NumFmt_Attributes = CT_NumFmt_Attributes;
exports.CT_NumFmts_Attributes = CT_NumFmts_Attributes;
exports.CT_OfficeArtExtensionList_Attributes = CT_OfficeArtExtensionList_Attributes;
exports.CT_OfficeArtExtension_Attributes = CT_OfficeArtExtension_Attributes;
exports.CT_OlapPr_Attributes = CT_OlapPr_Attributes;
exports.CT_OneCellAnchor_Attributes = CT_OneCellAnchor_Attributes;
exports.CT_OutlinePr_Attributes = CT_OutlinePr_Attributes;
exports.CT_PageSetUpPr_Attributes = CT_PageSetUpPr_Attributes;
exports.CT_Pane_Attributes = CT_Pane_Attributes;
exports.CT_Parameter_Attributes = CT_Parameter_Attributes;
exports.CT_Parameters_Attributes = CT_Parameters_Attributes;
exports.CT_Path2DArcTo_Attributes = CT_Path2DArcTo_Attributes;
exports.CT_Path2DClose_Attributes = CT_Path2DClose_Attributes;
exports.CT_Path2DCubicBezierTo_Attributes = CT_Path2DCubicBezierTo_Attributes;
exports.CT_Path2DLineTo_Attributes = CT_Path2DLineTo_Attributes;
exports.CT_Path2DList_Attributes = CT_Path2DList_Attributes;
exports.CT_Path2DMoveTo_Attributes = CT_Path2DMoveTo_Attributes;
exports.CT_Path2DQuadBezierTo_Attributes = CT_Path2DQuadBezierTo_Attributes;
exports.CT_Path2D_Attributes = CT_Path2D_Attributes;
exports.CT_PathShadeProperties_Attributes = CT_PathShadeProperties_Attributes;
exports.CT_PatternFillProperties_Attributes = CT_PatternFillProperties_Attributes;
exports.CT_PatternFill_Attributes = CT_PatternFill_Attributes;
exports.CT_Percentage_Attributes = CT_Percentage_Attributes;
exports.CT_PhoneticPr_Attributes = CT_PhoneticPr_Attributes;
exports.CT_PhoneticRun_Attributes = CT_PhoneticRun_Attributes;
exports.CT_PictureLocking_Attributes = CT_PictureLocking_Attributes;
exports.CT_PictureNonVisual_Attributes = CT_PictureNonVisual_Attributes;
exports.CT_Picture_Attributes = CT_Picture_Attributes;
exports.CT_PivotAreaReference_Attributes = CT_PivotAreaReference_Attributes;
exports.CT_PivotAreaReferences_Attributes = CT_PivotAreaReferences_Attributes;
exports.CT_PivotArea_Attributes = CT_PivotArea_Attributes;
exports.CT_PivotSelection_Attributes = CT_PivotSelection_Attributes;
exports.CT_Point2D_Attributes = CT_Point2D_Attributes;
exports.CT_Point3D_Attributes = CT_Point3D_Attributes;
exports.CT_PolarAdjustHandle_Attributes = CT_PolarAdjustHandle_Attributes;
exports.CT_PositiveFixedAngle_Attributes = CT_PositiveFixedAngle_Attributes;
exports.CT_PositiveFixedPercentage_Attributes = CT_PositiveFixedPercentage_Attributes;
exports.CT_PositivePercentage_Attributes = CT_PositivePercentage_Attributes;
exports.CT_PositiveSize2D_Attributes = CT_PositiveSize2D_Attributes;
exports.CT_PresetColor_Attributes = CT_PresetColor_Attributes;
exports.CT_PresetGeometry2D_Attributes = CT_PresetGeometry2D_Attributes;
exports.CT_PresetLineDashProperties_Attributes = CT_PresetLineDashProperties_Attributes;
exports.CT_PresetTextShape_Attributes = CT_PresetTextShape_Attributes;
exports.CT_RElt_Attributes = CT_RElt_Attributes;
exports.CT_RPrElt_Attributes = CT_RPrElt_Attributes;
exports.CT_RegularTextRun_Attributes = CT_RegularTextRun_Attributes;
exports.CT_Rel_Attributes = CT_Rel_Attributes;
exports.CT_RelativeRect_Attributes = CT_RelativeRect_Attributes;
exports.CT_RgbColor_Attributes = CT_RgbColor_Attributes;
exports.CT_Row_Attributes = CT_Row_Attributes;
exports.CT_Rst_Attributes = CT_Rst_Attributes;
exports.CT_SRgbColor_Attributes = CT_SRgbColor_Attributes;
exports.CT_ScRgbColor_Attributes = CT_ScRgbColor_Attributes;
exports.CT_Scene3D_Attributes = CT_Scene3D_Attributes;
exports.CT_SchemeColor_Attributes = CT_SchemeColor_Attributes;
exports.CT_Selection_Attributes = CT_Selection_Attributes;
exports.CT_Shape3D_Attributes = CT_Shape3D_Attributes;
exports.CT_ShapeLocking_Attributes = CT_ShapeLocking_Attributes;
exports.CT_ShapeNonVisual_Attributes = CT_ShapeNonVisual_Attributes;
exports.CT_ShapeProperties_Attributes = CT_ShapeProperties_Attributes;
exports.CT_ShapeStyle_Attributes = CT_ShapeStyle_Attributes;
exports.CT_Shape_Attributes = CT_Shape_Attributes;
exports.CT_SheetFormatPr_Attributes = CT_SheetFormatPr_Attributes;
exports.CT_SheetPr_Attributes = CT_SheetPr_Attributes;
exports.CT_SheetView_Attributes = CT_SheetView_Attributes;
exports.CT_SolidColorFillProperties_Attributes = CT_SolidColorFillProperties_Attributes;
exports.CT_SortCondition_Attributes = CT_SortCondition_Attributes;
exports.CT_SortState_Attributes = CT_SortState_Attributes;
exports.CT_SphereCoords_Attributes = CT_SphereCoords_Attributes;
exports.CT_StretchInfoProperties_Attributes = CT_StretchInfoProperties_Attributes;
exports.CT_StyleMatrixReference_Attributes = CT_StyleMatrixReference_Attributes;
exports.CT_Stylesheet_Attributes = CT_Stylesheet_Attributes;
exports.CT_SystemColor_Attributes = CT_SystemColor_Attributes;
exports.CT_TableColumn_Attributes = CT_TableColumn_Attributes;
exports.CT_TableColumns_Attributes = CT_TableColumns_Attributes;
exports.CT_TableFormula_Attributes = CT_TableFormula_Attributes;
exports.CT_TableMissing_Attributes = CT_TableMissing_Attributes;
exports.CT_TableStyleElement_Attributes = CT_TableStyleElement_Attributes;
exports.CT_TableStyleInfo_Attributes = CT_TableStyleInfo_Attributes;
exports.CT_TableStyle_Attributes = CT_TableStyle_Attributes;
exports.CT_TableStyles_Attributes = CT_TableStyles_Attributes;
exports.CT_Table_Attributes = CT_Table_Attributes;
exports.CT_Tables_Attributes = CT_Tables_Attributes;
exports.CT_TextAutonumberBullet_Attributes = CT_TextAutonumberBullet_Attributes;
exports.CT_TextBlipBullet_Attributes = CT_TextBlipBullet_Attributes;
exports.CT_TextBodyProperties_Attributes = CT_TextBodyProperties_Attributes;
exports.CT_TextBody_Attributes = CT_TextBody_Attributes;
exports.CT_TextBulletColorFollowText_Attributes = CT_TextBulletColorFollowText_Attributes;
exports.CT_TextBulletSizeFollowText_Attributes = CT_TextBulletSizeFollowText_Attributes;
exports.CT_TextBulletSizePercent_Attributes = CT_TextBulletSizePercent_Attributes;
exports.CT_TextBulletSizePoint_Attributes = CT_TextBulletSizePoint_Attributes;
exports.CT_TextBulletTypefaceFollowText_Attributes = CT_TextBulletTypefaceFollowText_Attributes;
exports.CT_TextCharBullet_Attributes = CT_TextCharBullet_Attributes;
exports.CT_TextCharacterProperties_Attributes = CT_TextCharacterProperties_Attributes;
exports.CT_TextField_Attributes = CT_TextField_Attributes;
exports.CT_TextFields_Attributes = CT_TextFields_Attributes;
exports.CT_TextFont_Attributes = CT_TextFont_Attributes;
exports.CT_TextLineBreak_Attributes = CT_TextLineBreak_Attributes;
exports.CT_TextListStyle_Attributes = CT_TextListStyle_Attributes;
exports.CT_TextNoAutofit_Attributes = CT_TextNoAutofit_Attributes;
exports.CT_TextNoBullet_Attributes = CT_TextNoBullet_Attributes;
exports.CT_TextNormalAutofit_Attributes = CT_TextNormalAutofit_Attributes;
exports.CT_TextParagraphProperties_Attributes = CT_TextParagraphProperties_Attributes;
exports.CT_TextParagraph_Attributes = CT_TextParagraph_Attributes;
exports.CT_TextPr_Attributes = CT_TextPr_Attributes;
exports.CT_TextShapeAutofit_Attributes = CT_TextShapeAutofit_Attributes;
exports.CT_TextSpacingPercent_Attributes = CT_TextSpacingPercent_Attributes;
exports.CT_TextSpacingPoint_Attributes = CT_TextSpacingPoint_Attributes;
exports.CT_TextSpacing_Attributes = CT_TextSpacing_Attributes;
exports.CT_TextTabStopList_Attributes = CT_TextTabStopList_Attributes;
exports.CT_TextTabStop_Attributes = CT_TextTabStop_Attributes;
exports.CT_TextUnderlineFillFollowText_Attributes = CT_TextUnderlineFillFollowText_Attributes;
exports.CT_TextUnderlineFillGroupWrapper_Attributes = CT_TextUnderlineFillGroupWrapper_Attributes;
exports.CT_TextUnderlineLineFollowText_Attributes = CT_TextUnderlineLineFollowText_Attributes;
exports.CT_TileInfoProperties_Attributes = CT_TileInfoProperties_Attributes;
exports.CT_TintEffect_Attributes = CT_TintEffect_Attributes;
exports.CT_Top10_Attributes = CT_Top10_Attributes;
exports.CT_Transform2D_Attributes = CT_Transform2D_Attributes;
exports.CT_TwoCellAnchor_Attributes = CT_TwoCellAnchor_Attributes;
exports.CT_UnderlineProperty_Attributes = CT_UnderlineProperty_Attributes;
exports.CT_Vector3D_Attributes = CT_Vector3D_Attributes;
exports.CT_VerticalAlignFontProperty_Attributes = CT_VerticalAlignFontProperty_Attributes;
exports.CT_WebPr_Attributes = CT_WebPr_Attributes;
exports.CT_WorkbookPr_Attributes = CT_WorkbookPr_Attributes;
exports.CT_XStringElement_Attributes = CT_XStringElement_Attributes;
exports.CT_XYAdjustHandle_Attributes = CT_XYAdjustHandle_Attributes;
exports.CT_X_Attributes = CT_X_Attributes;
exports.CT_Xf_Attributes = CT_Xf_Attributes;
exports.CT_XmlColumnPr_Attributes = CT_XmlColumnPr_Attributes;
