'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var Paragraph = require('../Paragraph.js');
var ShapeProperties = require('../../drawing/ShapeProperties.js');
var parseTable = require('../../../word/parse/parseTable.js');
var parseSize = require('../../../word/parse/parseSize.js');
var WPSStyle = require('./WPSStyle.js');

/**
 * 文档 20.4.2.22，不过大部分属性不支持
 */
function parseBodyPr(element, style) {
    var e_1, _a;
    try {
        for (var _b = tslib.__values(element.attributes), _c = _b.next(); !_c.done; _c = _b.next()) {
            var attribute = _c.value;
            var name_1 = attribute.name;
            var value = attribute.value;
            switch (name_1) {
                case 'numCol':
                    if (value !== '1') {
                        style['column-count'] = value;
                    }
                    break;
                case 'vert':
                    var val = value;
                    switch (val) {
                        case 'vert':
                            style['writing-mode'] = 'vertical-rl';
                            style['text-orientation'] = 'sideways';
                            break;
                        case 'vert270':
                        case 'eaVert':
                            // 不太准确，但 css 也只能做到这样
                            style['writing-mode'] = 'vertical-rl';
                            style['text-orientation'] = 'mixed';
                            break;
                        default:
                            break;
                    }
                    break;
                case 'anchor':
                    var anchor = value;
                    switch (anchor) {
                        case 'b':
                            style['vertical-align'] = 'bottom';
                            break;
                        case 't':
                            style['vertical-align'] = 'top';
                            break;
                        case 'ctr':
                            style['vertical-align'] = 'middle';
                            break;
                    }
                    break;
                case 'rot':
                    var rot = parseSize.convertAngle(value);
                    if (rot) {
                        style['transform'] = "rotate(".concat(rot, "deg)");
                    }
                    break;
            }
        }
    }
    catch (e_1_1) { e_1 = { error: e_1_1 }; }
    finally {
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        }
        finally { if (e_1) throw e_1.error; }
    }
}
var WPS = /** @class */ (function () {
    function WPS() {
        // 外层容器样式
        this.style = {};
    }
    WPS.fromXML = function (word, element) {
        var e_2, _a, e_3, _b;
        var wps = new WPS();
        wps.txbxContent = [];
        try {
            for (var _c = tslib.__values(element.children), _d = _c.next(); !_d.done; _d = _c.next()) {
                var child = _d.value;
                var tagName = child.tagName;
                switch (tagName) {
                    case 'wps:cNvSpPr':
                    case 'wps:cNvPr':
                        // 和展现无关
                        break;
                    case 'wps:spPr':
                        wps.spPr = ShapeProperties.ShapePr.fromXML(word, child);
                        break;
                    case 'wps:txbx':
                        // 文本框内容
                        // http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/txbxContent.html
                        var txbxContent = child.firstElementChild;
                        if (txbxContent) {
                            try {
                                for (var _e = (e_3 = void 0, tslib.__values(txbxContent.children)), _f = _e.next(); !_f.done; _f = _e.next()) {
                                    var txbxContentChild = _f.value;
                                    var txbxContentTagName = txbxContentChild.tagName;
                                    switch (txbxContentTagName) {
                                        case 'w:p':
                                            wps.txbxContent.push(Paragraph.Paragraph.fromXML(word, txbxContentChild));
                                            break;
                                        case 'w:tbl':
                                            wps.txbxContent.push(parseTable.parseTable(word, txbxContentChild));
                                            break;
                                    }
                                }
                            }
                            catch (e_3_1) { e_3 = { error: e_3_1 }; }
                            finally {
                                try {
                                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);
                                }
                                finally { if (e_3) throw e_3.error; }
                            }
                        }
                        else {
                            console.warn('unknown wps:txbx', child);
                        }
                        break;
                    case 'wps:style':
                        // http://webapp.docx4java.org/OnlineDemo/ecma376/DrawingML/style_1.html
                        wps.wpsStyle = WPSStyle.WPSStyle.fromXML(word, child);
                        break;
                    case 'wps:bodyPr':
                        parseBodyPr(child, wps.style);
                        break;
                    default:
                        console.warn('WPS: Unknown tag ', tagName, child);
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return wps;
    };
    return WPS;
}());

exports.WPS = WPS;
