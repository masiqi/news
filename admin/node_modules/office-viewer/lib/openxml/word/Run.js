'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var OpenXML = require('../../OpenXML.js');
var parsePr = require('../../word/parse/parsePr.js');
var Break = require('./Break.js');
var Drawing = require('../drawing/Drawing.js');
var InstrText = require('./InstrText.js');
var NoBreakHyphen = require('./NoBreakHyphen.js');
var Pict = require('./Pict.js');
var Ruby = require('./Ruby.js');
var Separator = require('./Separator.js');
var SoftHyphen = require('./SoftHyphen.js');
var Sym = require('./Sym.js');
var Tab = require('./Tab.js');

var Text = /** @class */ (function () {
    function Text(text) {
        this.preserveSpace = false;
        this.text = String(text);
    }
    return Text;
}());
var Run = /** @class */ (function () {
    function Run() {
        this.properties = {};
        this.children = [];
    }
    Run.prototype.addChild = function (child) {
        if (child) {
            this.children.push(child);
        }
    };
    Run.parseRunPr = function (word, element) {
        var cssStyle = parsePr.parsePr(word, element);
        var rStyle;
        var rStyleElement = element.getElementsByTagName('w:rStyle').item(0);
        if (rStyleElement) {
            rStyle = OpenXML.getVal(rStyleElement);
        }
        return { cssStyle: cssStyle, rStyle: rStyle };
    };
    Run.fromXML = function (word, element) {
        var e_1, _a;
        var run = new Run();
        try {
            for (var _b = tslib.__values(element.children), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                var tagName = child.tagName;
                switch (tagName) {
                    case 'w:t':
                        var textContent = child.textContent || '';
                        var text = new Text(textContent);
                        run.addChild(text);
                        break;
                    case 'w:rPr':
                        run.properties = Run.parseRunPr(word, child);
                        break;
                    case 'w:br':
                    case 'w:cr':
                        run.addChild(Break.Break.fromXML(word, child));
                        break;
                    case 'w:drawing':
                        run.addChild(Drawing.Drawing.fromXML(word, child));
                        break;
                    case 'w:tab':
                        run.addChild(Tab.Tab.fromXML(word, child));
                        break;
                    case 'w:fldChar':
                        run.fldChar = child.getAttribute('w:fldCharType');
                        break;
                    case 'w:instrText':
                        run.addChild(new InstrText.InstrText(child.textContent || ''));
                        break;
                    case 'w:lastRenderedPageBreak':
                        var pageBreak = new Break.Break();
                        pageBreak.type = 'page';
                        run.addChild(pageBreak);
                        break;
                    case 'w:pict':
                        run.addChild(Pict.Pict.fromXML(word, child));
                        break;
                    case 'w:ruby':
                        run.addChild(Ruby.Ruby.fromXML(word, child));
                        break;
                    case 'w:sym':
                        run.addChild(Sym.Sym.parseXML(child));
                        break;
                    case 'mc:AlternateContent':
                        var drawingChild = child.getElementsByTagName('w:drawing').item(0);
                        if (drawingChild) {
                            run.addChild(Drawing.Drawing.fromXML(word, drawingChild));
                        }
                        break;
                    case 'w:softHyphen':
                        run.addChild(new SoftHyphen.SoftHyphen());
                        break;
                    case 'w:noBreakHyphen':
                        run.addChild(new NoBreakHyphen.NoBreakHyphen());
                        break;
                    case 'w:separator':
                        run.addChild(new Separator.Separator());
                        break;
                    case 'w:continuationSeparator':
                        // TODO: 还不知道是啥
                        break;
                    default:
                        console.warn('parse Run: Unknown key', tagName, child);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return run;
    };
    return Run;
}());

exports.Run = Run;
exports.Text = Text;
