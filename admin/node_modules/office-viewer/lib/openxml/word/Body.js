'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var mergeSdt = require('../../word/parse/mergeSdt.js');
var parseTable = require('../../word/parse/parseTable.js');
var Paragraph = require('./Paragraph.js');
var Section = require('./Section.js');

/**
 * body 类型定义
 * http://webapp.docx4java.org/OnlineDemo/ecma376/WordML/body.html
 */
var Body = /** @class */ (function () {
    function Body() {
        this.sections = [];
        // 默认构建第一个 section
        this.currentSection = new Section.Section();
        this.sections.push(this.currentSection);
    }
    Body.prototype.addChild = function (child) {
        this.currentSection.addChild(child);
    };
    /**
     * 添加 secetion
     * @param properties 前一个 section 的属性
     */
    Body.prototype.addSection = function (properties) {
        this.currentSection.properties = properties;
        this.currentSection = new Section.Section();
        this.sections.push(this.currentSection);
    };
    Body.fromXML = function (word, element) {
        var e_1, _a;
        var body = new Body();
        try {
            for (var _b = tslib.__values(mergeSdt.mergeSdt(element)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var child = _c.value;
                var tagName = child.tagName;
                switch (tagName) {
                    case 'w:p':
                        var paragraph = Paragraph.Paragraph.fromXML(word, child);
                        body.addChild(paragraph);
                        break;
                    case 'w:tbl':
                        var table = parseTable.parseTable(word, child);
                        body.addChild(table);
                        break;
                    case 'w:bookmarkStart':
                    case 'w:bookmarkEnd':
                        break;
                    case 'w:sectPr':
                        body.addSection(Section.Section.parsePr(word, child, body));
                        break;
                    default:
                        console.warn('Body.fromXML Unknown key', tagName, child);
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        // 过滤掉没内容的 section，一般是最后一个
        body.sections = body.sections.filter(function (section) { return section.children.length > 0; });
        return body;
    };
    return Body;
}());

exports.Body = Body;
