/**
 * amis-core v6.13.0
 * Copyright 2018-2025 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var normalizeLink = function (to, location) {
    if (location === void 0) { location = window.location; }
    to = to || '';
    if (to && to[0] === '#') {
        to = location.pathname + location.search + to;
    }
    else if (to && to[0] === '?') {
        to = location.pathname + to;
    }
    var idx = to.indexOf('?');
    var idx2 = to.indexOf('#');
    var pathname = to;
    var search = '';
    var hash = location.hash;
    // host?a=a#b 的情况
    if (idx < idx2) {
        pathname = ~idx ? to.substring(0, idx) : ~idx2 ? to.substring(0, idx2) : to;
        hash = ~idx2 ? to.substring(idx2) : location.hash;
        search = ~idx ? to.substring(idx, ~idx2 ? idx2 : undefined) : '';
    }
    // host#b?a=a 的情况
    else if (idx > idx2) {
        pathname = ~idx2 ? to.substring(0, idx2) : ~idx ? to.substring(0, idx) : to;
        hash = ~idx2 ? to.substring(idx2, ~idx ? idx : undefined) : location.hash;
        search = ~idx ? to.substring(idx) : '';
    }
    if (!pathname) {
        pathname = location.pathname;
    }
    else if (pathname[0] != '/' && !/^https?\:\/\//.test(pathname)) {
        var relativeBase = location.pathname;
        var paths = relativeBase.split('/');
        paths.pop();
        var m = void 0;
        while ((m = /^\.\.?\//.exec(pathname))) {
            if (m[0] === '../') {
                paths.pop();
            }
            pathname = pathname.substring(m[0].length);
        }
        pathname = paths.concat(pathname).join('/');
    }
    var rest = idx < idx2 ? search + hash : hash + search;
    return pathname + rest;
};

exports.normalizeLink = normalizeLink;
