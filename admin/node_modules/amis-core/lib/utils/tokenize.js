/**
 * amis-core v6.13.0
 * Copyright 2018-2025 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var amisFormula = require('amis-formula');

var AST_CACHE = {};
function memoParse(str, options) {
    var key = "".concat(str).concat((options === null || options === void 0 ? void 0 : options.evalMode) ? '-eval' : '').concat((options === null || options === void 0 ? void 0 : options.allowFilter) ? '-filter' : '').concat((options === null || options === void 0 ? void 0 : options.variableMode) ? '-variable' : '');
    var ast = AST_CACHE[key] || amisFormula.parse(str, options);
    AST_CACHE[key] = ast;
    return ast;
}
var tokenize = function (str, data, defaultFilter) {
    if (defaultFilter === void 0) { defaultFilter = '| html'; }
    if (!str || typeof str !== 'string') {
        return str;
    }
    try {
        var ast = memoParse(str, {
            evalMode: false,
            allowFilter: true
        });
        var result = new amisFormula.Evaluator(data, {
            defaultFilter: defaultFilter
        }).evalute(ast);
        return "".concat(result == null ? '' : result);
    }
    catch (e) {
        console.warn(e);
        return str;
    }
};

exports.memoParse = memoParse;
exports.tokenize = tokenize;
