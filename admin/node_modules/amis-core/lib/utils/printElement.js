/**
 * amis-core v6.13.0
 * Copyright 2018-2025 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

/**
 * 打印元素，参考 https://github.com/szepeshazi/print-elements 里的实现
 * 原理就是遍历节点加上打印样式，然后打印完了再清理掉
 * 对代码做了改造和优化
 */
var hideFromPrintClass = 'pe-no-print';
var preservePrintClass = 'pe-preserve-print';
var preserveAncestorClass = 'pe-preserve-ancestor';
var bodyElementName = 'BODY';
function hide(element) {
    if (!element.classList.contains(preservePrintClass)) {
        element.classList.add(hideFromPrintClass);
    }
}
function preserve(element, isStartingElement) {
    element.classList.remove(hideFromPrintClass);
    element.classList.add(preservePrintClass);
    if (!isStartingElement) {
        element.classList.add(preserveAncestorClass);
    }
}
function clean(element) {
    element.classList.remove(hideFromPrintClass);
    element.classList.remove(preservePrintClass);
    element.classList.remove(preserveAncestorClass);
}
function walkSiblings(element, callback) {
    var sibling = element.previousElementSibling;
    while (sibling) {
        callback(sibling);
        sibling = sibling.previousElementSibling;
    }
    sibling = element.nextElementSibling;
    while (sibling) {
        callback(sibling);
        sibling = sibling.nextElementSibling;
    }
}
function attachPrintClasses(element, isStartingElement) {
    preserve(element, isStartingElement);
    walkSiblings(element, hide);
}
function cleanup(element, isStartingElement) {
    clean(element);
    walkSiblings(element, clean);
}
function walkTree(element, callback) {
    var currentElement = element;
    callback(currentElement, true);
    currentElement = currentElement.parentElement;
    while (currentElement && currentElement.nodeName !== bodyElementName) {
        callback(currentElement, false);
        currentElement = currentElement.parentElement;
    }
}
function printElements(elements) {
    for (var i = 0; i < elements.length; i++) {
        walkTree(elements[i], attachPrintClasses);
    }
    window.print();
    for (var i = 0; i < elements.length; i++) {
        walkTree(elements[i], cleanup);
    }
}

exports.printElements = printElements;
