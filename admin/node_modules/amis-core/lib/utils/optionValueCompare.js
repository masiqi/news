/**
 * amis-core v6.13.0
 * Copyright 2018-2025 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

require('./helper.js');
var isEqual = require('lodash/isEqual');
var object = require('./object.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var isEqual__default = /*#__PURE__*/_interopDefaultLegacy(isEqual);

function getOptionValue(value, valueField) {
    if (valueField === void 0) { valueField = 'value'; }
    return object.isObject(value) &&
        value &&
        value.hasOwnProperty(valueField)
        ? value[valueField]
        : value;
}
function getOptionValueBindField(valueField) {
    if (valueField === void 0) { valueField = 'value'; }
    return function (value) { return getOptionValue(value, valueField); };
}
function matchOptionValue(a, b, valueField) {
    if (valueField === void 0) { valueField = 'value'; }
    // a 可能为 Option, 此时需要取其value
    var aValue = getOptionValue(a, valueField);
    var bValue = b[valueField || 'value'];
    return object.isObject(aValue)
        ? isEqual__default["default"](aValue, bValue)
        : // 当值均为 undefined 时，不应该判定相等
            aValue !== undefined &&
                bValue !== undefined &&
                String(bValue) === String(aValue);
}
function optionValueCompare(a, valueField) {
    if (valueField === void 0) { valueField = 'value'; }
    return function (b) { return matchOptionValue(a, b, valueField); };
}

exports.getOptionValue = getOptionValue;
exports.getOptionValueBindField = getOptionValueBindField;
exports.matchOptionValue = matchOptionValue;
exports.optionValueCompare = optionValueCompare;
