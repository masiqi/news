/**
 * amis-core v6.13.0
 * Copyright 2018-2025 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var isPlainObject = require('lodash/isPlainObject');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var isPlainObject__default = /*#__PURE__*/_interopDefaultLegacy(isPlainObject);

function labelToString(label) {
    var e_1, _a;
    var type = typeof label;
    if (type === 'undefined' || label === null) {
        // render placeholder
        return '-';
    }
    if (type === 'string') {
        return label;
    }
    else if (type === 'number') {
        return "".concat(label);
    }
    else if (type === 'boolean') {
        return String(label);
    }
    if (isPlainObject__default["default"](label)) {
        try {
            for (var _b = tslib.__values(['__title', 'label', Object.keys(label)[0]]), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (typeof label[key] === 'string') {
                    return label[key];
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    return 'invalid label';
}

exports.labelToString = labelToString;
