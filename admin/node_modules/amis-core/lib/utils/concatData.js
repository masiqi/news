/**
 * amis-core v6.13.0
 * Copyright 2018-2025 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var getVariable = require('./getVariable.js');
var object = require('./object.js');

/**
 * 合并两次数据，满足轮训时总合并数据的需求，比如日志接口，每次返回一部分，但是前端组件需要全部展示。
 *
 * @param data
 * @param origin
 * @param keys
 */
function concatData(data, origin, keys) {
    keys = Array.isArray(keys)
        ? keys
        : keys
            .split(',')
            .map(function (item) { return item.trim(); })
            .filter(function (item) { return item; });
    var newData = tslib.__assign({}, data);
    var modified = false;
    origin &&
        keys.forEach(function (key) {
            var prev = getVariable.getVariable(origin, key);
            var next = getVariable.getVariable(data, key);
            var args = [];
            typeof prev !== 'undefined' && args.push(prev);
            typeof next !== 'undefined' && args.push(next);
            modified = true;
            object.setVariable(newData, key, [].concat.apply([], args));
        });
    return modified ? newData : data;
}

exports.concatData = concatData;
