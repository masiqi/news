/**
 * amis-core v6.13.0
 * Copyright 2018-2025 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var styleHelper = require('../utils/style-helper.js');

var styleIdCount = new Map();
function CustomStyle (props) {
    var config = props.config, env = props.env, data = props.data;
    var themeCss = config.themeCss, classNames = config.classNames, defaultData = config.defaultData, wrapperCustomStyle = config.wrapperCustomStyle;
    var id = config.id ? "".concat(config.id) : config.id;
    React.useEffect(function () {
        if (styleIdCount.has(id)) {
            styleIdCount.set(id, styleIdCount.get(id) + 1);
        }
        else if (id) {
            styleIdCount.set(id, 1);
        }
        return function () {
            if (styleIdCount.has(id)) {
                styleIdCount.set(id, styleIdCount.get(id) - 1);
                if (styleIdCount.get(id) === 0) {
                    styleIdCount.delete(id);
                }
            }
        };
    }, [id]);
    React.useEffect(function () {
        var _a, _b;
        if (themeCss && id) {
            styleHelper.insertCustomStyle({
                themeCss: themeCss,
                classNames: classNames,
                id: id,
                defaultData: defaultData,
                customStyleClassPrefix: env === null || env === void 0 ? void 0 : env.customStyleClassPrefix,
                doc: (_b = (_a = env === null || env === void 0 ? void 0 : env.getModalContainer) === null || _a === void 0 ? void 0 : _a.call(env)) === null || _b === void 0 ? void 0 : _b.ownerDocument,
                data: data
            });
        }
        return function () {
            var _a, _b;
            if (id && !styleIdCount.get(id)) {
                styleHelper.removeCustomStyle('', id, (_b = (_a = env === null || env === void 0 ? void 0 : env.getModalContainer) === null || _a === void 0 ? void 0 : _a.call(env)) === null || _b === void 0 ? void 0 : _b.ownerDocument, data);
            }
        };
    }, [themeCss, id]);
    React.useEffect(function () {
        var _a, _b;
        if (wrapperCustomStyle && id) {
            styleHelper.insertEditCustomStyle({
                customStyle: wrapperCustomStyle,
                id: id,
                customStyleClassPrefix: env === null || env === void 0 ? void 0 : env.customStyleClassPrefix,
                doc: (_b = (_a = env === null || env === void 0 ? void 0 : env.getModalContainer) === null || _a === void 0 ? void 0 : _a.call(env)) === null || _b === void 0 ? void 0 : _b.ownerDocument,
                data: data
            });
        }
        return function () {
            var _a, _b;
            if (id && !styleIdCount.get(id)) {
                styleHelper.removeCustomStyle('wrapperCustomStyle', id, (_b = (_a = env === null || env === void 0 ? void 0 : env.getModalContainer) === null || _a === void 0 ? void 0 : _a.call(env)) === null || _b === void 0 ? void 0 : _b.ownerDocument, data);
            }
        };
    }, [wrapperCustomStyle, id]);
    return null;
}

exports["default"] = CustomStyle;
exports.styleIdCount = styleIdCount;
