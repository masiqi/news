/**
 * amis-core v6.13.0
 * Copyright 2018-2025 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
require('../utils/helper.js');
var Action = require('./Action.js');
var factory = require('../factory.js');
var object = require('../utils/object.js');

/**
 * 组件动作
 *
 * @export
 * @class CmptAction
 * @implements {Action}
 */
var CmptAction = /** @class */ (function () {
    function CmptAction() {
    }
    CmptAction.prototype.run = function (action, renderer, event) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6;
        return tslib.__awaiter(this, void 0, void 0, function () {
            var key, dataMergeMode, path, topStore, beforeSetData, res, component, msg, result, valid, _7, e_1, result, e_2;
            var _8, _9, _10, _11, _12, _13;
            return tslib.__generator(this, function (_14) {
                switch (_14.label) {
                    case 0:
                        key = action.componentId || action.componentName;
                        dataMergeMode = action.dataMergeMode || 'merge';
                        path = (_a = action.args) === null || _a === void 0 ? void 0 : _a.path;
                        if (!(action.actionType === 'setValue' && path && typeof path === 'string')) return [3 /*break*/, 2];
                        if (path.startsWith('global.')) {
                            topStore = renderer.props.topStore;
                            topStore === null || topStore === void 0 ? void 0 : topStore.updateGlobalVarValue(path.substring(7), action.args.value);
                        }
                        beforeSetData = (_c = (_b = event === null || event === void 0 ? void 0 : event.context) === null || _b === void 0 ? void 0 : _b.env) === null || _c === void 0 ? void 0 : _c.beforeSetData;
                        if (!(beforeSetData && typeof beforeSetData === 'function')) return [3 /*break*/, 2];
                        return [4 /*yield*/, beforeSetData(renderer, action, event)];
                    case 1:
                        res = _14.sent();
                        if (res === false) {
                            return [2 /*return*/];
                        }
                        _14.label = 2;
                    case 2:
                        component = Action.getTargetComponent(action, renderer, event, key);
                        // 如果key指定了，但是没找到组件，则报错
                        if (key && !component) {
                            msg = "\u5C1D\u8BD5\u6267\u884C\u4E00\u4E2A\u4E0D\u5B58\u5728\u7684\u76EE\u6807\u7EC4\u4EF6\u52A8\u4F5C\uFF08".concat(key, "\uFF09\uFF0C\u8BF7\u68C0\u67E5\u76EE\u6807\u7EC4\u4EF6\u975E\u9690\u85CF\u72B6\u6001\uFF0C\u4E14\u6B63\u786E\u6307\u5B9A\u4E86componentId\u6216componentName");
                            // cmpAction 可以容忍错误，除非 ignoreError 强制设置成了 false
                            if (action.ignoreError === false) {
                                throw Error(msg);
                            }
                            else {
                                console.warn(msg);
                            }
                            return [2 /*return*/];
                        }
                        if (action.actionType === 'setValue') {
                            if (component === null || component === void 0 ? void 0 : component.setData) {
                                return [2 /*return*/, component === null || component === void 0 ? void 0 : component.setData((_d = action.args) === null || _d === void 0 ? void 0 : _d.value, dataMergeMode === 'override', (_e = action.args) === null || _e === void 0 ? void 0 : _e.index, (_f = action.args) === null || _f === void 0 ? void 0 : _f.condition)];
                            }
                            else {
                                return [2 /*return*/, (_h = component === null || component === void 0 ? void 0 : (_g = component.props).onChange) === null || _h === void 0 ? void 0 : _h.call(_g, (_j = action.args) === null || _j === void 0 ? void 0 : _j.value)];
                            }
                        }
                        if (!(action.actionType === 'reload')) return [3 /*break*/, 4];
                        return [4 /*yield*/, ((_k = component === null || component === void 0 ? void 0 : component.reload) === null || _k === void 0 ? void 0 : _k.call(component, undefined, action.data, event.data, undefined, dataMergeMode === 'override', tslib.__assign(tslib.__assign({}, action.args), { resetPage: (_m = (_l = action.args) === null || _l === void 0 ? void 0 : _l.resetPage) !== null && _m !== void 0 ? _m : action.resetPage })))];
                    case 3:
                        result = _14.sent();
                        if (result && action.outputVar) {
                            event.setData(object.extendObject(event.data, (_8 = {},
                                _8[action.outputVar] = result,
                                _8)));
                        }
                        return [2 /*return*/, result];
                    case 4:
                        if (!(action.actionType === 'validateFormItem' &&
                            ((_p = factory.getRendererByName((_o = component === null || component === void 0 ? void 0 : component.props) === null || _o === void 0 ? void 0 : _o.type)) === null || _p === void 0 ? void 0 : _p.isFormItem))) return [3 /*break*/, 11];
                        _14.label = 5;
                    case 5:
                        _14.trys.push([5, 9, , 10]);
                        return [4 /*yield*/, ((_r = component === null || component === void 0 ? void 0 : (_q = component.props).onValidate) === null || _r === void 0 ? void 0 : _r.call(_q))];
                    case 6:
                        _7 = (_14.sent());
                        if (!_7) return [3 /*break*/, 8];
                        return [4 /*yield*/, ((_s = component === null || component === void 0 ? void 0 : component.validate) === null || _s === void 0 ? void 0 : _s.call(component))];
                    case 7:
                        _7 = !(_14.sent());
                        _14.label = 8;
                    case 8:
                        valid = _7;
                        if (valid) {
                            event.setData(object.createObject(event.data, (_9 = {},
                                _9[action.outputVar || "".concat(action.actionType, "Result")] = {
                                    error: '',
                                    value: (_u = (_t = component === null || component === void 0 ? void 0 : component.props) === null || _t === void 0 ? void 0 : _t.formItem) === null || _u === void 0 ? void 0 : _u.value
                                },
                                _9)));
                        }
                        else {
                            event.setData(object.createObject(event.data, (_10 = {},
                                _10[action.outputVar || "".concat(action.actionType, "Result")] = {
                                    error: typeof valid === 'string'
                                        ? valid
                                        : (((_w = (_v = component === null || component === void 0 ? void 0 : component.props) === null || _v === void 0 ? void 0 : _v.formItem) === null || _w === void 0 ? void 0 : _w.errors) || []).join(','),
                                    value: (_y = (_x = component === null || component === void 0 ? void 0 : component.props) === null || _x === void 0 ? void 0 : _x.formItem) === null || _y === void 0 ? void 0 : _y.value
                                },
                                _10)));
                        }
                        return [3 /*break*/, 10];
                    case 9:
                        e_1 = _14.sent();
                        event.setData(object.createObject(event.data, (_11 = {},
                            _11[action.outputVar || "".concat(action.actionType, "Result")] = {
                                error: e_1.message || '未知错误',
                                value: (_0 = (_z = component === null || component === void 0 ? void 0 : component.props) === null || _z === void 0 ? void 0 : _z.formItem) === null || _0 === void 0 ? void 0 : _0.value
                            },
                            _11)));
                        return [3 /*break*/, 10];
                    case 10: return [2 /*return*/];
                    case 11:
                        _14.trys.push([11, 13, , 14]);
                        return [4 /*yield*/, ((_1 = component === null || component === void 0 ? void 0 : component.doAction) === null || _1 === void 0 ? void 0 : _1.call(component, action, event.data, true, action.args))];
                    case 12:
                        result = _14.sent();
                        if (['validate', 'submit'].includes(action.actionType)) {
                            event.setData(object.createObject(event.data, (_12 = {},
                                _12[action.outputVar || "".concat(action.actionType, "Result")] = {
                                    error: '',
                                    payload: (_2 = result === null || result === void 0 ? void 0 : result.__payload) !== null && _2 !== void 0 ? _2 : (_4 = (_3 = component === null || component === void 0 ? void 0 : component.props) === null || _3 === void 0 ? void 0 : _3.store) === null || _4 === void 0 ? void 0 : _4.data,
                                    responseData: result === null || result === void 0 ? void 0 : result.__response
                                },
                                _12)));
                        }
                        return [2 /*return*/, result];
                    case 13:
                        e_2 = _14.sent();
                        event.setData(object.createObject(event.data, (_13 = {},
                            _13[action.outputVar || "".concat(action.actionType, "Result")] = {
                                error: e_2.message,
                                errors: e_2.name === 'ValidateError' ? e_2.detail : e_2,
                                payload: (_6 = (_5 = component === null || component === void 0 ? void 0 : component.props) === null || _5 === void 0 ? void 0 : _5.store) === null || _6 === void 0 ? void 0 : _6.data
                            },
                            _13)));
                        return [3 /*break*/, 14];
                    case 14: return [2 /*return*/];
                }
            });
        });
    };
    return CmptAction;
}());
Action.registerAction('component', new CmptAction());

exports.CmptAction = CmptAction;
