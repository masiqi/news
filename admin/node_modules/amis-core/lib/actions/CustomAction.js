/**
 * amis-core v6.13.0
 * Copyright 2018-2025 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
require('amis-formula');
require('moment');
require('lodash/isPlainObject');
require('../utils/memoryParse.js');
require('@rc-component/mini-decimal');
require('../utils/filter.js');
var api = require('../utils/api.js');
require('file-saver');
require('../utils/browser.js');
require('../utils/ColorScale.js');
require('../utils/columnsSplit.js');
require('../utils/DataSchema.js');
require('../utils/DataScope.js');
require('../utils/debug.js');
require('../utils/dom.js');
require('../utils/errors.js');
require('../utils/tpl.js');
require('../utils/helper.js');
require('lodash/isObject');
require('lodash/isString');
require('lodash/isBoolean');
require('../utils/highlight.js');
require('../utils/icon.js');
require('../utils/image.js');
require('lodash/isEqual');
var Action = require('./Action.js');
require('lodash/debounce');
require('../utils/resize-sensor.js');
require('react');
require('react-overlays/useRootClose');
require('react-dom');
require('../utils/SimpleMap.js');
require('lodash/mapValues');
require('lodash/camelCase');
require('lodash/cloneDeep');
require('lodash/map');
require('lodash/isEmpty');
require('lodash/kebabCase');
require('uncontrollable');
require('hoist-non-react-statics');
require('../utils/validations.js');
require('../utils/resolveCondition.js');
require('mobx');
require('../utils/Animation.js');

/**
 * 自定义动作，JS脚本
 *
 * @export
 * @class CustomAction
 * @implements {ActionObject}
 */
var CustomAction = /** @class */ (function () {
    function CustomAction() {
    }
    CustomAction.prototype.run = function (action, renderer, event) {
        var _a, _b;
        return tslib.__awaiter(this, void 0, void 0, function () {
            var scriptFunc, proxy;
            return tslib.__generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        scriptFunc = (_b = (_a = action.args) === null || _a === void 0 ? void 0 : _a.script) !== null && _b !== void 0 ? _b : action.script;
                        if (typeof scriptFunc === 'string') {
                            scriptFunc = api.str2AsyncFunction(scriptFunc, 'context', 'doAction', 'event');
                        }
                        proxy = new Proxy({}, {
                            get: function (target, p, receiver) {
                                var _a, _b;
                                if (typeof p === 'string') {
                                    return (_b = (_a = event.context.scoped) === null || _a === void 0 ? void 0 : _a.getComponentByName) === null || _b === void 0 ? void 0 : _b.call(_a, p);
                                }
                            }
                        });
                        return [4 /*yield*/, (scriptFunc === null || scriptFunc === void 0 ? void 0 : scriptFunc.call(proxy, renderer, function (action) { return Action.runActions(action, renderer, event); }, event, action))];
                    case 1:
                        _c.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    return CustomAction;
}());
Action.registerAction('custom', new CustomAction());

exports.CustomAction = CustomAction;
