/**
 * amis-core v6.13.0
 * Copyright 2018-2025 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
require('amis-formula');
require('moment');
var object = require('../utils/object.js');
require('../utils/memoryParse.js');
require('@rc-component/mini-decimal');
var resolveVariableAndFilterForAsync = require('../utils/resolveVariableAndFilterForAsync.js');
require('lodash/isPlainObject');
require('../utils/filter.js');
require('../utils/api.js');
require('file-saver');
require('../utils/browser.js');
require('../utils/ColorScale.js');
require('../utils/columnsSplit.js');
require('../utils/DataSchema.js');
require('../utils/DataScope.js');
require('../utils/debug.js');
require('../utils/dom.js');
require('../utils/errors.js');
require('../utils/tpl.js');
require('../utils/helper.js');
var formula = require('../utils/formula.js');
require('../utils/highlight.js');
require('../utils/icon.js');
require('../utils/image.js');
require('lodash/isEqual');
var Action = require('./Action.js');
require('lodash/debounce');
require('../utils/resize-sensor.js');
require('react');
require('react-overlays/useRootClose');
require('react-dom');
require('../utils/SimpleMap.js');
require('lodash/mapValues');
require('lodash/camelCase');
require('lodash/cloneDeep');
require('lodash/isObject');
require('lodash/map');
require('lodash/isEmpty');
require('lodash/kebabCase');
require('uncontrollable');
require('hoist-non-react-statics');
require('../utils/validations.js');
require('../utils/resolveCondition.js');
require('mobx');
require('../utils/Animation.js');

/**
 * 事件本身相关动作
 *
 * @export
 * @class EventAction
 * @implements {Action}
 */
var EventAction = /** @class */ (function () {
    function EventAction() {
    }
    EventAction.prototype.run = function (action, renderer, event) {
        var _a;
        return tslib.__awaiter(this, void 0, void 0, function () {
            var _b, data, value;
            return tslib.__generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _b = action.actionType;
                        switch (_b) {
                            case 'setEventData': return [3 /*break*/, 1];
                            case 'preventDefault': return [3 /*break*/, 5];
                            case 'stopPropagation': return [3 /*break*/, 6];
                        }
                        return [3 /*break*/, 7];
                    case 1:
                        if (!(typeof ((_a = action.args) === null || _a === void 0 ? void 0 : _a.key) === 'string')) return [3 /*break*/, 4];
                        data = object.cloneObject(event.data);
                        value = action.args.value;
                        if (!formula.isExpression(value)) return [3 /*break*/, 3];
                        return [4 /*yield*/, resolveVariableAndFilterForAsync.resolveVariableAndFilterForAsync(value, event.data, '| raw')];
                    case 2:
                        value = _c.sent();
                        _c.label = 3;
                    case 3:
                        object.setVariable(data, action.args.key, value);
                        event.setData(data);
                        _c.label = 4;
                    case 4: return [3 /*break*/, 7];
                    case 5:
                        event.preventDefault();
                        return [3 /*break*/, 7];
                    case 6:
                        event.stopPropagation();
                        return [3 /*break*/, 7];
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    return EventAction;
}());
Action.registerAction('setEventData', new EventAction());
Action.registerAction('preventDefault', new EventAction());
Action.registerAction('stopPropagation', new EventAction());

exports.EventAction = EventAction;
