/**
 * amis-core v6.13.0
 * Copyright 2018-2025 fex
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
var printElement = require('../utils/printElement.js');
var Action = require('./Action.js');

/**
 * 打印动作
 *
 * @export
 * @class PrintAction
 * @implements {Action}
 */
var PrintAction = /** @class */ (function () {
    function PrintAction() {
    }
    PrintAction.prototype.run = function (action, renderer, event) {
        var _a, _b, _c, _d;
        return tslib.__awaiter(this, void 0, void 0, function () {
            var targetComponent, element, elements_1;
            return tslib.__generator(this, function (_e) {
                // 兼容之前的 word 打印
                if (action.componentId) {
                    targetComponent = (_a = event.context.scoped) === null || _a === void 0 ? void 0 : _a.getComponentById(action.componentId);
                    (_b = targetComponent === null || targetComponent === void 0 ? void 0 : targetComponent.doAction) === null || _b === void 0 ? void 0 : _b.call(targetComponent, action, event.data, true, action.args);
                    return [2 /*return*/];
                }
                if ((_c = action.args) === null || _c === void 0 ? void 0 : _c.id) {
                    element = document.querySelector("[data-id='".concat(action.args.id, "']"));
                    if (element) {
                        printElement.printElements([element]);
                    }
                }
                else if ((_d = action.args) === null || _d === void 0 ? void 0 : _d.ids) {
                    elements_1 = [];
                    action.args.ids.forEach(function (id) {
                        var element = document.querySelector("[data-id='".concat(id, "']"));
                        if (element) {
                            elements_1.push(element);
                        }
                    });
                    printElement.printElements(elements_1);
                }
                return [2 /*return*/];
            });
        });
    };
    return PrintAction;
}());
Action.registerAction('print', new PrintAction());

exports.PrintAction = PrintAction;
