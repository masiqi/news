/**
 * amis-core v6.13.0
 * Copyright 2018-2025 fex
 */

import { __awaiter, __generator } from 'tslib';
import 'amis-formula';
import 'moment';
import { setVariable, cloneObject } from '../utils/object.js';
import '../utils/memoryParse.js';
import '@rc-component/mini-decimal';
import { resolveVariableAndFilterForAsync } from '../utils/resolveVariableAndFilterForAsync.js';
import 'lodash/isPlainObject';
import '../utils/filter.js';
import '../utils/api.js';
import 'file-saver';
import '../utils/browser.js';
import '../utils/ColorScale.js';
import 'react';
import 'lodash/chunk';
import '../utils/DataSchema.js';
import '../utils/DataScope.js';
import '../utils/debug.js';
import 'react-dom';
import '../utils/helper.js';
import '../utils/errors.js';
import '../utils/tpl.js';
import { isExpression } from '../utils/formula.js';
import 'lodash/isObject';
import '../utils/image.js';
import 'lodash/isEqual';
import { registerAction } from './Action.js';
import 'lodash/debounce';
import '../utils/resize-sensor.js';
import 'react-overlays/useRootClose';
import '../utils/SimpleMap.js';
import 'lodash/mapValues';
import 'lodash/camelCase';
import 'lodash/cloneDeep';
import 'lodash/map';
import 'lodash/isEmpty';
import 'lodash/kebabCase';
import 'uncontrollable';
import 'hoist-non-react-statics';
import '../utils/validations.js';
import '../utils/resolveCondition.js';
import 'mobx';
import '../utils/Animation.js';

/**
 * 事件本身相关动作
 *
 * @export
 * @class EventAction
 * @implements {Action}
 */
var EventAction = /** @class */ (function () {
    function EventAction() {
    }
    EventAction.prototype.run = function (action, renderer, event) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var _b, data, value;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _b = action.actionType;
                        switch (_b) {
                            case 'setEventData': return [3 /*break*/, 1];
                            case 'preventDefault': return [3 /*break*/, 5];
                            case 'stopPropagation': return [3 /*break*/, 6];
                        }
                        return [3 /*break*/, 7];
                    case 1:
                        if (!(typeof ((_a = action.args) === null || _a === void 0 ? void 0 : _a.key) === 'string')) return [3 /*break*/, 4];
                        data = cloneObject(event.data);
                        value = action.args.value;
                        if (!isExpression(value)) return [3 /*break*/, 3];
                        return [4 /*yield*/, resolveVariableAndFilterForAsync(value, event.data, '| raw')];
                    case 2:
                        value = _c.sent();
                        _c.label = 3;
                    case 3:
                        setVariable(data, action.args.key, value);
                        event.setData(data);
                        _c.label = 4;
                    case 4: return [3 /*break*/, 7];
                    case 5:
                        event.preventDefault();
                        return [3 /*break*/, 7];
                    case 6:
                        event.stopPropagation();
                        return [3 /*break*/, 7];
                    case 7: return [2 /*return*/];
                }
            });
        });
    };
    return EventAction;
}());
registerAction('setEventData', new EventAction());
registerAction('preventDefault', new EventAction());
registerAction('stopPropagation', new EventAction());

export { EventAction };
