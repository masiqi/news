/**
 * amis-core v6.13.0
 * Copyright 2018-2025 fex
 */

import { __values } from 'tslib';
import isPlainObject from 'lodash/isPlainObject';

function labelToString(label) {
    var e_1, _a;
    var type = typeof label;
    if (type === 'undefined' || label === null) {
        // render placeholder
        return '-';
    }
    if (type === 'string') {
        return label;
    }
    else if (type === 'number') {
        return "".concat(label);
    }
    else if (type === 'boolean') {
        return String(label);
    }
    if (isPlainObject(label)) {
        try {
            for (var _b = __values(['__title', 'label', Object.keys(label)[0]]), _c = _b.next(); !_c.done; _c = _b.next()) {
                var key = _c.value;
                if (typeof label[key] === 'string') {
                    return label[key];
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    }
    return 'invalid label';
}

export { labelToString };
