/**
 * amis-core v6.13.0
 * Copyright 2018-2025 fex
 */

import 'tslib';
export { getFilters, registerFilter, registerFunction } from 'amis-formula';
import 'moment';
import 'lodash/isPlainObject';
import './memoryParse.js';
import '@rc-component/mini-decimal';
import './filter.js';
export { addApiRequestAdaptor, addApiResponseAdaptor, addApiResponseAdator, buildApi, callStrFunction, clearApiCache, getApiCache, isApiOutdated, isApiOutdatedWithData, isEffectiveApi, isSameApi, isValidApi, jsFetcher, jsonpFetcher, normalizeApi, normalizeApiResponseData, removeApiRequestAdaptor, removeApiResponseAdaptor, responseAdaptor, setApiCache, shouldBlockedBySendOnApi, str2AsyncFunction, str2function, wrapAdaptor, wrapFetcher } from './api.js';
import 'file-saver';
export { chromeVersion, isSafari } from './browser.js';
export { ColorScale } from './ColorScale.js';
import 'react';
import 'lodash/chunk';
export { DataSchema } from './DataSchema.js';
export { DATASCHEMA_TYPE_MAP, DataScope } from './DataScope.js';
export { DebugWrapper, JsonView, debug, disableDebug, enableDebug, safeStringify, traceProps, warning } from './debug.js';
import 'react-dom';
export { JSONTraverse, JSONValueMap, SkipOperation, TEST_ID_KEY, TestIdBuilder, ValidateError, __uri, anyChanged, applyFilters, autobind, buildTrackExpression, bulkBindFunctions, camel, chainEvents, chainFunctions, changedEffect, convertArrayValueToMoment, countTree, detectPropValueChanged, difference, differenceFromAll, eachTree, evalTrackExpression, everyTree, filterTree, findIndex, findObjectsWithKey, findTree, findTreeAll, findTreeIndex, flattenTree, flattenTreeWithLeafNodes, formateCheckThemeCss, formateId, getLevelFromClassName, getPropValue, getRange, getScrollParent, getScrollbarWidth, getTree, getTreeAncestors, getTreeDepth, getTreeParent, getWidthRate, guid, hasAbility, hasFile, hasOwnPropertyInPath, hasVisibleExpression, hashCode, immutableExtends, importLazyComponent, injectPropsToObject, isArrayChildrenModified, isBreakpoint, isClickOnInput, isDisabled, isEmpty, isMobile, isMobileDevice, isNumeric, isObjectShallowModified, isSuperDataModified, isUnfolded, isVisible, lcFirst, loadScript, loadStyle, makeColumnClassBuild, makeHorizontalDeeper, mapObject, mapTree, noop, normalizeNodePath, object2formData, omitControls, padArr, parsePrimitiveQueryString, parseQuery, pickEventsProps, preventDefault, promisify, qsparse, qsstringify, range, removeHTMLTag, repeatCount, replaceUrlParams, rmUndefined, someTree, sortArray, spliceTree, supportsMjs, syncDataFromSuper, ucFirst, until, uuid, uuidv4, visibilityFilter } from './helper.js';
export { ServerError } from './errors.js';
export { asyncFilter, evalExpression, evalExpressionWithConditionBuilder, evalExpressionWithConditionBuilderAsync, evalJS, filter, registerTplEnginer, setCustomEvalExpression, setCustomEvalJs } from './tpl.js';
import 'lodash/isObject';
import 'lodash/isString';
import 'lodash/isBoolean';
export { getImageDimensions, toDataURL } from './image.js';
import 'lodash/isEqual';
import '../actions/Action.js';
import 'lodash/debounce';
export { appearSensor, getComputedStyle, resizeSensor, resizeSensorV2 } from './resize-sensor.js';
import 'react-overlays/useRootClose';
export { SimpleMap } from './SimpleMap.js';
import 'lodash/mapValues';
import 'lodash/camelCase';
import 'lodash/cloneDeep';
import 'lodash/map';
import 'lodash/isEmpty';
import 'lodash/kebabCase';
import 'uncontrollable';
import 'hoist-non-react-statics';
export { addRule, str2rules, validate, validateMessages, validateObject, validations } from './validations.js';
export { getConditionComputers, registerConditionComputer, resolveCondition, resolveConditionAsync, setConditionComputeErrorHandler } from './resolveCondition.js';
import 'mobx';
export { default as animation } from './Animation.js';
