/**
 * amis-core v6.13.0
 * Copyright 2018-2025 fex
 */

import { __assign } from 'tslib';
import kebabCase from 'lodash/kebabCase';

var StyleManager = /** @class */ (function () {
    function StyleManager() {
        this.styles = {};
        this.styleDom = document.createElement('style');
        this.styleDom.id = 'amis-styles';
        document.head.appendChild(this.styleDom);
    }
    StyleManager.prototype.updateStyle = function (style) {
        var _this = this;
        Object.keys(style).forEach(function (className) {
            if (!_this.styles[className]) {
                _this.styles[className] = style[className];
            }
            else {
                _this.styles[className] = __assign(__assign({}, _this.styles[className]), style[className]);
            }
        });
        this.updateStyleDom();
    };
    StyleManager.prototype.removeStyles = function (id) {
        delete this.styles[id];
        this.updateStyleDom();
    };
    StyleManager.prototype.updateStyleDom = function () {
        var _this = this;
        var styleText = Object.keys(this.styles)
            .map(function (id) {
            var style = _this.styles[id];
            return Object.keys(style)
                .map(function (className) {
                return "".concat(className, " {").concat(Object.keys(style[className])
                    .map(function (propName) {
                    return "".concat(kebabCase(propName), ": ").concat(style[className][propName], ";");
                })
                    .join(''), "}");
            })
                .join('');
        })
            .join('');
        this.styleDom.innerHTML = styleText;
        this.styleText = styleText;
    };
    return StyleManager;
}());
var styleManager = new StyleManager();

export { styleManager as default };
