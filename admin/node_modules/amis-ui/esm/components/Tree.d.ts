/**
 * @file Tree
 * @description 树形组件
 *
 * 情况列举：
 * 1. 选中父节点时，连带选中子节点 : autoChildren = true 前提条件
 *    1.1 交互
 *        1.1.1 子节点不可以取消勾选 cascade = false,
 *        1.1.2 子节点可以取消勾选 cascade = true, withChildren 失效
 *    1.2 数据（state.value）
 *        1.2.1 只提交父节点数据 cascade = false
 *        1.2.2 只提交子节点的数据  onlyChildren = true
 *        1.2.3 全部数据提交 withChildren = true || cascade = true
 *
 * 2. 选中节点时，只选中当前节点，没有联动效果
 *
 * @author fex
 */
/// <reference types="hoist-non-react-statics" />
import React from 'react';
import { TestIdBuilder } from 'amis-core';
import { Option, Options } from './Select';
import { ThemeProps } from 'amis-core';
import { LocaleProps } from 'amis-core';
import { SpinnerExtraProps } from './Spinner';
import { ItemRenderStates } from './Selection';
interface IDropIndicator {
    left: number;
    top: number;
    width: number;
    height?: number;
}
export interface IDropInfo {
    dragNode: Option | null;
    node: Option;
    position: 'top' | 'bottom' | 'self';
    indicator: IDropIndicator;
}
type NodeBehaviorType = 'unfold' | 'check';
interface TreeSelectorProps extends ThemeProps, LocaleProps, SpinnerExtraProps {
    highlightTxt?: string;
    onRef?: any;
    showIcon?: boolean;
    initiallyOpen?: boolean;
    unfoldedLevel?: number;
    showRadio?: boolean;
    multiple?: boolean;
    disabled?: boolean;
    withChildren?: boolean;
    onlyChildren?: boolean;
    onlyLeaf?: boolean;
    labelField: string;
    valueField: string;
    iconField: string;
    deferField: string;
    unfoldedField: string;
    foldedField: string;
    disabledField: string;
    showOutline?: boolean;
    className?: string;
    itemClassName?: string;
    joinValues?: boolean;
    extractValue?: boolean;
    delimiter?: string;
    options: Options;
    value: any;
    onChange: Function;
    placeholder?: string;
    hideRoot?: boolean;
    rootLabel?: string;
    rootValue?: any;
    enableNodePath?: boolean;
    pathSeparator?: string;
    nodePath: any[];
    autoCheckChildren: boolean;
    /**
     * 子节点取消时自定去掉父节点的值，默认为false
     */
    autoCancelParent?: boolean;
    cascade?: boolean;
    /**
     * 节点行为配置，默认为选中
     */
    nodeBehavior?: NodeBehaviorType[];
    /**
     * 是否使用 disable 字段
     */
    selfDisabledAffectChildren?: boolean;
    minLength?: number;
    maxLength?: number;
    bultinCUD?: boolean;
    rootCreatable?: boolean;
    rootCreateTip?: string;
    creatable?: boolean;
    createTip?: string;
    virtualThreshold?: number;
    onAdd?: (idx?: number | Array<number>, value?: any, skipForm?: boolean) => void;
    editable?: boolean;
    editTip?: string;
    onEdit?: (value: Option, origin?: Option, skipForm?: boolean) => void;
    removable?: boolean;
    removeTip?: string;
    onDelete?: (value: Option) => void;
    onDeferLoad?: (option: Option) => void;
    onExpandTree?: (nodePathArr: any[]) => void;
    draggable?: boolean;
    onMove?: (dropInfo: IDropInfo) => void;
    itemRender?: (option: Option, states: ItemRenderStates) => JSX.Element;
    checkAll?: boolean;
    checkAllLabel?: string;
    enableDefaultIcon?: boolean;
    onHandleNodeClick?: (option: Option) => void;
    /**
     * 节点操作栏区域
     */
    itemActionsRender?: (item: Option, states: any) => JSX.Element;
    testIdBuilder?: TestIdBuilder;
    actionClassName?: string;
    height?: number;
}
interface TreeSelectorState {
    value: Array<any>;
    valueSet: Set<any>;
    inputValue: string;
    addingParent: Option | null;
    isAdding: boolean;
    isEditing: boolean;
    editingItem: Option | null;
    flattenedOptions: Option[];
    dropIndicator?: IDropIndicator;
    virtualHeight: number;
    itemHeight: number;
}
export declare class TreeSelector extends React.Component<TreeSelectorProps, TreeSelectorState> {
    static defaultProps: {
        showIcon: boolean;
        showOutline: boolean;
        initiallyOpen: boolean;
        unfoldedLevel: number;
        showRadio: boolean;
        multiple: boolean;
        disabled: boolean;
        withChildren: boolean;
        onlyChildren: boolean;
        labelField: string;
        valueField: string;
        iconField: string;
        deferField: string;
        unfoldedField: string;
        foldedField: string;
        disabledField: string;
        joinValues: boolean;
        extractValue: boolean;
        delimiter: string;
        hideRoot: boolean;
        rootLabel: string;
        rootValue: number;
        autoCheckChildren: boolean;
        autoCancelParent: boolean;
        cascade: boolean;
        selfDisabledAffectChildren: boolean;
        rootCreateTip: string;
        createTip: string;
        editTip: string;
        removeTip: string;
        enableNodePath: boolean;
        pathSeparator: string;
        nodePath: never[];
        virtualThreshold: number;
        enableDefaultIcon: boolean;
    };
    unfolded: WeakMap<Object, boolean>;
    relations: WeakMap<Option, Option>;
    levels: WeakMap<Option, number>;
    dragNode: Option | null;
    dropInfo: IDropInfo | null;
    startPoint: {
        x: number;
        y: number;
    };
    root: React.RefObject<HTMLDivElement>;
    virtualListRef: HTMLDivElement | null;
    unSensor?: () => void;
    constructor(props: TreeSelectorProps);
    componentDidMount(): void;
    componentDidUpdate(prevProps: TreeSelectorProps, prevState: TreeSelectorState): void;
    componentWillUnmount(): void;
    /**
     * 展开懒加载节点的父节点
     */
    expandLazyLoadNodes(): void;
    virtualListRefSetter(ref: HTMLDivElement | null): void;
    syncUnFolded(props: TreeSelectorProps, unfoldedLevel?: number, initial?: boolean): WeakMap<Object, boolean>;
    toggleUnfolded(node: any): void;
    isUnfolded(node: any): boolean;
    clearSelect(): void;
    /**
     * enableNodePath为true时，将label和value转换成node path格式
     */
    transform2NodePath(value: any): any;
    handleSelect(node: any, value?: any): void;
    handleItemClick(node: any, checked: boolean): void;
    handleCheck(item: any, checked: boolean): void;
    fireChange(value: Option[]): void;
    handleAdd(parent?: Option | null): void;
    handleEdit(item: Option): void;
    handleRemove(item: Option): void;
    handleInputChange(e: React.ChangeEvent<HTMLInputElement>): void;
    handleConfirm(): void;
    handleCancel(): void;
    renderInput(prfix?: JSX.Element | null, testIdBuilder?: TestIdBuilder): React.JSX.Element;
    getOffsetPosition(element: HTMLElement): {
        left: number;
        top: number;
    };
    getDropInfo(e: React.DragEvent<Element>, node: Option): IDropInfo;
    updateDropIndicator(e: React.DragEvent<Element>, node: Option): void;
    onDragStart(node: Option): (e: React.DragEvent<Element>) => void;
    onDragOver(node: Option): (e: React.DragEvent<Element>) => void;
    onDragEnd(dragNode: Option): (e: React.DragEvent<Element>) => void;
    /**
     * 将树形接口转换为平铺结构，以支持虚拟列表
     * TODO: this.unfolded => reaction 更加合理
     */
    flattenOptions(props?: TreeSelectorProps, initial?: boolean): void | Option[];
    /**
     * 判断父元素是否勾选
     * TODO: 递归可能需要优化
     */
    isParentChecked(item?: Option): boolean;
    /**
     * 判断 子元素 是否全部选中
     */
    isItemChildrenChecked(item: Option): boolean;
    /**
     * 判断子元素 部分勾选
     */
    isItemChildrenPartialChecked(item: Option, checked: boolean): boolean;
    /**
     * 判断元素是否选中：checked
     */
    isItemChecked(item?: Option): boolean;
    /**
     * item 是否 disabled 状态
     * props.disabled === true return;
     *
     */
    isItemDisabled(item: Option, checked: boolean): boolean;
    renderItem({ index, style, ...rest }: {
        index: number;
        style?: Record<string, any>;
        ref?: (node: HTMLElement | null) => void;
    }): React.JSX.Element | null;
    isEmptyOrNotExist(obj: any): boolean;
    getAvailableOptions(): Option[];
    handleCheckAll(availableOptions: Option[], checkedAll: boolean): void;
    handleToggle(bool?: boolean): void;
    renderCheckAll(): React.JSX.Element | null;
    styleGetter(node: HTMLElement | null): void;
    renderList(list: Options): React.JSX.Element | null;
    handleVirtualHeight(): void;
    render(): React.JSX.Element;
}
declare const _default: {
    new (props: Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
        multiple?: boolean | undefined;
        valueField?: string | undefined;
        labelField?: string | undefined;
        disabled?: boolean | undefined;
        joinValues?: boolean | undefined;
        extractValue?: boolean | undefined;
        delimiter?: string | undefined;
        pathSeparator?: string | undefined;
        virtualThreshold?: number | undefined;
        showIcon?: boolean | undefined;
        deferField?: string | undefined;
        initiallyOpen?: boolean | undefined;
        unfoldedLevel?: number | undefined;
        showRadio?: boolean | undefined;
        withChildren?: boolean | undefined;
        onlyChildren?: boolean | undefined;
        iconField?: string | undefined;
        unfoldedField?: string | undefined;
        foldedField?: string | undefined;
        disabledField?: string | undefined;
        showOutline?: boolean | undefined;
        hideRoot?: boolean | undefined;
        rootLabel?: string | undefined;
        rootValue?: any;
        enableNodePath?: boolean | undefined;
        nodePath?: any[] | undefined;
        autoCheckChildren?: boolean | undefined;
        autoCancelParent?: boolean | undefined;
        cascade?: boolean | undefined;
        selfDisabledAffectChildren?: boolean | undefined;
        rootCreateTip?: string | undefined;
        createTip?: string | undefined;
        editTip?: string | undefined;
        removeTip?: string | undefined;
        enableDefaultIcon?: boolean | undefined;
    } & {} & {
        locale?: string | undefined;
        translate?: ((str: string, ...args: any[]) => string) | undefined;
    }, keyof ThemeProps> & import("packages/amis-core/lib/theme").ThemeOuterProps): {
        ref: any;
        childRef(ref: any): void;
        getWrappedInstance(): any;
        render(): React.JSX.Element;
        context: unknown;
        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("packages/amis-core/lib/theme").ThemeOuterProps>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callback?: (() => void) | undefined): void;
        readonly props: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("packages/amis-core/lib/theme").ThemeOuterProps>;
        state: Readonly<{}>;
        refs: {
            [key: string]: React.ReactInstance;
        };
        componentDidMount?(): void;
        shouldComponentUpdate?(nextProps: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("packages/amis-core/lib/theme").ThemeOuterProps>, nextState: Readonly<{}>, nextContext: any): boolean;
        componentWillUnmount?(): void;
        componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
        getSnapshotBeforeUpdate?(prevProps: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("packages/amis-core/lib/theme").ThemeOuterProps>, prevState: Readonly<{}>): any;
        componentDidUpdate?(prevProps: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("packages/amis-core/lib/theme").ThemeOuterProps>, prevState: Readonly<{}>, snapshot?: any): void;
        componentWillMount?(): void;
        UNSAFE_componentWillMount?(): void;
        componentWillReceiveProps?(nextProps: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("packages/amis-core/lib/theme").ThemeOuterProps>, nextContext: any): void;
        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("packages/amis-core/lib/theme").ThemeOuterProps>, nextContext: any): void;
        componentWillUpdate?(nextProps: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("packages/amis-core/lib/theme").ThemeOuterProps>, nextState: Readonly<{}>, nextContext: any): void;
        UNSAFE_componentWillUpdate?(nextProps: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("packages/amis-core/lib/theme").ThemeOuterProps>, nextState: Readonly<{}>, nextContext: any): void;
    };
    displayName: string;
    contextType: React.Context<string>;
    ComposedComponent: React.ComponentType<{
        new (props: Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }): {
            ref: any;
            childRef(ref: any): void;
            getWrappedInstance(): any;
            render(): React.JSX.Element;
            context: unknown;
            setState<K_1 extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>) => {} | Pick<{}, K_1> | null) | Pick<{}, K_1> | null, callback?: (() => void) | undefined): void;
            forceUpdate(callback?: (() => void) | undefined): void;
            readonly props: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>;
            state: Readonly<{}>;
            refs: {
                [key: string]: React.ReactInstance;
            };
            componentDidMount?(): void;
            shouldComponentUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextState: Readonly<{}>, nextContext: any): boolean;
            componentWillUnmount?(): void;
            componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
            getSnapshotBeforeUpdate?(prevProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, prevState: Readonly<{}>): any;
            componentDidUpdate?(prevProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, prevState: Readonly<{}>, snapshot?: any): void;
            componentWillMount?(): void;
            UNSAFE_componentWillMount?(): void;
            componentWillReceiveProps?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextContext: any): void;
            UNSAFE_componentWillReceiveProps?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextContext: any): void;
            componentWillUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextState: Readonly<{}>, nextContext: any): void;
            UNSAFE_componentWillUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextState: Readonly<{}>, nextContext: any): void;
        };
        displayName: string;
        contextType: React.Context<string>;
        ComposedComponent: React.ComponentType<typeof TreeSelector>;
    } & import("hoist-non-react-statics").NonReactStatics<typeof TreeSelector, {}> & {
        ComposedComponent: typeof TreeSelector;
    }>;
} & import("hoist-non-react-statics").NonReactStatics<{
    new (props: Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
        multiple?: boolean | undefined;
        valueField?: string | undefined;
        labelField?: string | undefined;
        disabled?: boolean | undefined;
        joinValues?: boolean | undefined;
        extractValue?: boolean | undefined;
        delimiter?: string | undefined;
        pathSeparator?: string | undefined;
        virtualThreshold?: number | undefined;
        showIcon?: boolean | undefined;
        deferField?: string | undefined;
        initiallyOpen?: boolean | undefined;
        unfoldedLevel?: number | undefined;
        showRadio?: boolean | undefined;
        withChildren?: boolean | undefined;
        onlyChildren?: boolean | undefined;
        iconField?: string | undefined;
        unfoldedField?: string | undefined;
        foldedField?: string | undefined;
        disabledField?: string | undefined;
        showOutline?: boolean | undefined;
        hideRoot?: boolean | undefined;
        rootLabel?: string | undefined;
        rootValue?: any;
        enableNodePath?: boolean | undefined;
        nodePath?: any[] | undefined;
        autoCheckChildren?: boolean | undefined;
        autoCancelParent?: boolean | undefined;
        cascade?: boolean | undefined;
        selfDisabledAffectChildren?: boolean | undefined;
        rootCreateTip?: string | undefined;
        createTip?: string | undefined;
        editTip?: string | undefined;
        removeTip?: string | undefined;
        enableDefaultIcon?: boolean | undefined;
    } & {} & {
        locale?: string | undefined;
        translate?: ((str: string, ...args: any[]) => string) | undefined;
    }): {
        ref: any;
        childRef(ref: any): void;
        getWrappedInstance(): any;
        render(): React.JSX.Element;
        context: unknown;
        setState<K_1 extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>) => {} | Pick<{}, K_1> | null) | Pick<{}, K_1> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callback?: (() => void) | undefined): void;
        readonly props: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>;
        state: Readonly<{}>;
        refs: {
            [key: string]: React.ReactInstance;
        };
        componentDidMount?(): void;
        shouldComponentUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>, nextState: Readonly<{}>, nextContext: any): boolean;
        componentWillUnmount?(): void;
        componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
        getSnapshotBeforeUpdate?(prevProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>, prevState: Readonly<{}>): any;
        componentDidUpdate?(prevProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>, prevState: Readonly<{}>, snapshot?: any): void;
        componentWillMount?(): void;
        UNSAFE_componentWillMount?(): void;
        componentWillReceiveProps?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>, nextContext: any): void;
        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>, nextContext: any): void;
        componentWillUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>, nextState: Readonly<{}>, nextContext: any): void;
        UNSAFE_componentWillUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>, nextState: Readonly<{}>, nextContext: any): void;
    };
    displayName: string;
    contextType: React.Context<string>;
    ComposedComponent: React.ComponentType<typeof TreeSelector>;
} & import("hoist-non-react-statics").NonReactStatics<typeof TreeSelector, {}> & {
    ComposedComponent: typeof TreeSelector;
}, {}> & {
    ComposedComponent: {
        new (props: Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
            multiple?: boolean | undefined;
            valueField?: string | undefined;
            labelField?: string | undefined;
            disabled?: boolean | undefined;
            joinValues?: boolean | undefined;
            extractValue?: boolean | undefined;
            delimiter?: string | undefined;
            pathSeparator?: string | undefined;
            virtualThreshold?: number | undefined;
            showIcon?: boolean | undefined;
            deferField?: string | undefined;
            initiallyOpen?: boolean | undefined;
            unfoldedLevel?: number | undefined;
            showRadio?: boolean | undefined;
            withChildren?: boolean | undefined;
            onlyChildren?: boolean | undefined;
            iconField?: string | undefined;
            unfoldedField?: string | undefined;
            foldedField?: string | undefined;
            disabledField?: string | undefined;
            showOutline?: boolean | undefined;
            hideRoot?: boolean | undefined;
            rootLabel?: string | undefined;
            rootValue?: any;
            enableNodePath?: boolean | undefined;
            nodePath?: any[] | undefined;
            autoCheckChildren?: boolean | undefined;
            autoCancelParent?: boolean | undefined;
            cascade?: boolean | undefined;
            selfDisabledAffectChildren?: boolean | undefined;
            rootCreateTip?: string | undefined;
            createTip?: string | undefined;
            editTip?: string | undefined;
            removeTip?: string | undefined;
            enableDefaultIcon?: boolean | undefined;
        } & {} & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }): {
            ref: any;
            childRef(ref: any): void;
            getWrappedInstance(): any;
            render(): React.JSX.Element;
            context: unknown;
            setState<K_1 extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>) => {} | Pick<{}, K_1> | null) | Pick<{}, K_1> | null, callback?: (() => void) | undefined): void;
            forceUpdate(callback?: (() => void) | undefined): void;
            readonly props: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>;
            state: Readonly<{}>;
            refs: {
                [key: string]: React.ReactInstance;
            };
            componentDidMount?(): void;
            shouldComponentUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextState: Readonly<{}>, nextContext: any): boolean;
            componentWillUnmount?(): void;
            componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
            getSnapshotBeforeUpdate?(prevProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, prevState: Readonly<{}>): any;
            componentDidUpdate?(prevProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, prevState: Readonly<{}>, snapshot?: any): void;
            componentWillMount?(): void;
            UNSAFE_componentWillMount?(): void;
            componentWillReceiveProps?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextContext: any): void;
            UNSAFE_componentWillReceiveProps?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextContext: any): void;
            componentWillUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextState: Readonly<{}>, nextContext: any): void;
            UNSAFE_componentWillUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "height" | "onChange" | "className" | "style" | "creatable" | "options" | "value" | "placeholder" | "checkAll" | "checkAllLabel" | "onAdd" | "editable" | "onEdit" | "removable" | "onDelete" | "testIdBuilder" | "classnames" | "classPrefix" | "theme" | "mobileUI" | "loadingConfig" | "maxLength" | "minLength" | "draggable" | "itemClassName" | "highlightTxt" | "onRef" | "onDeferLoad" | "itemRender" | "onlyLeaf" | "nodeBehavior" | "bultinCUD" | "rootCreatable" | "onExpandTree" | "onMove" | "onHandleNodeClick" | "itemActionsRender" | "actionClassName"> & {
                multiple?: boolean | undefined;
                valueField?: string | undefined;
                labelField?: string | undefined;
                disabled?: boolean | undefined;
                joinValues?: boolean | undefined;
                extractValue?: boolean | undefined;
                delimiter?: string | undefined;
                pathSeparator?: string | undefined;
                virtualThreshold?: number | undefined;
                showIcon?: boolean | undefined;
                deferField?: string | undefined;
                initiallyOpen?: boolean | undefined;
                unfoldedLevel?: number | undefined;
                showRadio?: boolean | undefined;
                withChildren?: boolean | undefined;
                onlyChildren?: boolean | undefined;
                iconField?: string | undefined;
                unfoldedField?: string | undefined;
                foldedField?: string | undefined;
                disabledField?: string | undefined;
                showOutline?: boolean | undefined;
                hideRoot?: boolean | undefined;
                rootLabel?: string | undefined;
                rootValue?: any;
                enableNodePath?: boolean | undefined;
                nodePath?: any[] | undefined;
                autoCheckChildren?: boolean | undefined;
                autoCancelParent?: boolean | undefined;
                cascade?: boolean | undefined;
                selfDisabledAffectChildren?: boolean | undefined;
                rootCreateTip?: string | undefined;
                createTip?: string | undefined;
                editTip?: string | undefined;
                removeTip?: string | undefined;
                enableDefaultIcon?: boolean | undefined;
            } & {} & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextState: Readonly<{}>, nextContext: any): void;
        };
        displayName: string;
        contextType: React.Context<string>;
        ComposedComponent: React.ComponentType<typeof TreeSelector>;
    } & import("hoist-non-react-statics").NonReactStatics<typeof TreeSelector, {}> & {
        ComposedComponent: typeof TreeSelector;
    };
};
export default _default;
