/**
 * amis v6.13.0
 * build time: 2025-08-12
 * Copyright 2018-2025 baidu
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var tslib = require('tslib');
require('react');
var Cell = require('./Cell.js');
var reactIntersectionObserver = require('react-intersection-observer');
var mobxReactLite = require('mobx-react-lite');

var __react_jsx__ = require('react');
var _J$X_ = (__react_jsx__["default"] || __react_jsx__).createElement;
var _J$F_ = (__react_jsx__["default"] || __react_jsx__).Fragment;


;var VCell = mobxReactLite.observer(function VCell(props) {
  var cx = props.classnames;
  var column = props.column;
  var _a = reactIntersectionObserver.useInView({
      threshold: 0,
      triggerOnce: true,
      onChange: column.markAppeared,
      skip: column.appeared
    }),
    ref = _a.ref,
    inView = _a.inView;
  return inView || column.appeared ? _J$X_(Cell["default"], tslib.__assign({}, props)) : _J$X_("td", {
    ref: ref,
    rowSpan: props.rowSpan > 1 ? props.rowSpan : undefined,
    style: props.style,
    className: props.className
  }, _J$X_("div", {
    className: cx('Table-emptyBlock')
  }, "\u00A0"));
});

exports["default"] = VCell;
